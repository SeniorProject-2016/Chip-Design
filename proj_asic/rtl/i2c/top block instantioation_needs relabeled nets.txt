`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    12:12:03 11/11/2015 
// Design Name: 
// Module Name:    i2c_Top_Level 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module i2c_Top_Level(
    input [2:0] i2c_addr_bits,
    input i2c_sda_in,
    input i2c_scl,
    output i2c_op,
    output i2c_xfc_write,
    output [10:0] i2c_addr,
    output [7:0] i2c_wdata,
    input [7:0] i2c_rdata,
    input i2c_xfc_read,
	 output i2c_sda_out,
    input clk,
    input reset
    );



/*Deserializer instance_name (
    .Clock				(clk), 
    .Reset				(reset), 
    .i2c_sda_raw		(i2c_sda_in), 
    .i2c_scl_raw		(i2c_scl), 
    .i2c_addr_bits	(i2c_addr_bits), 
    .i2c_RW				(i2c_RW), 
    .i2c_addr			(i2c_addr_in), 
    .addr_ack			(), 
    .slave_ack			(), 
    .data_ack			(), 
    .serial_data		(), 
    .stop_out			()
    );
	 
Sequencer instance_name (
    .Clock				(clk), 
    .i2c_RW				(i2c_RW), 
    .i2c_op				(i2c_op), 
    .i2c_addr_in		(i2c_addr), 
    .i2c_addr_out		(i2c_addr), 
    .i2c_data_in		(), 
    .i2c_data_out		(i2c_wdata), 
    .i2c_addr_ack		(), 
    .i2c_data_ack		(), 
    .i2c_xfc			(), 
    .reset				(reset), 
    .stop				(stop)
    );
	 
Serializer instance_name (
    .i2c_scl			(i2c_scl), 
    .i2c_sda			(i2c_sda_in), 
    .i2c_sda_out		(i2c_sda_out), 
    .data_ack			(), 
    .slave_ack			(), 
    .addr_ack			(), 
    .Clock				(clk), 
    .reset				(reset), 
    .i2c_rdata			(i2c_rdata), 
    .i2c_xfc_read		(i2c_xfc_read), 
    .stop_in			()
    );*/

endmodule