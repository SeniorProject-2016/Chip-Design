////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : i2c_Top_Block.vf
// /___/   /\     Timestamp : 11/11/2015 10:03:16
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog C:/Users/formanw2/Downloads/i2c_Top_Blcok/i2c_Top_Blcok/i2c_Top_Block.vf -w C:/Users/formanw2/Downloads/i2c_Top_Blcok/i2c_Top_Blcok/i2c_Top_Block.sch
//Design Name: i2c_Top_Block
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module i2c_Top_Block(Clock, 
                     i2c_addr_bits, 
                     i2c_rdata, 
                     i2c_SCL, 
                     i2c_SDA_in, 
                     i2c_xfc_read, 
                     Reset, 
                     i2c_addr_out, 
                     i2c_data_out, 
                     i2c_op, 
                     i2c_SDA_out, 
                     i2c_xfc);

    input Clock;
    input [2:0] i2c_addr_bits;
    input [7:0] i2c_rdata;
    input i2c_SCL;
    input i2c_SDA_in;
    input i2c_xfc_read;
    input Reset;
   output [10:0] i2c_addr_out;
   output [7:0] i2c_data_out;
   output i2c_op;
   output i2c_SDA_out;
   output i2c_xfc;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire [10:0] XLXN_5;
   wire [7:0] XLXN_6;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_63;
   wire XLXN_67;
   wire XLXN_68;
   
   Sequencer  XLXI_1 (.Clock(XLXN_63), 
                     .i2c_addr_ack(XLXN_2), 
                     .i2c_addr_in(XLXN_5[10:0]), 
                     .i2c_data_ack(XLXN_3), 
                     .i2c_data_in(XLXN_6[7:0]), 
                     .i2c_RW(XLXN_1), 
                     .reset(XLXN_24), 
                     .stop(XLXN_27), 
                     .i2c_addr_out(i2c_addr_out[10:0]), 
                     .i2c_data_out(i2c_data_out[7:0]), 
                     .i2c_op(i2c_op), 
                     .i2c_xfc(i2c_xfc));
   Deserializer  XLXI_2 (.Clock(XLXN_63), 
                        .i2c_addr_bits(i2c_addr_bits[2:0]), 
                        .i2c_scl_raw(XLXN_67), 
                        .i2c_sda_raw(XLXN_68), 
                        .Reset(XLXN_24), 
                        .addr_ack(XLXN_2), 
                        .data_ack(XLXN_3), 
                        .i2c_addr(XLXN_5[10:0]), 
                        .i2c_RW(XLXN_1), 
                        .serial_data(XLXN_6[7:0]), 
                        .slave_ack(XLXN_28), 
                        .stop_out(XLXN_27));
   BUFH  XLXI_4 (.I(Clock), 
                .O(XLXN_63));
   BUFH  XLXI_5 (.I(Reset), 
                .O(XLXN_24));
   Serializer  XLXI_7 (.addr_ack(XLXN_2), 
                      .Clock(XLXN_63), 
                      .data_ack(XLXN_3), 
                      .i2c_rdata(i2c_rdata[7:0]), 
                      .i2c_scl(XLXN_67), 
                      .i2c_sda(XLXN_68), 
                      .i2c_xfc_read(i2c_xfc_read), 
                      .reset(XLXN_24), 
                      .slave_ack(XLXN_28), 
                      .stop_in(XLXN_27), 
                      .i2c_sda_out(i2c_SDA_out));
   BUFH  XLXI_13 (.I(i2c_SCL), 
                 .O(XLXN_67));
   BUFH  XLXI_14 (.I(i2c_SDA_in), 
                 .O(XLXN_68));
endmodule
