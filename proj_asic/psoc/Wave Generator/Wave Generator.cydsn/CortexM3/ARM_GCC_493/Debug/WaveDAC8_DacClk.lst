ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"WaveDAC8_DacClk.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.WaveDAC8_DacClk_Start,"ax",%progbits
  19              		.align	2
  20              		.global	WaveDAC8_DacClk_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	WaveDAC8_DacClk_Start, %function
  24              	WaveDAC8_DacClk_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\WaveDAC8_DacClk.c"
   1:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * File Name: WaveDAC8_DacClk.c
   3:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
   5:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Description:
   6:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
   8:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Note:
   9:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  10:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  17:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #include "WaveDAC8_DacClk.h"
  19:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  20:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  27:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  29:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  30:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_Start
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 2


  32:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  34:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
  35:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  38:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
  39:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  40:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  41:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
  42:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  43:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  44:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_Start(void) 
  46:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     WaveDAC8_DacClk_CLKEN |= WaveDAC8_DacClk_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F00803 		orr	r3, r3, #8
  36 0008 1370     		strb	r3, [r2]
  49:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 	WaveDAC8_DacClk_CLKSTBY |= WaveDAC8_DacClk_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1032     		adds	r2, r2, #16
  39 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  40 000e 43F00803 		orr	r3, r3, #8
  41 0012 1370     		strb	r3, [r2]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	WaveDAC8_DacClk_Start, .-WaveDAC8_DacClk_Start
  50              		.section	.text.WaveDAC8_DacClk_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	WaveDAC8_DacClk_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	WaveDAC8_DacClk_Stop, %function
  56              	WaveDAC8_DacClk_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
  51:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  52:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  53:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_Stop
  55:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  57:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 3


  58:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  64:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
  65:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  66:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  67:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
  68:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  69:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  70:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_Stop(void) 
  72:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     WaveDAC8_DacClk_CLKEN &= (uint8)(~WaveDAC8_DacClk_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0F703 		and	r3, r3, #247
  67 0008 1370     		strb	r3, [r2]
  75:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 	WaveDAC8_DacClk_CLKSTBY &= (uint8)(~WaveDAC8_DacClk_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1032     		adds	r2, r2, #16
  70 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71 000e 03F0F703 		and	r3, r3, #247
  72 0012 1370     		strb	r3, [r2]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	WaveDAC8_DacClk_Stop, .-WaveDAC8_DacClk_Stop
  81              		.section	.text.WaveDAC8_DacClk_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	WaveDAC8_DacClk_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	WaveDAC8_DacClk_StopBlock, %function
  87              	WaveDAC8_DacClk_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
  77:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  78:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  79:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  81:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
  82:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_StopBlock
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 4


  84:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  86:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
  87:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  93:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
  94:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  95:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  96:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
  97:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
  98:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
  99:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_StopBlock(void) 
 101:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     if ((WaveDAC8_DacClk_CLKEN & WaveDAC8_DacClk_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 164B     		ldr	r3, .L10
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0080F 		tst	r3, #8
  98 0008 27D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 104:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 107:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 1549     		ldr	r1, .L10+4
 102 000c 0023     		movs	r3, #0
 103 000e 0B70     		strb	r3, [r1]
 108:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 109:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if defined(WaveDAC8_DacClk__CFG3)
 111:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_AMASK = WaveDAC8_DacClk_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #else
 114:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_DMASK = WaveDAC8_DacClk_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 0820     		movs	r0, #8
 106 0012 144A     		ldr	r2, .L10+8
 107 0014 1070     		strb	r0, [r2]
 115:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0432     		adds	r2, r2, #4
 110 0018 1370     		strb	r3, [r2]
 116:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* WaveDAC8_DacClk__CFG3 */
 117:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 118:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 5


 119:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 0C3A     		subs	r2, r2, #12
 113 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 001e 03F07F03 		and	r3, r3, #127
 115 0022 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 121:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         oldDivider = CY_GET_REG16(WaveDAC8_DacClk_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 104B     		ldr	r3, .L10+12
 118 0026 1A88     		ldrh	r2, [r3]
 119 0028 92B2     		uxth	r2, r2
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 8A3B     		subs	r3, r3, #138
 123 002c 1A80     		strh	r2, [r3]	@ movhi
 123:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0723     		movs	r3, #7
 126 0030 0B70     		strb	r3, [r1]
 127              	.L9:
 124:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 125:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 128              		.loc 1 126 0 discriminator 1
 129 0032 0B4B     		ldr	r3, .L10+4
 130 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0036 13F0010F 		tst	r3, #1
 132 003a FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 129:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_CLKEN &= (uint8)(~WaveDAC8_DacClk_CLKEN_MASK);
 133              		.loc 1 130 0
 134 003c 0749     		ldr	r1, .L10
 135 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 136 0040 03F0F703 		and	r3, r3, #247
 137 0044 0B70     		strb	r3, [r1]
 131:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_CLKSTBY &= (uint8)(~WaveDAC8_DacClk_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0046 1031     		adds	r1, r1, #16
 140 0048 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 141 004a 03F0F703 		and	r3, r3, #247
 142 004e 0B70     		strb	r3, [r1]
 132:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 133:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 0050 0021     		movs	r1, #0
 145 0052 034B     		ldr	r3, .L10+4
 146 0054 1970     		strb	r1, [r3]
 136:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         CY_SET_REG16(WaveDAC8_DacClk_DIV_PTR, oldDivider);
 147              		.loc 1 136 0
 148 0056 8B33     		adds	r3, r3, #139
 149 0058 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 6


 150              	.LVL1:
 151              	.L7:
 152 005a 7047     		bx	lr
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 005c A2430040 		.word	1073759138
 157 0060 01400040 		.word	1073758209
 158 0064 10400040 		.word	1073758224
 159 0068 8C400040 		.word	1073758348
 160              	.LBE2:
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	WaveDAC8_DacClk_StopBlock, .-WaveDAC8_DacClk_StopBlock
 164              		.section	.text.WaveDAC8_DacClk_StandbyPower,"ax",%progbits
 165              		.align	2
 166              		.global	WaveDAC8_DacClk_StandbyPower
 167              		.thumb
 168              		.thumb_func
 169              		.type	WaveDAC8_DacClk_StandbyPower, %function
 170              	WaveDAC8_DacClk_StandbyPower:
 171              	.LFB3:
 137:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 139:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 140:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 142:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 143:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_StandbyPower
 145:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 147:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 148:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 150:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 151:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 153:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 154:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 155:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 156:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LVL2:
 159:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     if(state == 0u)
 178              		.loc 1 159 0
 179 0000 28B9     		cbnz	r0, .L13
 160:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 161:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_CLKSTBY &= (uint8)(~WaveDAC8_DacClk_CLKSTBY_MASK);
 180              		.loc 1 161 0
 181 0002 064A     		ldr	r2, .L15
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 7


 182 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0006 03F0F703 		and	r3, r3, #247
 184 000a 1370     		strb	r3, [r2]
 185 000c 7047     		bx	lr
 186              	.L13:
 162:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 163:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     else
 164:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 165:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_CLKSTBY |= WaveDAC8_DacClk_CLKSTBY_MASK;
 187              		.loc 1 165 0
 188 000e 034A     		ldr	r2, .L15
 189 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 190 0012 43F00803 		orr	r3, r3, #8
 191 0016 1370     		strb	r3, [r2]
 192 0018 7047     		bx	lr
 193              	.L16:
 194 001a 00BF     		.align	2
 195              	.L15:
 196 001c B2430040 		.word	1073759154
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	WaveDAC8_DacClk_StandbyPower, .-WaveDAC8_DacClk_StandbyPower
 200              		.section	.text.WaveDAC8_DacClk_GetDividerRegister,"ax",%progbits
 201              		.align	2
 202              		.global	WaveDAC8_DacClk_GetDividerRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	WaveDAC8_DacClk_GetDividerRegister, %function
 206              	WaveDAC8_DacClk_GetDividerRegister:
 207              	.LFB5:
 166:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 167:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 168:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 169:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 170:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_SetDividerRegister
 172:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 174:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 175:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 180:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 181:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   cycle.
 188:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 189:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 190:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 191:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 192:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 8


 193:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                                 
 195:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 196:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 198:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint8 currSrc = WaveDAC8_DacClk_GetSourceRegister();
 199:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint16 oldDivider = WaveDAC8_DacClk_GetDividerRegister();
 200:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 201:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 203:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         enabled = WaveDAC8_DacClk_CLKEN & WaveDAC8_DacClk_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 205:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         {
 207:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 210:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CY_SET_REG16(WaveDAC8_DacClk_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 WaveDAC8_DacClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 216:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             else
 217:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 218:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 WaveDAC8_DacClk_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CY_SET_REG16(WaveDAC8_DacClk_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 223:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         }
 224:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         else
 225:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         {
 226:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 			
 227:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 229:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 231:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if defined(WaveDAC8_DacClk__CFG3)
 233:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_AMASK = WaveDAC8_DacClk_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #else
 236:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_DMASK = WaveDAC8_DacClk_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* WaveDAC8_DacClk__CFG3 */
 239:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 242:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 if (((WaveDAC8_DacClk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 {
 245:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 249:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     /* Wait for clock to be disabled */
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 9


 250:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 253:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     WaveDAC8_DacClk_CLKEN &= (uint8)(~WaveDAC8_DacClk_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 255:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 }
 260:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 261:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 262:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             if ((WaveDAC8_DacClk_CLKEN & WaveDAC8_DacClk_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 265:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 268:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 271:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             else
 272:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 273:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CY_SET_REG16(WaveDAC8_DacClk_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 				WaveDAC8_DacClk_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 277:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         }
 278:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 279:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 280:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 281:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 282:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_GetDividerRegister
 284:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 286:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 287:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 289:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 290:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 291:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 292:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 293:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 296:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** uint16 WaveDAC8_DacClk_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 208              		.loc 1 298 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     return CY_GET_REG16(WaveDAC8_DacClk_DIV_PTR);
 213              		.loc 1 299 0
 214 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 10


 215 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 216              		.loc 1 300 0
 217 0004 80B2     		uxth	r0, r0
 218 0006 7047     		bx	lr
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0008 8C400040 		.word	1073758348
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	WaveDAC8_DacClk_GetDividerRegister, .-WaveDAC8_DacClk_GetDividerRegister
 226              		.section	.text.WaveDAC8_DacClk_SetModeRegister,"ax",%progbits
 227              		.align	2
 228              		.global	WaveDAC8_DacClk_SetModeRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	WaveDAC8_DacClk_SetModeRegister, %function
 232              	WaveDAC8_DacClk_SetModeRegister:
 233              	.LFB6:
 301:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 302:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 303:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_SetModeRegister
 305:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 307:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 308:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 313:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 314:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 value.
 319:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 328:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 329:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 330:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 331:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 234              		.loc 1 333 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 11


 238              		@ link register save eliminated.
 239              	.LVL3:
 334:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     WaveDAC8_DacClk_MOD_SRC |= modeBitMask & (uint8)WaveDAC8_DacClk_MODE_MASK;
 240              		.loc 1 334 0
 241 0000 034B     		ldr	r3, .L21
 242 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 243 0004 00F0F800 		and	r0, r0, #248
 244              	.LVL4:
 245 0008 1043     		orrs	r0, r0, r2
 246 000a 1870     		strb	r0, [r3]
 247 000c 7047     		bx	lr
 248              	.L22:
 249 000e 00BF     		.align	2
 250              	.L21:
 251 0010 8E400040 		.word	1073758350
 252              		.cfi_endproc
 253              	.LFE6:
 254              		.size	WaveDAC8_DacClk_SetModeRegister, .-WaveDAC8_DacClk_SetModeRegister
 255              		.section	.text.WaveDAC8_DacClk_ClearModeRegister,"ax",%progbits
 256              		.align	2
 257              		.global	WaveDAC8_DacClk_ClearModeRegister
 258              		.thumb
 259              		.thumb_func
 260              		.type	WaveDAC8_DacClk_ClearModeRegister, %function
 261              	WaveDAC8_DacClk_ClearModeRegister:
 262              	.LFB7:
 335:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 336:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 337:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 338:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_ClearModeRegister
 340:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 342:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 343:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 348:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 349:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 value.
 354:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 363:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 364:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 365:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 12


 366:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 263              		.loc 1 368 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL5:
 369:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     WaveDAC8_DacClk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(WaveDAC8_DacClk_MODE_MASK))
 269              		.loc 1 369 0
 270 0000 044B     		ldr	r3, .L24
 271 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272 0004 C043     		mvns	r0, r0
 273              	.LVL6:
 274 0006 C0B2     		uxtb	r0, r0
 275 0008 40F00700 		orr	r0, r0, #7
 276 000c 1040     		ands	r0, r0, r2
 277 000e 1870     		strb	r0, [r3]
 278 0010 7047     		bx	lr
 279              	.L25:
 280 0012 00BF     		.align	2
 281              	.L24:
 282 0014 8E400040 		.word	1073758350
 283              		.cfi_endproc
 284              	.LFE7:
 285              		.size	WaveDAC8_DacClk_ClearModeRegister, .-WaveDAC8_DacClk_ClearModeRegister
 286              		.section	.text.WaveDAC8_DacClk_GetModeRegister,"ax",%progbits
 287              		.align	2
 288              		.global	WaveDAC8_DacClk_GetModeRegister
 289              		.thumb
 290              		.thumb_func
 291              		.type	WaveDAC8_DacClk_GetModeRegister, %function
 292              	WaveDAC8_DacClk_GetModeRegister:
 293              	.LFB8:
 370:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 371:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 372:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 373:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_GetModeRegister
 375:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 377:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 378:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 380:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 381:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 382:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 383:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 384:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 387:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** uint8 WaveDAC8_DacClk_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 294              		.loc 1 389 0
 295              		.cfi_startproc
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 13


 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     return WaveDAC8_DacClk_MOD_SRC & (uint8)(WaveDAC8_DacClk_MODE_MASK);
 299              		.loc 1 390 0
 300 0000 024B     		ldr	r3, .L27
 301 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 302              		.loc 1 391 0
 303 0004 00F0F800 		and	r0, r0, #248
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a 00BF     		.align	2
 307              	.L27:
 308 000c 8E400040 		.word	1073758350
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	WaveDAC8_DacClk_GetModeRegister, .-WaveDAC8_DacClk_GetModeRegister
 312              		.section	.text.WaveDAC8_DacClk_GetSourceRegister,"ax",%progbits
 313              		.align	2
 314              		.global	WaveDAC8_DacClk_GetSourceRegister
 315              		.thumb
 316              		.thumb_func
 317              		.type	WaveDAC8_DacClk_GetSourceRegister, %function
 318              	WaveDAC8_DacClk_GetSourceRegister:
 319              	.LFB10:
 392:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 393:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 394:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_SetSourceRegister
 396:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 398:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 399:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 402:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 403:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 415:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 416:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 417:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 418:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** void WaveDAC8_DacClk_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 421:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint16 currDiv = WaveDAC8_DacClk_GetDividerRegister();
 422:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint8 oldSrc = WaveDAC8_DacClk_GetSourceRegister();
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 14


 423:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 424:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 427:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC =
 431:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 433:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 436:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC =
 439:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 442:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     else
 443:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 444:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC =
 445:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 447:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 448:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 449:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 450:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Function Name: WaveDAC8_DacClk_GetSourceRegister
 452:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 454:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Summary:
 455:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 457:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Parameters:
 458:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  None
 459:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 460:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** * Returns:
 461:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *
 463:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** uint8 WaveDAC8_DacClk_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** {
 320              		.loc 1 465 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     return WaveDAC8_DacClk_MOD_SRC & WaveDAC8_DacClk_SRC_SEL_MSK;
 325              		.loc 1 466 0
 326 0000 024B     		ldr	r3, .L30
 327 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** }
 328              		.loc 1 467 0
 329 0004 00F00700 		and	r0, r0, #7
 330 0008 7047     		bx	lr
 331              	.L31:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 15


 332 000a 00BF     		.align	2
 333              	.L30:
 334 000c 8E400040 		.word	1073758350
 335              		.cfi_endproc
 336              	.LFE10:
 337              		.size	WaveDAC8_DacClk_GetSourceRegister, .-WaveDAC8_DacClk_GetSourceRegister
 338              		.section	.text.WaveDAC8_DacClk_SetDividerRegister,"ax",%progbits
 339              		.align	2
 340              		.global	WaveDAC8_DacClk_SetDividerRegister
 341              		.thumb
 342              		.thumb_func
 343              		.type	WaveDAC8_DacClk_SetDividerRegister, %function
 344              	WaveDAC8_DacClk_SetDividerRegister:
 345              	.LFB4:
 195:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint8 enabled;
 346              		.loc 1 195 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL7:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 357 0002 0446     		mov	r4, r0
 358 0004 0D46     		mov	r5, r1
 198:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint16 oldDivider = WaveDAC8_DacClk_GetDividerRegister();
 359              		.loc 1 198 0
 360 0006 FFF7FEFF 		bl	WaveDAC8_DacClk_GetSourceRegister
 361              	.LVL8:
 362 000a 0646     		mov	r6, r0
 363              	.LVL9:
 199:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 364              		.loc 1 199 0
 365 000c FFF7FEFF 		bl	WaveDAC8_DacClk_GetDividerRegister
 366              	.LVL10:
 201:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 367              		.loc 1 201 0
 368 0010 8442     		cmp	r4, r0
 369 0012 57D0     		beq	.L32
 203:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 370              		.loc 1 203 0
 371 0014 2C4B     		ldr	r3, .L45
 372 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 0018 03F00803 		and	r3, r3, #8
 374 001c DAB2     		uxtb	r2, r3
 375              	.LVL11:
 205:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         {
 376              		.loc 1 205 0
 377 001e 96B9     		cbnz	r6, .L34
 205:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         {
 378              		.loc 1 205 0 is_stmt 0 discriminator 1
 379 0020 00B1     		cbz	r0, .L35
 205:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         {
 380              		.loc 1 205 0 discriminator 2
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 16


 381 0022 84B9     		cbnz	r4, .L34
 382              	.L35:
 208:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 383              		.loc 1 208 0 is_stmt 1
 384 0024 38B9     		cbnz	r0, .L36
 213:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 WaveDAC8_DacClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 385              		.loc 1 213 0
 386 0026 294B     		ldr	r3, .L45+4
 387 0028 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 388              		.loc 1 214 0
 389 002a 294A     		ldr	r2, .L45+8
 390              	.LVL12:
 391 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 392 002e 03F0BF03 		and	r3, r3, #191
 393 0032 1370     		strb	r3, [r2]
 394 0034 70BD     		pop	{r4, r5, r6, pc}
 395              	.LVL13:
 396              	.L36:
 220:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CY_SET_REG16(WaveDAC8_DacClk_DIV_PTR, clkDivider);
 397              		.loc 1 220 0
 398 0036 264A     		ldr	r2, .L45+8
 399              	.LVL14:
 400 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401              	.LVL15:
 402 003a 43F04003 		orr	r3, r3, #64
 403 003e 1370     		strb	r3, [r2]
 221:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 404              		.loc 1 221 0
 405 0040 224B     		ldr	r3, .L45+4
 406 0042 1C80     		strh	r4, [r3]	@ movhi
 407 0044 70BD     		pop	{r4, r5, r6, pc}
 408              	.LVL16:
 409              	.L34:
 227:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 410              		.loc 1 227 0
 411 0046 22B3     		cbz	r2, .L37
 229:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 412              		.loc 1 229 0
 413 0048 0023     		movs	r3, #0
 414 004a 2249     		ldr	r1, .L45+12
 415 004c 0B70     		strb	r3, [r1]
 236:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 CLK_DIST_AMASK = 0x00u;
 416              		.loc 1 236 0
 417 004e 0826     		movs	r6, #8
 418              	.LVL17:
 419 0050 0F31     		adds	r1, r1, #15
 420 0052 0E70     		strb	r6, [r1]
 237:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* WaveDAC8_DacClk__CFG3 */
 421              		.loc 1 237 0
 422 0054 0431     		adds	r1, r1, #4
 423 0056 0B70     		strb	r3, [r1]
 240:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 424              		.loc 1 240 0
 425 0058 0C39     		subs	r1, r1, #12
 426 005a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 427 005c 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 17


 428 0060 0B70     		strb	r3, [r1]
 243:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 {
 429              		.loc 1 243 0
 430 0062 1B4B     		ldr	r3, .L45+8
 431 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0066 13F0080F 		tst	r3, #8
 433 006a 00D0     		beq	.L38
 243:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 {
 434              		.loc 1 243 0 is_stmt 0 discriminator 1
 435 006c 8CB9     		cbnz	r4, .L37
 436              	.L38:
 246:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 246 0 is_stmt 1
 438 006e 1A4B     		ldr	r3, .L45+16
 439 0070 1880     		strh	r0, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 440              		.loc 1 247 0
 441 0072 0721     		movs	r1, #7
 442 0074 013B     		subs	r3, r3, #1
 443 0076 1970     		strb	r1, [r3]
 444              	.L39:
 250:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 445              		.loc 1 250 0 discriminator 1
 446 0078 164B     		ldr	r3, .L45+12
 447 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 007c 13F0010F 		tst	r3, #1
 449 0080 FAD1     		bne	.L39
 253:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 450              		.loc 1 253 0
 451 0082 1149     		ldr	r1, .L45
 452 0084 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 0086 03F0F703 		and	r3, r3, #247
 454 008a 0B70     		strb	r3, [r1]
 257:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 455              		.loc 1 257 0
 456 008c 0021     		movs	r1, #0
 457 008e 114B     		ldr	r3, .L45+12
 458 0090 1970     		strb	r1, [r3]
 459              	.L37:
 263:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             {
 460              		.loc 1 263 0
 461 0092 0D4B     		ldr	r3, .L45
 462 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0096 13F0080F 		tst	r3, #8
 464 009a 0DD0     		beq	.L40
 266:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 465              		.loc 1 266 0
 466 009c 0E4B     		ldr	r3, .L45+16
 467 009e 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 468              		.loc 1 268 0
 469 00a0 0DB1     		cbz	r5, .L43
 470 00a2 0322     		movs	r2, #3
 471              	.LVL18:
 472 00a4 00E0     		b	.L41
 473              	.LVL19:
 474              	.L43:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 18


 475 00a6 0122     		movs	r2, #1
 476              	.LVL20:
 477              	.L41:
 268:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 478              		.loc 1 268 0 is_stmt 0 discriminator 4
 479 00a8 0A4B     		ldr	r3, .L45+12
 480 00aa 1A70     		strb	r2, [r3]
 481              	.L42:
 269:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 482              		.loc 1 269 0 is_stmt 1 discriminator 1
 483 00ac 094B     		ldr	r3, .L45+12
 484 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00b0 13F0010F 		tst	r3, #1
 486 00b4 FAD1     		bne	.L42
 487 00b6 70BD     		pop	{r4, r5, r6, pc}
 488              	.LVL21:
 489              	.L40:
 274:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 				WaveDAC8_DacClk_CLKEN |= enabled;
 490              		.loc 1 274 0
 491 00b8 044B     		ldr	r3, .L45+4
 492 00ba 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             }
 493              		.loc 1 275 0
 494 00bc 0249     		ldr	r1, .L45
 495 00be 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 496 00c0 1343     		orrs	r3, r3, r2
 497 00c2 0B70     		strb	r3, [r1]
 498              	.LVL22:
 499              	.L32:
 500 00c4 70BD     		pop	{r4, r5, r6, pc}
 501              	.L46:
 502 00c6 00BF     		.align	2
 503              	.L45:
 504 00c8 A2430040 		.word	1073759138
 505 00cc 8C400040 		.word	1073758348
 506 00d0 8E400040 		.word	1073758350
 507 00d4 01400040 		.word	1073758209
 508 00d8 02400040 		.word	1073758210
 509              		.cfi_endproc
 510              	.LFE4:
 511              		.size	WaveDAC8_DacClk_SetDividerRegister, .-WaveDAC8_DacClk_SetDividerRegister
 512              		.section	.text.WaveDAC8_DacClk_SetSourceRegister,"ax",%progbits
 513              		.align	2
 514              		.global	WaveDAC8_DacClk_SetSourceRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	WaveDAC8_DacClk_SetSourceRegister, %function
 518              	WaveDAC8_DacClk_SetSourceRegister:
 519              	.LFB9:
 420:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint16 currDiv = WaveDAC8_DacClk_GetDividerRegister();
 520              		.loc 1 420 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL23:
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 19


 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     uint8 oldSrc = WaveDAC8_DacClk_GetSourceRegister();
 532              		.loc 1 421 0
 533 0004 FFF7FEFF 		bl	WaveDAC8_DacClk_GetDividerRegister
 534              	.LVL24:
 535 0008 0546     		mov	r5, r0
 536              	.LVL25:
 422:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c **** 
 537              		.loc 1 422 0
 538 000a FFF7FEFF 		bl	WaveDAC8_DacClk_GetSourceRegister
 539              	.LVL26:
 424:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 424 0
 541 000e 0346     		mov	r3, r0
 542 0010 60B1     		cbz	r0, .L48
 424:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 543              		.loc 1 424 0 is_stmt 0 discriminator 1
 544 0012 5CB9     		cbnz	r4, .L48
 425:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 545              		.loc 1 425 0 is_stmt 1
 546 0014 55B9     		cbnz	r5, .L48
 429:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC =
 547              		.loc 1 429 0
 548 0016 104A     		ldr	r2, .L52
 549 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 001a 43F04003 		orr	r3, r3, #64
 551 001e 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 552              		.loc 1 431 0
 553 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 554              		.loc 1 430 0
 555 0022 03F0F803 		and	r3, r3, #248
 556 0026 1C43     		orrs	r4, r4, r3
 557 0028 1470     		strb	r4, [r2]
 558 002a 38BD     		pop	{r3, r4, r5, pc}
 559              	.LVL27:
 560              	.L48:
 433:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 561              		.loc 1 433 0
 562 002c 63B9     		cbnz	r3, .L50
 433:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 563              		.loc 1 433 0 is_stmt 0 discriminator 1
 564 002e 5CB1     		cbz	r4, .L50
 434:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     {
 565              		.loc 1 434 0 is_stmt 1
 566 0030 55B9     		cbnz	r5, .L50
 439:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****         WaveDAC8_DacClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 567              		.loc 1 439 0
 568 0032 094A     		ldr	r2, .L52
 569 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 570              		.loc 1 438 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 20


 571 0036 03F0F803 		and	r3, r3, #248
 572 003a 1C43     		orrs	r4, r4, r3
 573 003c 1470     		strb	r4, [r2]
 440:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 574              		.loc 1 440 0
 575 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 576 0040 03F0BF03 		and	r3, r3, #191
 577 0044 1370     		strb	r3, [r2]
 578 0046 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL28:
 580              	.L50:
 445:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****     }
 581              		.loc 1 445 0
 582 0048 034A     		ldr	r2, .L52
 583 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/WaveDAC8_DacClk.c ****             (WaveDAC8_DacClk_MOD_SRC & (uint8)(~WaveDAC8_DacClk_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 444 0
 585 004c 03F0F803 		and	r3, r3, #248
 586 0050 1C43     		orrs	r4, r4, r3
 587 0052 1470     		strb	r4, [r2]
 588 0054 38BD     		pop	{r3, r4, r5, pc}
 589              	.LVL29:
 590              	.L53:
 591 0056 00BF     		.align	2
 592              	.L52:
 593 0058 8E400040 		.word	1073758350
 594              		.cfi_endproc
 595              	.LFE9:
 596              		.size	WaveDAC8_DacClk_SetSourceRegister, .-WaveDAC8_DacClk_SetSourceRegister
 597              		.text
 598              	.Letext0:
 599              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 600              		.section	.debug_info,"",%progbits
 601              	.Ldebug_info0:
 602 0000 7B020000 		.4byte	0x27b
 603 0004 0400     		.2byte	0x4
 604 0006 00000000 		.4byte	.Ldebug_abbrev0
 605 000a 04       		.byte	0x4
 606 000b 01       		.uleb128 0x1
 607 000c 97010000 		.4byte	.LASF36
 608 0010 01       		.byte	0x1
 609 0011 65020000 		.4byte	.LASF37
 610 0015 AE020000 		.4byte	.LASF38
 611 0019 00000000 		.4byte	.Ldebug_ranges0+0
 612 001d 00000000 		.4byte	0
 613 0021 00000000 		.4byte	.Ldebug_line0
 614 0025 02       		.uleb128 0x2
 615 0026 01       		.byte	0x1
 616 0027 06       		.byte	0x6
 617 0028 2F010000 		.4byte	.LASF0
 618 002c 02       		.uleb128 0x2
 619 002d 01       		.byte	0x1
 620 002e 08       		.byte	0x8
 621 002f 15010000 		.4byte	.LASF1
 622 0033 02       		.uleb128 0x2
 623 0034 02       		.byte	0x2
 624 0035 05       		.byte	0x5
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 21


 625 0036 0E000000 		.4byte	.LASF2
 626 003a 02       		.uleb128 0x2
 627 003b 02       		.byte	0x2
 628 003c 07       		.byte	0x7
 629 003d 7F010000 		.4byte	.LASF3
 630 0041 02       		.uleb128 0x2
 631 0042 04       		.byte	0x4
 632 0043 05       		.byte	0x5
 633 0044 EC000000 		.4byte	.LASF4
 634 0048 02       		.uleb128 0x2
 635 0049 04       		.byte	0x4
 636 004a 07       		.byte	0x7
 637 004b 95020000 		.4byte	.LASF5
 638 004f 02       		.uleb128 0x2
 639 0050 08       		.byte	0x8
 640 0051 05       		.byte	0x5
 641 0052 BC000000 		.4byte	.LASF6
 642 0056 02       		.uleb128 0x2
 643 0057 08       		.byte	0x8
 644 0058 07       		.byte	0x7
 645 0059 3B010000 		.4byte	.LASF7
 646 005d 03       		.uleb128 0x3
 647 005e 04       		.byte	0x4
 648 005f 05       		.byte	0x5
 649 0060 696E7400 		.ascii	"int\000"
 650 0064 02       		.uleb128 0x2
 651 0065 04       		.byte	0x4
 652 0066 07       		.byte	0x7
 653 0067 52010000 		.4byte	.LASF8
 654 006b 04       		.uleb128 0x4
 655 006c A5000000 		.4byte	.LASF9
 656 0070 02       		.byte	0x2
 657 0071 5B       		.byte	0x5b
 658 0072 2C000000 		.4byte	0x2c
 659 0076 04       		.uleb128 0x4
 660 0077 8F000000 		.4byte	.LASF10
 661 007b 02       		.byte	0x2
 662 007c 5C       		.byte	0x5c
 663 007d 3A000000 		.4byte	0x3a
 664 0081 02       		.uleb128 0x2
 665 0082 04       		.byte	0x4
 666 0083 04       		.byte	0x4
 667 0084 B6000000 		.4byte	.LASF11
 668 0088 02       		.uleb128 0x2
 669 0089 08       		.byte	0x8
 670 008a 04       		.byte	0x4
 671 008b A7020000 		.4byte	.LASF12
 672 008f 02       		.uleb128 0x2
 673 0090 01       		.byte	0x1
 674 0091 08       		.byte	0x8
 675 0092 92010000 		.4byte	.LASF13
 676 0096 04       		.uleb128 0x4
 677 0097 90020000 		.4byte	.LASF14
 678 009b 02       		.byte	0x2
 679 009c F0       		.byte	0xf0
 680 009d A1000000 		.4byte	0xa1
 681 00a1 05       		.uleb128 0x5
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 22


 682 00a2 6B000000 		.4byte	0x6b
 683 00a6 04       		.uleb128 0x4
 684 00a7 08000000 		.4byte	.LASF15
 685 00ab 02       		.byte	0x2
 686 00ac F1       		.byte	0xf1
 687 00ad B1000000 		.4byte	0xb1
 688 00b1 05       		.uleb128 0x5
 689 00b2 76000000 		.4byte	0x76
 690 00b6 06       		.uleb128 0x6
 691 00b7 79000000 		.4byte	.LASF16
 692 00bb 01       		.byte	0x1
 693 00bc 2D       		.byte	0x2d
 694 00bd 00000000 		.4byte	.LFB0
 695 00c1 1C000000 		.4byte	.LFE0-.LFB0
 696 00c5 01       		.uleb128 0x1
 697 00c6 9C       		.byte	0x9c
 698 00c7 06       		.uleb128 0x6
 699 00c8 51030000 		.4byte	.LASF17
 700 00cc 01       		.byte	0x1
 701 00cd 47       		.byte	0x47
 702 00ce 00000000 		.4byte	.LFB1
 703 00d2 1C000000 		.4byte	.LFE1-.LFB1
 704 00d6 01       		.uleb128 0x1
 705 00d7 9C       		.byte	0x9c
 706 00d8 07       		.uleb128 0x7
 707 00d9 FB000000 		.4byte	.LASF18
 708 00dd 01       		.byte	0x1
 709 00de 64       		.byte	0x64
 710 00df 00000000 		.4byte	.LFB2
 711 00e3 6C000000 		.4byte	.LFE2-.LFB2
 712 00e7 01       		.uleb128 0x1
 713 00e8 9C       		.byte	0x9c
 714 00e9 07010000 		.4byte	0x107
 715 00ed 08       		.uleb128 0x8
 716 00ee 0A000000 		.4byte	.LBB2
 717 00f2 62000000 		.4byte	.LBE2-.LBB2
 718 00f6 09       		.uleb128 0x9
 719 00f7 5A020000 		.4byte	.LASF30
 720 00fb 01       		.byte	0x1
 721 00fc 69       		.byte	0x69
 722 00fd 76000000 		.4byte	0x76
 723 0101 00000000 		.4byte	.LLST0
 724 0105 00       		.byte	0
 725 0106 00       		.byte	0
 726 0107 07       		.uleb128 0x7
 727 0108 5C000000 		.4byte	.LASF19
 728 010c 01       		.byte	0x1
 729 010d 9D       		.byte	0x9d
 730 010e 00000000 		.4byte	.LFB3
 731 0112 20000000 		.4byte	.LFE3-.LFB3
 732 0116 01       		.uleb128 0x1
 733 0117 9C       		.byte	0x9c
 734 0118 2A010000 		.4byte	0x12a
 735 011c 0A       		.uleb128 0xa
 736 011d F5000000 		.4byte	.LASF21
 737 0121 01       		.byte	0x1
 738 0122 9D       		.byte	0x9d
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 23


 739 0123 6B000000 		.4byte	0x6b
 740 0127 01       		.uleb128 0x1
 741 0128 50       		.byte	0x50
 742 0129 00       		.byte	0
 743 012a 0B       		.uleb128 0xb
 744 012b 37020000 		.4byte	.LASF24
 745 012f 01       		.byte	0x1
 746 0130 2901     		.2byte	0x129
 747 0132 76000000 		.4byte	0x76
 748 0136 00000000 		.4byte	.LFB5
 749 013a 0C000000 		.4byte	.LFE5-.LFB5
 750 013e 01       		.uleb128 0x1
 751 013f 9C       		.byte	0x9c
 752 0140 0C       		.uleb128 0xc
 753 0141 5F010000 		.4byte	.LASF20
 754 0145 01       		.byte	0x1
 755 0146 4C01     		.2byte	0x14c
 756 0148 00000000 		.4byte	.LFB6
 757 014c 14000000 		.4byte	.LFE6-.LFB6
 758 0150 01       		.uleb128 0x1
 759 0151 9C       		.byte	0x9c
 760 0152 67010000 		.4byte	0x167
 761 0156 0D       		.uleb128 0xd
 762 0157 23010000 		.4byte	.LASF22
 763 015b 01       		.byte	0x1
 764 015c 4C01     		.2byte	0x14c
 765 015e 6B000000 		.4byte	0x6b
 766 0162 13000000 		.4byte	.LLST1
 767 0166 00       		.byte	0
 768 0167 0C       		.uleb128 0xc
 769 0168 CA000000 		.4byte	.LASF23
 770 016c 01       		.byte	0x1
 771 016d 6F01     		.2byte	0x16f
 772 016f 00000000 		.4byte	.LFB7
 773 0173 18000000 		.4byte	.LFE7-.LFB7
 774 0177 01       		.uleb128 0x1
 775 0178 9C       		.byte	0x9c
 776 0179 8E010000 		.4byte	0x18e
 777 017d 0D       		.uleb128 0xd
 778 017e 23010000 		.4byte	.LASF22
 779 0182 01       		.byte	0x1
 780 0183 6F01     		.2byte	0x16f
 781 0185 6B000000 		.4byte	0x6b
 782 0189 34000000 		.4byte	.LLST2
 783 018d 00       		.byte	0
 784 018e 0B       		.uleb128 0xb
 785 018f 66030000 		.4byte	.LASF25
 786 0193 01       		.byte	0x1
 787 0194 8401     		.2byte	0x184
 788 0196 6B000000 		.4byte	0x6b
 789 019a 00000000 		.4byte	.LFB8
 790 019e 10000000 		.4byte	.LFE8-.LFB8
 791 01a2 01       		.uleb128 0x1
 792 01a3 9C       		.byte	0x9c
 793 01a4 0B       		.uleb128 0xb
 794 01a5 18000000 		.4byte	.LASF26
 795 01a9 01       		.byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 24


 796 01aa D001     		.2byte	0x1d0
 797 01ac 6B000000 		.4byte	0x6b
 798 01b0 00000000 		.4byte	.LFB10
 799 01b4 10000000 		.4byte	.LFE10-.LFB10
 800 01b8 01       		.uleb128 0x1
 801 01b9 9C       		.byte	0x9c
 802 01ba 07       		.uleb128 0x7
 803 01bb 2E030000 		.4byte	.LASF27
 804 01bf 01       		.byte	0x1
 805 01c0 C1       		.byte	0xc1
 806 01c1 00000000 		.4byte	.LFB4
 807 01c5 DC000000 		.4byte	.LFE4-.LFB4
 808 01c9 01       		.uleb128 0x1
 809 01ca 9C       		.byte	0x9c
 810 01cb 2B020000 		.4byte	0x22b
 811 01cf 0E       		.uleb128 0xe
 812 01d0 AB000000 		.4byte	.LASF28
 813 01d4 01       		.byte	0x1
 814 01d5 C1       		.byte	0xc1
 815 01d6 76000000 		.4byte	0x76
 816 01da 55000000 		.4byte	.LLST3
 817 01de 0E       		.uleb128 0xe
 818 01df 96000000 		.4byte	.LASF29
 819 01e3 01       		.byte	0x1
 820 01e4 C1       		.byte	0xc1
 821 01e5 6B000000 		.4byte	0x6b
 822 01e9 76000000 		.4byte	.LLST4
 823 01ed 09       		.uleb128 0x9
 824 01ee 26030000 		.4byte	.LASF31
 825 01f2 01       		.byte	0x1
 826 01f3 C4       		.byte	0xc4
 827 01f4 6B000000 		.4byte	0x6b
 828 01f8 97000000 		.4byte	.LLST5
 829 01fc 09       		.uleb128 0x9
 830 01fd 2F020000 		.4byte	.LASF32
 831 0201 01       		.byte	0x1
 832 0202 C6       		.byte	0xc6
 833 0203 6B000000 		.4byte	0x6b
 834 0207 E1000000 		.4byte	.LLST6
 835 020b 0F       		.uleb128 0xf
 836 020c 5A020000 		.4byte	.LASF30
 837 0210 01       		.byte	0x1
 838 0211 C7       		.byte	0xc7
 839 0212 76000000 		.4byte	0x76
 840 0216 01       		.uleb128 0x1
 841 0217 50       		.byte	0x50
 842 0218 10       		.uleb128 0x10
 843 0219 0A000000 		.4byte	.LVL8
 844 021d A4010000 		.4byte	0x1a4
 845 0221 10       		.uleb128 0x10
 846 0222 10000000 		.4byte	.LVL10
 847 0226 2A010000 		.4byte	0x12a
 848 022a 00       		.byte	0
 849 022b 11       		.uleb128 0x11
 850 022c 3A000000 		.4byte	.LASF39
 851 0230 01       		.byte	0x1
 852 0231 A301     		.2byte	0x1a3
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 25


 853 0233 00000000 		.4byte	.LFB9
 854 0237 5C000000 		.4byte	.LFE9-.LFB9
 855 023b 01       		.uleb128 0x1
 856 023c 9C       		.byte	0x9c
 857 023d 0D       		.uleb128 0xd
 858 023e 25020000 		.4byte	.LASF33
 859 0242 01       		.byte	0x1
 860 0243 A301     		.2byte	0x1a3
 861 0245 6B000000 		.4byte	0x6b
 862 0249 F4000000 		.4byte	.LLST7
 863 024d 12       		.uleb128 0x12
 864 024e 00000000 		.4byte	.LASF34
 865 0252 01       		.byte	0x1
 866 0253 A501     		.2byte	0x1a5
 867 0255 76000000 		.4byte	0x76
 868 0259 15010000 		.4byte	.LLST8
 869 025d 13       		.uleb128 0x13
 870 025e 9E000000 		.4byte	.LASF35
 871 0262 01       		.byte	0x1
 872 0263 A601     		.2byte	0x1a6
 873 0265 6B000000 		.4byte	0x6b
 874 0269 01       		.uleb128 0x1
 875 026a 50       		.byte	0x50
 876 026b 10       		.uleb128 0x10
 877 026c 08000000 		.4byte	.LVL24
 878 0270 2A010000 		.4byte	0x12a
 879 0274 10       		.uleb128 0x10
 880 0275 0E000000 		.4byte	.LVL26
 881 0279 A4010000 		.4byte	0x1a4
 882 027d 00       		.byte	0
 883 027e 00       		.byte	0
 884              		.section	.debug_abbrev,"",%progbits
 885              	.Ldebug_abbrev0:
 886 0000 01       		.uleb128 0x1
 887 0001 11       		.uleb128 0x11
 888 0002 01       		.byte	0x1
 889 0003 25       		.uleb128 0x25
 890 0004 0E       		.uleb128 0xe
 891 0005 13       		.uleb128 0x13
 892 0006 0B       		.uleb128 0xb
 893 0007 03       		.uleb128 0x3
 894 0008 0E       		.uleb128 0xe
 895 0009 1B       		.uleb128 0x1b
 896 000a 0E       		.uleb128 0xe
 897 000b 55       		.uleb128 0x55
 898 000c 17       		.uleb128 0x17
 899 000d 11       		.uleb128 0x11
 900 000e 01       		.uleb128 0x1
 901 000f 10       		.uleb128 0x10
 902 0010 17       		.uleb128 0x17
 903 0011 00       		.byte	0
 904 0012 00       		.byte	0
 905 0013 02       		.uleb128 0x2
 906 0014 24       		.uleb128 0x24
 907 0015 00       		.byte	0
 908 0016 0B       		.uleb128 0xb
 909 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 26


 910 0018 3E       		.uleb128 0x3e
 911 0019 0B       		.uleb128 0xb
 912 001a 03       		.uleb128 0x3
 913 001b 0E       		.uleb128 0xe
 914 001c 00       		.byte	0
 915 001d 00       		.byte	0
 916 001e 03       		.uleb128 0x3
 917 001f 24       		.uleb128 0x24
 918 0020 00       		.byte	0
 919 0021 0B       		.uleb128 0xb
 920 0022 0B       		.uleb128 0xb
 921 0023 3E       		.uleb128 0x3e
 922 0024 0B       		.uleb128 0xb
 923 0025 03       		.uleb128 0x3
 924 0026 08       		.uleb128 0x8
 925 0027 00       		.byte	0
 926 0028 00       		.byte	0
 927 0029 04       		.uleb128 0x4
 928 002a 16       		.uleb128 0x16
 929 002b 00       		.byte	0
 930 002c 03       		.uleb128 0x3
 931 002d 0E       		.uleb128 0xe
 932 002e 3A       		.uleb128 0x3a
 933 002f 0B       		.uleb128 0xb
 934 0030 3B       		.uleb128 0x3b
 935 0031 0B       		.uleb128 0xb
 936 0032 49       		.uleb128 0x49
 937 0033 13       		.uleb128 0x13
 938 0034 00       		.byte	0
 939 0035 00       		.byte	0
 940 0036 05       		.uleb128 0x5
 941 0037 35       		.uleb128 0x35
 942 0038 00       		.byte	0
 943 0039 49       		.uleb128 0x49
 944 003a 13       		.uleb128 0x13
 945 003b 00       		.byte	0
 946 003c 00       		.byte	0
 947 003d 06       		.uleb128 0x6
 948 003e 2E       		.uleb128 0x2e
 949 003f 00       		.byte	0
 950 0040 3F       		.uleb128 0x3f
 951 0041 19       		.uleb128 0x19
 952 0042 03       		.uleb128 0x3
 953 0043 0E       		.uleb128 0xe
 954 0044 3A       		.uleb128 0x3a
 955 0045 0B       		.uleb128 0xb
 956 0046 3B       		.uleb128 0x3b
 957 0047 0B       		.uleb128 0xb
 958 0048 27       		.uleb128 0x27
 959 0049 19       		.uleb128 0x19
 960 004a 11       		.uleb128 0x11
 961 004b 01       		.uleb128 0x1
 962 004c 12       		.uleb128 0x12
 963 004d 06       		.uleb128 0x6
 964 004e 40       		.uleb128 0x40
 965 004f 18       		.uleb128 0x18
 966 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 27


 967 0052 19       		.uleb128 0x19
 968 0053 00       		.byte	0
 969 0054 00       		.byte	0
 970 0055 07       		.uleb128 0x7
 971 0056 2E       		.uleb128 0x2e
 972 0057 01       		.byte	0x1
 973 0058 3F       		.uleb128 0x3f
 974 0059 19       		.uleb128 0x19
 975 005a 03       		.uleb128 0x3
 976 005b 0E       		.uleb128 0xe
 977 005c 3A       		.uleb128 0x3a
 978 005d 0B       		.uleb128 0xb
 979 005e 3B       		.uleb128 0x3b
 980 005f 0B       		.uleb128 0xb
 981 0060 27       		.uleb128 0x27
 982 0061 19       		.uleb128 0x19
 983 0062 11       		.uleb128 0x11
 984 0063 01       		.uleb128 0x1
 985 0064 12       		.uleb128 0x12
 986 0065 06       		.uleb128 0x6
 987 0066 40       		.uleb128 0x40
 988 0067 18       		.uleb128 0x18
 989 0068 9742     		.uleb128 0x2117
 990 006a 19       		.uleb128 0x19
 991 006b 01       		.uleb128 0x1
 992 006c 13       		.uleb128 0x13
 993 006d 00       		.byte	0
 994 006e 00       		.byte	0
 995 006f 08       		.uleb128 0x8
 996 0070 0B       		.uleb128 0xb
 997 0071 01       		.byte	0x1
 998 0072 11       		.uleb128 0x11
 999 0073 01       		.uleb128 0x1
 1000 0074 12       		.uleb128 0x12
 1001 0075 06       		.uleb128 0x6
 1002 0076 00       		.byte	0
 1003 0077 00       		.byte	0
 1004 0078 09       		.uleb128 0x9
 1005 0079 34       		.uleb128 0x34
 1006 007a 00       		.byte	0
 1007 007b 03       		.uleb128 0x3
 1008 007c 0E       		.uleb128 0xe
 1009 007d 3A       		.uleb128 0x3a
 1010 007e 0B       		.uleb128 0xb
 1011 007f 3B       		.uleb128 0x3b
 1012 0080 0B       		.uleb128 0xb
 1013 0081 49       		.uleb128 0x49
 1014 0082 13       		.uleb128 0x13
 1015 0083 02       		.uleb128 0x2
 1016 0084 17       		.uleb128 0x17
 1017 0085 00       		.byte	0
 1018 0086 00       		.byte	0
 1019 0087 0A       		.uleb128 0xa
 1020 0088 05       		.uleb128 0x5
 1021 0089 00       		.byte	0
 1022 008a 03       		.uleb128 0x3
 1023 008b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 28


 1024 008c 3A       		.uleb128 0x3a
 1025 008d 0B       		.uleb128 0xb
 1026 008e 3B       		.uleb128 0x3b
 1027 008f 0B       		.uleb128 0xb
 1028 0090 49       		.uleb128 0x49
 1029 0091 13       		.uleb128 0x13
 1030 0092 02       		.uleb128 0x2
 1031 0093 18       		.uleb128 0x18
 1032 0094 00       		.byte	0
 1033 0095 00       		.byte	0
 1034 0096 0B       		.uleb128 0xb
 1035 0097 2E       		.uleb128 0x2e
 1036 0098 00       		.byte	0
 1037 0099 3F       		.uleb128 0x3f
 1038 009a 19       		.uleb128 0x19
 1039 009b 03       		.uleb128 0x3
 1040 009c 0E       		.uleb128 0xe
 1041 009d 3A       		.uleb128 0x3a
 1042 009e 0B       		.uleb128 0xb
 1043 009f 3B       		.uleb128 0x3b
 1044 00a0 05       		.uleb128 0x5
 1045 00a1 27       		.uleb128 0x27
 1046 00a2 19       		.uleb128 0x19
 1047 00a3 49       		.uleb128 0x49
 1048 00a4 13       		.uleb128 0x13
 1049 00a5 11       		.uleb128 0x11
 1050 00a6 01       		.uleb128 0x1
 1051 00a7 12       		.uleb128 0x12
 1052 00a8 06       		.uleb128 0x6
 1053 00a9 40       		.uleb128 0x40
 1054 00aa 18       		.uleb128 0x18
 1055 00ab 9742     		.uleb128 0x2117
 1056 00ad 19       		.uleb128 0x19
 1057 00ae 00       		.byte	0
 1058 00af 00       		.byte	0
 1059 00b0 0C       		.uleb128 0xc
 1060 00b1 2E       		.uleb128 0x2e
 1061 00b2 01       		.byte	0x1
 1062 00b3 3F       		.uleb128 0x3f
 1063 00b4 19       		.uleb128 0x19
 1064 00b5 03       		.uleb128 0x3
 1065 00b6 0E       		.uleb128 0xe
 1066 00b7 3A       		.uleb128 0x3a
 1067 00b8 0B       		.uleb128 0xb
 1068 00b9 3B       		.uleb128 0x3b
 1069 00ba 05       		.uleb128 0x5
 1070 00bb 27       		.uleb128 0x27
 1071 00bc 19       		.uleb128 0x19
 1072 00bd 11       		.uleb128 0x11
 1073 00be 01       		.uleb128 0x1
 1074 00bf 12       		.uleb128 0x12
 1075 00c0 06       		.uleb128 0x6
 1076 00c1 40       		.uleb128 0x40
 1077 00c2 18       		.uleb128 0x18
 1078 00c3 9742     		.uleb128 0x2117
 1079 00c5 19       		.uleb128 0x19
 1080 00c6 01       		.uleb128 0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 29


 1081 00c7 13       		.uleb128 0x13
 1082 00c8 00       		.byte	0
 1083 00c9 00       		.byte	0
 1084 00ca 0D       		.uleb128 0xd
 1085 00cb 05       		.uleb128 0x5
 1086 00cc 00       		.byte	0
 1087 00cd 03       		.uleb128 0x3
 1088 00ce 0E       		.uleb128 0xe
 1089 00cf 3A       		.uleb128 0x3a
 1090 00d0 0B       		.uleb128 0xb
 1091 00d1 3B       		.uleb128 0x3b
 1092 00d2 05       		.uleb128 0x5
 1093 00d3 49       		.uleb128 0x49
 1094 00d4 13       		.uleb128 0x13
 1095 00d5 02       		.uleb128 0x2
 1096 00d6 17       		.uleb128 0x17
 1097 00d7 00       		.byte	0
 1098 00d8 00       		.byte	0
 1099 00d9 0E       		.uleb128 0xe
 1100 00da 05       		.uleb128 0x5
 1101 00db 00       		.byte	0
 1102 00dc 03       		.uleb128 0x3
 1103 00dd 0E       		.uleb128 0xe
 1104 00de 3A       		.uleb128 0x3a
 1105 00df 0B       		.uleb128 0xb
 1106 00e0 3B       		.uleb128 0x3b
 1107 00e1 0B       		.uleb128 0xb
 1108 00e2 49       		.uleb128 0x49
 1109 00e3 13       		.uleb128 0x13
 1110 00e4 02       		.uleb128 0x2
 1111 00e5 17       		.uleb128 0x17
 1112 00e6 00       		.byte	0
 1113 00e7 00       		.byte	0
 1114 00e8 0F       		.uleb128 0xf
 1115 00e9 34       		.uleb128 0x34
 1116 00ea 00       		.byte	0
 1117 00eb 03       		.uleb128 0x3
 1118 00ec 0E       		.uleb128 0xe
 1119 00ed 3A       		.uleb128 0x3a
 1120 00ee 0B       		.uleb128 0xb
 1121 00ef 3B       		.uleb128 0x3b
 1122 00f0 0B       		.uleb128 0xb
 1123 00f1 49       		.uleb128 0x49
 1124 00f2 13       		.uleb128 0x13
 1125 00f3 02       		.uleb128 0x2
 1126 00f4 18       		.uleb128 0x18
 1127 00f5 00       		.byte	0
 1128 00f6 00       		.byte	0
 1129 00f7 10       		.uleb128 0x10
 1130 00f8 898201   		.uleb128 0x4109
 1131 00fb 00       		.byte	0
 1132 00fc 11       		.uleb128 0x11
 1133 00fd 01       		.uleb128 0x1
 1134 00fe 31       		.uleb128 0x31
 1135 00ff 13       		.uleb128 0x13
 1136 0100 00       		.byte	0
 1137 0101 00       		.byte	0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 30


 1138 0102 11       		.uleb128 0x11
 1139 0103 2E       		.uleb128 0x2e
 1140 0104 01       		.byte	0x1
 1141 0105 3F       		.uleb128 0x3f
 1142 0106 19       		.uleb128 0x19
 1143 0107 03       		.uleb128 0x3
 1144 0108 0E       		.uleb128 0xe
 1145 0109 3A       		.uleb128 0x3a
 1146 010a 0B       		.uleb128 0xb
 1147 010b 3B       		.uleb128 0x3b
 1148 010c 05       		.uleb128 0x5
 1149 010d 27       		.uleb128 0x27
 1150 010e 19       		.uleb128 0x19
 1151 010f 11       		.uleb128 0x11
 1152 0110 01       		.uleb128 0x1
 1153 0111 12       		.uleb128 0x12
 1154 0112 06       		.uleb128 0x6
 1155 0113 40       		.uleb128 0x40
 1156 0114 18       		.uleb128 0x18
 1157 0115 9742     		.uleb128 0x2117
 1158 0117 19       		.uleb128 0x19
 1159 0118 00       		.byte	0
 1160 0119 00       		.byte	0
 1161 011a 12       		.uleb128 0x12
 1162 011b 34       		.uleb128 0x34
 1163 011c 00       		.byte	0
 1164 011d 03       		.uleb128 0x3
 1165 011e 0E       		.uleb128 0xe
 1166 011f 3A       		.uleb128 0x3a
 1167 0120 0B       		.uleb128 0xb
 1168 0121 3B       		.uleb128 0x3b
 1169 0122 05       		.uleb128 0x5
 1170 0123 49       		.uleb128 0x49
 1171 0124 13       		.uleb128 0x13
 1172 0125 02       		.uleb128 0x2
 1173 0126 17       		.uleb128 0x17
 1174 0127 00       		.byte	0
 1175 0128 00       		.byte	0
 1176 0129 13       		.uleb128 0x13
 1177 012a 34       		.uleb128 0x34
 1178 012b 00       		.byte	0
 1179 012c 03       		.uleb128 0x3
 1180 012d 0E       		.uleb128 0xe
 1181 012e 3A       		.uleb128 0x3a
 1182 012f 0B       		.uleb128 0xb
 1183 0130 3B       		.uleb128 0x3b
 1184 0131 05       		.uleb128 0x5
 1185 0132 49       		.uleb128 0x49
 1186 0133 13       		.uleb128 0x13
 1187 0134 02       		.uleb128 0x2
 1188 0135 18       		.uleb128 0x18
 1189 0136 00       		.byte	0
 1190 0137 00       		.byte	0
 1191 0138 00       		.byte	0
 1192              		.section	.debug_loc,"",%progbits
 1193              	.Ldebug_loc0:
 1194              	.LLST0:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 31


 1195 0000 2A000000 		.4byte	.LVL0
 1196 0004 5A000000 		.4byte	.LVL1
 1197 0008 0100     		.2byte	0x1
 1198 000a 52       		.byte	0x52
 1199 000b 00000000 		.4byte	0
 1200 000f 00000000 		.4byte	0
 1201              	.LLST1:
 1202 0013 00000000 		.4byte	.LVL3
 1203 0017 08000000 		.4byte	.LVL4
 1204 001b 0100     		.2byte	0x1
 1205 001d 50       		.byte	0x50
 1206 001e 08000000 		.4byte	.LVL4
 1207 0022 14000000 		.4byte	.LFE6
 1208 0026 0400     		.2byte	0x4
 1209 0028 F3       		.byte	0xf3
 1210 0029 01       		.uleb128 0x1
 1211 002a 50       		.byte	0x50
 1212 002b 9F       		.byte	0x9f
 1213 002c 00000000 		.4byte	0
 1214 0030 00000000 		.4byte	0
 1215              	.LLST2:
 1216 0034 00000000 		.4byte	.LVL5
 1217 0038 06000000 		.4byte	.LVL6
 1218 003c 0100     		.2byte	0x1
 1219 003e 50       		.byte	0x50
 1220 003f 06000000 		.4byte	.LVL6
 1221 0043 18000000 		.4byte	.LFE7
 1222 0047 0400     		.2byte	0x4
 1223 0049 F3       		.byte	0xf3
 1224 004a 01       		.uleb128 0x1
 1225 004b 50       		.byte	0x50
 1226 004c 9F       		.byte	0x9f
 1227 004d 00000000 		.4byte	0
 1228 0051 00000000 		.4byte	0
 1229              	.LLST3:
 1230 0055 00000000 		.4byte	.LVL7
 1231 0059 09000000 		.4byte	.LVL8-1
 1232 005d 0100     		.2byte	0x1
 1233 005f 50       		.byte	0x50
 1234 0060 09000000 		.4byte	.LVL8-1
 1235 0064 DC000000 		.4byte	.LFE4
 1236 0068 0400     		.2byte	0x4
 1237 006a F3       		.byte	0xf3
 1238 006b 01       		.uleb128 0x1
 1239 006c 50       		.byte	0x50
 1240 006d 9F       		.byte	0x9f
 1241 006e 00000000 		.4byte	0
 1242 0072 00000000 		.4byte	0
 1243              	.LLST4:
 1244 0076 00000000 		.4byte	.LVL7
 1245 007a 09000000 		.4byte	.LVL8-1
 1246 007e 0100     		.2byte	0x1
 1247 0080 51       		.byte	0x51
 1248 0081 09000000 		.4byte	.LVL8-1
 1249 0085 DC000000 		.4byte	.LFE4
 1250 0089 0400     		.2byte	0x4
 1251 008b F3       		.byte	0xf3
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 32


 1252 008c 01       		.uleb128 0x1
 1253 008d 51       		.byte	0x51
 1254 008e 9F       		.byte	0x9f
 1255 008f 00000000 		.4byte	0
 1256 0093 00000000 		.4byte	0
 1257              	.LLST5:
 1258 0097 1E000000 		.4byte	.LVL11
 1259 009b 2C000000 		.4byte	.LVL12
 1260 009f 0100     		.2byte	0x1
 1261 00a1 52       		.byte	0x52
 1262 00a2 36000000 		.4byte	.LVL13
 1263 00a6 38000000 		.4byte	.LVL14
 1264 00aa 0100     		.2byte	0x1
 1265 00ac 52       		.byte	0x52
 1266 00ad 38000000 		.4byte	.LVL14
 1267 00b1 3A000000 		.4byte	.LVL15
 1268 00b5 0100     		.2byte	0x1
 1269 00b7 53       		.byte	0x53
 1270 00b8 46000000 		.4byte	.LVL16
 1271 00bc A4000000 		.4byte	.LVL18
 1272 00c0 0100     		.2byte	0x1
 1273 00c2 52       		.byte	0x52
 1274 00c3 A6000000 		.4byte	.LVL19
 1275 00c7 A8000000 		.4byte	.LVL20
 1276 00cb 0100     		.2byte	0x1
 1277 00cd 52       		.byte	0x52
 1278 00ce B8000000 		.4byte	.LVL21
 1279 00d2 C4000000 		.4byte	.LVL22
 1280 00d6 0100     		.2byte	0x1
 1281 00d8 52       		.byte	0x52
 1282 00d9 00000000 		.4byte	0
 1283 00dd 00000000 		.4byte	0
 1284              	.LLST6:
 1285 00e1 0C000000 		.4byte	.LVL9
 1286 00e5 50000000 		.4byte	.LVL17
 1287 00e9 0100     		.2byte	0x1
 1288 00eb 56       		.byte	0x56
 1289 00ec 00000000 		.4byte	0
 1290 00f0 00000000 		.4byte	0
 1291              	.LLST7:
 1292 00f4 00000000 		.4byte	.LVL23
 1293 00f8 07000000 		.4byte	.LVL24-1
 1294 00fc 0100     		.2byte	0x1
 1295 00fe 50       		.byte	0x50
 1296 00ff 07000000 		.4byte	.LVL24-1
 1297 0103 5C000000 		.4byte	.LFE9
 1298 0107 0400     		.2byte	0x4
 1299 0109 F3       		.byte	0xf3
 1300 010a 01       		.uleb128 0x1
 1301 010b 50       		.byte	0x50
 1302 010c 9F       		.byte	0x9f
 1303 010d 00000000 		.4byte	0
 1304 0111 00000000 		.4byte	0
 1305              	.LLST8:
 1306 0115 0A000000 		.4byte	.LVL25
 1307 0119 56000000 		.4byte	.LVL29
 1308 011d 0100     		.2byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 33


 1309 011f 55       		.byte	0x55
 1310 0120 00000000 		.4byte	0
 1311 0124 00000000 		.4byte	0
 1312              		.section	.debug_aranges,"",%progbits
 1313 0000 6C000000 		.4byte	0x6c
 1314 0004 0200     		.2byte	0x2
 1315 0006 00000000 		.4byte	.Ldebug_info0
 1316 000a 04       		.byte	0x4
 1317 000b 00       		.byte	0
 1318 000c 0000     		.2byte	0
 1319 000e 0000     		.2byte	0
 1320 0010 00000000 		.4byte	.LFB0
 1321 0014 1C000000 		.4byte	.LFE0-.LFB0
 1322 0018 00000000 		.4byte	.LFB1
 1323 001c 1C000000 		.4byte	.LFE1-.LFB1
 1324 0020 00000000 		.4byte	.LFB2
 1325 0024 6C000000 		.4byte	.LFE2-.LFB2
 1326 0028 00000000 		.4byte	.LFB3
 1327 002c 20000000 		.4byte	.LFE3-.LFB3
 1328 0030 00000000 		.4byte	.LFB5
 1329 0034 0C000000 		.4byte	.LFE5-.LFB5
 1330 0038 00000000 		.4byte	.LFB6
 1331 003c 14000000 		.4byte	.LFE6-.LFB6
 1332 0040 00000000 		.4byte	.LFB7
 1333 0044 18000000 		.4byte	.LFE7-.LFB7
 1334 0048 00000000 		.4byte	.LFB8
 1335 004c 10000000 		.4byte	.LFE8-.LFB8
 1336 0050 00000000 		.4byte	.LFB10
 1337 0054 10000000 		.4byte	.LFE10-.LFB10
 1338 0058 00000000 		.4byte	.LFB4
 1339 005c DC000000 		.4byte	.LFE4-.LFB4
 1340 0060 00000000 		.4byte	.LFB9
 1341 0064 5C000000 		.4byte	.LFE9-.LFB9
 1342 0068 00000000 		.4byte	0
 1343 006c 00000000 		.4byte	0
 1344              		.section	.debug_ranges,"",%progbits
 1345              	.Ldebug_ranges0:
 1346 0000 00000000 		.4byte	.LFB0
 1347 0004 1C000000 		.4byte	.LFE0
 1348 0008 00000000 		.4byte	.LFB1
 1349 000c 1C000000 		.4byte	.LFE1
 1350 0010 00000000 		.4byte	.LFB2
 1351 0014 6C000000 		.4byte	.LFE2
 1352 0018 00000000 		.4byte	.LFB3
 1353 001c 20000000 		.4byte	.LFE3
 1354 0020 00000000 		.4byte	.LFB5
 1355 0024 0C000000 		.4byte	.LFE5
 1356 0028 00000000 		.4byte	.LFB6
 1357 002c 14000000 		.4byte	.LFE6
 1358 0030 00000000 		.4byte	.LFB7
 1359 0034 18000000 		.4byte	.LFE7
 1360 0038 00000000 		.4byte	.LFB8
 1361 003c 10000000 		.4byte	.LFE8
 1362 0040 00000000 		.4byte	.LFB10
 1363 0044 10000000 		.4byte	.LFE10
 1364 0048 00000000 		.4byte	.LFB4
 1365 004c DC000000 		.4byte	.LFE4
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 34


 1366 0050 00000000 		.4byte	.LFB9
 1367 0054 5C000000 		.4byte	.LFE9
 1368 0058 00000000 		.4byte	0
 1369 005c 00000000 		.4byte	0
 1370              		.section	.debug_line,"",%progbits
 1371              	.Ldebug_line0:
 1372 0000 93010000 		.section	.debug_str,"MS",%progbits,1
 1372      02006500 
 1372      00000201 
 1372      FB0E0D00 
 1372      01010101 
 1373              	.LASF34:
 1374 0000 63757272 		.ascii	"currDiv\000"
 1374      44697600 
 1375              	.LASF15:
 1376 0008 72656731 		.ascii	"reg16\000"
 1376      3600
 1377              	.LASF2:
 1378 000e 73686F72 		.ascii	"short int\000"
 1378      7420696E 
 1378      7400
 1379              	.LASF26:
 1380 0018 57617665 		.ascii	"WaveDAC8_DacClk_GetSourceRegister\000"
 1380      44414338 
 1380      5F446163 
 1380      436C6B5F 
 1380      47657453 
 1381              	.LASF39:
 1382 003a 57617665 		.ascii	"WaveDAC8_DacClk_SetSourceRegister\000"
 1382      44414338 
 1382      5F446163 
 1382      436C6B5F 
 1382      53657453 
 1383              	.LASF19:
 1384 005c 57617665 		.ascii	"WaveDAC8_DacClk_StandbyPower\000"
 1384      44414338 
 1384      5F446163 
 1384      436C6B5F 
 1384      5374616E 
 1385              	.LASF16:
 1386 0079 57617665 		.ascii	"WaveDAC8_DacClk_Start\000"
 1386      44414338 
 1386      5F446163 
 1386      436C6B5F 
 1386      53746172 
 1387              	.LASF10:
 1388 008f 75696E74 		.ascii	"uint16\000"
 1388      313600
 1389              	.LASF29:
 1390 0096 72657374 		.ascii	"restart\000"
 1390      61727400 
 1391              	.LASF35:
 1392 009e 6F6C6453 		.ascii	"oldSrc\000"
 1392      726300
 1393              	.LASF9:
 1394 00a5 75696E74 		.ascii	"uint8\000"
 1394      3800
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 35


 1395              	.LASF28:
 1396 00ab 636C6B44 		.ascii	"clkDivider\000"
 1396      69766964 
 1396      657200
 1397              	.LASF11:
 1398 00b6 666C6F61 		.ascii	"float\000"
 1398      7400
 1399              	.LASF6:
 1400 00bc 6C6F6E67 		.ascii	"long long int\000"
 1400      206C6F6E 
 1400      6720696E 
 1400      7400
 1401              	.LASF23:
 1402 00ca 57617665 		.ascii	"WaveDAC8_DacClk_ClearModeRegister\000"
 1402      44414338 
 1402      5F446163 
 1402      436C6B5F 
 1402      436C6561 
 1403              	.LASF4:
 1404 00ec 6C6F6E67 		.ascii	"long int\000"
 1404      20696E74 
 1404      00
 1405              	.LASF21:
 1406 00f5 73746174 		.ascii	"state\000"
 1406      6500
 1407              	.LASF18:
 1408 00fb 57617665 		.ascii	"WaveDAC8_DacClk_StopBlock\000"
 1408      44414338 
 1408      5F446163 
 1408      436C6B5F 
 1408      53746F70 
 1409              	.LASF1:
 1410 0115 756E7369 		.ascii	"unsigned char\000"
 1410      676E6564 
 1410      20636861 
 1410      7200
 1411              	.LASF22:
 1412 0123 6D6F6465 		.ascii	"modeBitMask\000"
 1412      4269744D 
 1412      61736B00 
 1413              	.LASF0:
 1414 012f 7369676E 		.ascii	"signed char\000"
 1414      65642063 
 1414      68617200 
 1415              	.LASF7:
 1416 013b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1416      206C6F6E 
 1416      6720756E 
 1416      7369676E 
 1416      65642069 
 1417              	.LASF8:
 1418 0152 756E7369 		.ascii	"unsigned int\000"
 1418      676E6564 
 1418      20696E74 
 1418      00
 1419              	.LASF20:
 1420 015f 57617665 		.ascii	"WaveDAC8_DacClk_SetModeRegister\000"
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 36


 1420      44414338 
 1420      5F446163 
 1420      436C6B5F 
 1420      5365744D 
 1421              	.LASF3:
 1422 017f 73686F72 		.ascii	"short unsigned int\000"
 1422      7420756E 
 1422      7369676E 
 1422      65642069 
 1422      6E7400
 1423              	.LASF13:
 1424 0192 63686172 		.ascii	"char\000"
 1424      00
 1425              	.LASF36:
 1426 0197 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1426      4320342E 
 1426      392E3320 
 1426      32303135 
 1426      30333033 
 1427 01ca 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1427      20726576 
 1427      6973696F 
 1427      6E203232 
 1427      31323230 
 1428 01fd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1428      66756E63 
 1428      74696F6E 
 1428      2D736563 
 1428      74696F6E 
 1429              	.LASF33:
 1430 0225 636C6B53 		.ascii	"clkSource\000"
 1430      6F757263 
 1430      6500
 1431              	.LASF32:
 1432 022f 63757272 		.ascii	"currSrc\000"
 1432      53726300 
 1433              	.LASF24:
 1434 0237 57617665 		.ascii	"WaveDAC8_DacClk_GetDividerRegister\000"
 1434      44414338 
 1434      5F446163 
 1434      436C6B5F 
 1434      47657444 
 1435              	.LASF30:
 1436 025a 6F6C6444 		.ascii	"oldDivider\000"
 1436      69766964 
 1436      657200
 1437              	.LASF37:
 1438 0265 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\WaveDAC8_DacClk.c\000"
 1438      6E657261 
 1438      7465645F 
 1438      536F7572 
 1438      63655C50 
 1439              	.LASF14:
 1440 0290 72656738 		.ascii	"reg8\000"
 1440      00
 1441              	.LASF5:
 1442 0295 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Ian\AppData\Local\Temp\cclLvQPM.s 			page 37


 1442      20756E73 
 1442      69676E65 
 1442      6420696E 
 1442      7400
 1443              	.LASF12:
 1444 02a7 646F7562 		.ascii	"double\000"
 1444      6C6500
 1445              	.LASF38:
 1446 02ae 433A5C55 		.ascii	"C:\\Users\\Ian\\Documents\\Junior\\Senior Project C"
 1446      73657273 
 1446      5C49616E 
 1446      5C446F63 
 1446      756D656E 
 1447 02dc 68697020 		.ascii	"hip Design\\Chip-Design\\proj_asic\\psoc\\Wave Gene"
 1447      44657369 
 1447      676E5C43 
 1447      6869702D 
 1447      44657369 
 1448 030b 7261746F 		.ascii	"rator\\Wave Generator.cydsn\000"
 1448      725C5761 
 1448      76652047 
 1448      656E6572 
 1448      61746F72 
 1449              	.LASF31:
 1450 0326 656E6162 		.ascii	"enabled\000"
 1450      6C656400 
 1451              	.LASF27:
 1452 032e 57617665 		.ascii	"WaveDAC8_DacClk_SetDividerRegister\000"
 1452      44414338 
 1452      5F446163 
 1452      436C6B5F 
 1452      53657444 
 1453              	.LASF17:
 1454 0351 57617665 		.ascii	"WaveDAC8_DacClk_Stop\000"
 1454      44414338 
 1454      5F446163 
 1454      436C6B5F 
 1454      53746F70 
 1455              	.LASF25:
 1456 0366 57617665 		.ascii	"WaveDAC8_DacClk_GetModeRegister\000"
 1456      44414338 
 1456      5F446163 
 1456      436C6B5F 
 1456      4765744D 
 1457              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
