ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_GainCompensation,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_GainCompensation, %function
  23              	ADC_GainCompensation:
  24              	.LFB21:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC.c"
   1:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC5/ADC.c **** * Version 3.20
   4:.\Generated_Source\PSoC5/ADC.c **** *
   5:.\Generated_Source\PSoC5/ADC.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:.\Generated_Source\PSoC5/ADC.c **** *  Component.
   8:.\Generated_Source\PSoC5/ADC.c **** *
   9:.\Generated_Source\PSoC5/ADC.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC.c **** *
  11:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC.c **** 
  18:.\Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC5/ADC.c **** 
  20:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:.\Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:.\Generated_Source\PSoC5/ADC.c **** 
  24:.\Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:.\Generated_Source\PSoC5/ADC.c **** 
  26:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:.\Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:.\Generated_Source\PSoC5/ADC.c **** 
  30:.\Generated_Source\PSoC5/ADC.c **** 
  31:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  32:.\Generated_Source\PSoC5/ADC.c **** * Global data allocation
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 2


  33:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:.\Generated_Source\PSoC5/ADC.c **** 
  35:.\Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:.\Generated_Source\PSoC5/ADC.c **** 
  38:.\Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:.\Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:.\Generated_Source\PSoC5/ADC.c **** */
  41:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:.\Generated_Source\PSoC5/ADC.c **** 
  43:.\Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:.\Generated_Source\PSoC5/ADC.c **** 
  46:.\Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:.\Generated_Source\PSoC5/ADC.c **** 
  49:.\Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:.\Generated_Source\PSoC5/ADC.c **** 
  52:.\Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset;
  53:.\Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:.\Generated_Source\PSoC5/ADC.c **** 
  55:.\Generated_Source\PSoC5/ADC.c **** 
  56:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  57:.\Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:.\Generated_Source\PSoC5/ADC.c **** 
  60:.\Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:.\Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:.\Generated_Source\PSoC5/ADC.c **** 
  63:.\Generated_Source\PSoC5/ADC.c **** 
  64:.\Generated_Source\PSoC5/ADC.c **** 
  65:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  66:.\Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:.\Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:.\Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:.\Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:.\Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:.\Generated_Source\PSoC5/ADC.c **** 
  73:.\Generated_Source\PSoC5/ADC.c **** 
  74:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:.\Generated_Source\PSoC5/ADC.c **** *
  78:.\Generated_Source\PSoC5/ADC.c **** * Summary:
  79:.\Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:.\Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:.\Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:.\Generated_Source\PSoC5/ADC.c **** *
  83:.\Generated_Source\PSoC5/ADC.c **** *
  84:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC5/ADC.c **** *  None
  86:.\Generated_Source\PSoC5/ADC.c **** *
  87:.\Generated_Source\PSoC5/ADC.c **** * Return:
  88:.\Generated_Source\PSoC5/ADC.c **** *  None
  89:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 3


  90:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:.\Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:.\Generated_Source\PSoC5/ADC.c **** {
  93:.\Generated_Source\PSoC5/ADC.c **** 
  94:.\Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  95:.\Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  96:.\Generated_Source\PSoC5/ADC.c **** 
  97:.\Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  98:.\Generated_Source\PSoC5/ADC.c **** 
  99:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:.\Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 102:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:.\Generated_Source\PSoC5/ADC.c **** 
 104:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:.\Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:.\Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 107:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:.\Generated_Source\PSoC5/ADC.c **** 
 109:.\Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
 111:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 112:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 113:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 114:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 115:.\Generated_Source\PSoC5/ADC.c **** 
 116:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 117:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 118:.\Generated_Source\PSoC5/ADC.c **** 
 119:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 120:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 121:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:.\Generated_Source\PSoC5/ADC.c **** #else
 124:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 125:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 127:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 128:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 129:.\Generated_Source\PSoC5/ADC.c **** 
 130:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 131:.\Generated_Source\PSoC5/ADC.c **** 
 132:.\Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:.\Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 134:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 140:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 4


 147:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 154:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:.\Generated_Source\PSoC5/ADC.c **** 
 160:.\Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 162:.\Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 163:.\Generated_Source\PSoC5/ADC.c **** 
 164:.\Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:.\Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 166:.\Generated_Source\PSoC5/ADC.c **** }
 167:.\Generated_Source\PSoC5/ADC.c **** 
 168:.\Generated_Source\PSoC5/ADC.c **** 
 169:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:.\Generated_Source\PSoC5/ADC.c **** *
 173:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 174:.\Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:.\Generated_Source\PSoC5/ADC.c **** *
 176:.\Generated_Source\PSoC5/ADC.c **** *
 177:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 178:.\Generated_Source\PSoC5/ADC.c **** *  None
 179:.\Generated_Source\PSoC5/ADC.c **** *
 180:.\Generated_Source\PSoC5/ADC.c **** * Return:
 181:.\Generated_Source\PSoC5/ADC.c **** *  None
 182:.\Generated_Source\PSoC5/ADC.c **** *
 183:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 184:.\Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 185:.\Generated_Source\PSoC5/ADC.c **** {
 186:.\Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 187:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 188:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 189:.\Generated_Source\PSoC5/ADC.c **** 
 190:.\Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 191:.\Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 192:.\Generated_Source\PSoC5/ADC.c ****     
 193:.\Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 194:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 195:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 196:.\Generated_Source\PSoC5/ADC.c **** 
 197:.\Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 198:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 199:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 200:.\Generated_Source\PSoC5/ADC.c **** 
 201:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 203:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 5


 204:.\Generated_Source\PSoC5/ADC.c **** 
 205:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 206:.\Generated_Source\PSoC5/ADC.c **** 
 207:.\Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:.\Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 209:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 210:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 212:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 213:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 215:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 216:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 218:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 219:.\Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 220:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 221:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 222:.\Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 223:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 224:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 225:.\Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 226:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 227:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 228:.\Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 229:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 230:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 231:.\Generated_Source\PSoC5/ADC.c ****         {
 232:.\Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 233:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 234:.\Generated_Source\PSoC5/ADC.c ****         }
 235:.\Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 236:.\Generated_Source\PSoC5/ADC.c **** 
 237:.\Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 238:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 240:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 244:.\Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 245:.\Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 246:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 247:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 248:.\Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 249:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 250:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 251:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 252:.\Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 253:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 254:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 255:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 256:.\Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 257:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 258:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 259:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 260:.\Generated_Source\PSoC5/ADC.c ****         {
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 6


 261:.\Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 262:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 263:.\Generated_Source\PSoC5/ADC.c ****         }
 264:.\Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:.\Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 266:.\Generated_Source\PSoC5/ADC.c ****     {
 267:.\Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 268:.\Generated_Source\PSoC5/ADC.c ****     }
 269:.\Generated_Source\PSoC5/ADC.c **** 
 270:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 271:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 272:.\Generated_Source\PSoC5/ADC.c **** 
 273:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 274:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 275:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 276:.\Generated_Source\PSoC5/ADC.c **** 
 277:.\Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 278:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 279:.\Generated_Source\PSoC5/ADC.c **** 
 280:.\Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 281:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 282:.\Generated_Source\PSoC5/ADC.c **** 
 283:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 284:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 285:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 286:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 287:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 288:.\Generated_Source\PSoC5/ADC.c **** 
 289:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 291:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 292:.\Generated_Source\PSoC5/ADC.c **** 
 293:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 294:.\Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 295:.\Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 296:.\Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 297:.\Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 298:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 299:.\Generated_Source\PSoC5/ADC.c **** 
 300:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 301:.\Generated_Source\PSoC5/ADC.c **** 
 302:.\Generated_Source\PSoC5/ADC.c **** }
 303:.\Generated_Source\PSoC5/ADC.c **** 
 304:.\Generated_Source\PSoC5/ADC.c **** 
 305:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 307:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/ADC.c **** *
 309:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 310:.\Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 311:.\Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 312:.\Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:.\Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:.\Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:.\Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 316:.\Generated_Source\PSoC5/ADC.c **** *  the default setting.
 317:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 7


 318:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 319:.\Generated_Source\PSoC5/ADC.c **** *  None
 320:.\Generated_Source\PSoC5/ADC.c **** *
 321:.\Generated_Source\PSoC5/ADC.c **** * Return:
 322:.\Generated_Source\PSoC5/ADC.c **** *  None
 323:.\Generated_Source\PSoC5/ADC.c **** *
 324:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 325:.\Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 326:.\Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 327:.\Generated_Source\PSoC5/ADC.c **** *
 328:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 330:.\Generated_Source\PSoC5/ADC.c **** {
 331:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 332:.\Generated_Source\PSoC5/ADC.c ****     {
 333:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 334:.\Generated_Source\PSoC5/ADC.c ****         {
 335:.\Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 336:.\Generated_Source\PSoC5/ADC.c ****         }
 337:.\Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 338:.\Generated_Source\PSoC5/ADC.c ****     }
 339:.\Generated_Source\PSoC5/ADC.c **** 
 340:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 341:.\Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 342:.\Generated_Source\PSoC5/ADC.c **** }
 343:.\Generated_Source\PSoC5/ADC.c **** 
 344:.\Generated_Source\PSoC5/ADC.c **** 
 345:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 347:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 348:.\Generated_Source\PSoC5/ADC.c **** *
 349:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 350:.\Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:.\Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:.\Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:.\Generated_Source\PSoC5/ADC.c **** *  required.
 354:.\Generated_Source\PSoC5/ADC.c **** *
 355:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 356:.\Generated_Source\PSoC5/ADC.c **** *  None
 357:.\Generated_Source\PSoC5/ADC.c **** *
 358:.\Generated_Source\PSoC5/ADC.c **** * Return:
 359:.\Generated_Source\PSoC5/ADC.c **** *  None
 360:.\Generated_Source\PSoC5/ADC.c **** *
 361:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 362:.\Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 363:.\Generated_Source\PSoC5/ADC.c **** {
 364:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 365:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 366:.\Generated_Source\PSoC5/ADC.c **** 
 367:.\Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 368:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 369:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 370:.\Generated_Source\PSoC5/ADC.c **** 
 371:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:.\Generated_Source\PSoC5/ADC.c ****        enable PRES */
 373:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 374:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 8


 375:.\Generated_Source\PSoC5/ADC.c **** 
 376:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 377:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 378:.\Generated_Source\PSoC5/ADC.c **** 
 379:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 380:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 381:.\Generated_Source\PSoC5/ADC.c **** 
 382:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 383:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 384:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 385:.\Generated_Source\PSoC5/ADC.c **** 
 386:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 387:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 388:.\Generated_Source\PSoC5/ADC.c **** 
 389:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 390:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 391:.\Generated_Source\PSoC5/ADC.c **** 
 392:.\Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 393:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 394:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 395:.\Generated_Source\PSoC5/ADC.c **** 
 396:.\Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 397:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 398:.\Generated_Source\PSoC5/ADC.c **** 
 399:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 400:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 401:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 402:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 403:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 404:.\Generated_Source\PSoC5/ADC.c **** 
 405:.\Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 406:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 407:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 408:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 409:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 410:.\Generated_Source\PSoC5/ADC.c ****     
 411:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 412:.\Generated_Source\PSoC5/ADC.c **** }
 413:.\Generated_Source\PSoC5/ADC.c **** 
 414:.\Generated_Source\PSoC5/ADC.c **** 
 415:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 417:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/ADC.c **** *
 419:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 420:.\Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 421:.\Generated_Source\PSoC5/ADC.c **** *
 422:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 423:.\Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:.\Generated_Source\PSoC5/ADC.c **** *
 425:.\Generated_Source\PSoC5/ADC.c **** * Return:
 426:.\Generated_Source\PSoC5/ADC.c **** *  None
 427:.\Generated_Source\PSoC5/ADC.c **** *
 428:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 429:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 430:.\Generated_Source\PSoC5/ADC.c **** {
 431:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 9


 432:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 433:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 434:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 435:.\Generated_Source\PSoC5/ADC.c **** }
 436:.\Generated_Source\PSoC5/ADC.c **** 
 437:.\Generated_Source\PSoC5/ADC.c **** 
 438:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 440:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 441:.\Generated_Source\PSoC5/ADC.c **** *
 442:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 443:.\Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:.\Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:.\Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:.\Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:.\Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:.\Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 449:.\Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:.\Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:.\Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:.\Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 453:.\Generated_Source\PSoC5/ADC.c **** *
 454:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 455:.\Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:.\Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 457:.\Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 458:.\Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 459:.\Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 460:.\Generated_Source\PSoC5/ADC.c **** *
 461:.\Generated_Source\PSoC5/ADC.c **** * Return:
 462:.\Generated_Source\PSoC5/ADC.c **** *  None
 463:.\Generated_Source\PSoC5/ADC.c **** *
 464:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 466:.\Generated_Source\PSoC5/ADC.c **** {
 467:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 468:.\Generated_Source\PSoC5/ADC.c **** 
 469:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 470:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 471:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 472:.\Generated_Source\PSoC5/ADC.c **** }
 473:.\Generated_Source\PSoC5/ADC.c **** 
 474:.\Generated_Source\PSoC5/ADC.c **** 
 475:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 476:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 477:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 478:.\Generated_Source\PSoC5/ADC.c **** *
 479:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 480:.\Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:.\Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:.\Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:.\Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:.\Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 485:.\Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 486:.\Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 487:.\Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:.\Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 10


 489:.\Generated_Source\PSoC5/ADC.c **** *
 490:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 491:.\Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:.\Generated_Source\PSoC5/ADC.c **** *
 493:.\Generated_Source\PSoC5/ADC.c **** * Return:
 494:.\Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:.\Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:.\Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 497:.\Generated_Source\PSoC5/ADC.c **** *
 498:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:.\Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:.\Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:.\Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:.\Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:.\Generated_Source\PSoC5/ADC.c **** *
 504:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 505:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 506:.\Generated_Source\PSoC5/ADC.c **** {
 507:.\Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 508:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 509:.\Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 510:.\Generated_Source\PSoC5/ADC.c **** 
 511:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 512:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 513:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 514:.\Generated_Source\PSoC5/ADC.c **** 
 515:.\Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 516:.\Generated_Source\PSoC5/ADC.c ****     {
 517:.\Generated_Source\PSoC5/ADC.c ****         status = 1u;
 518:.\Generated_Source\PSoC5/ADC.c ****     }
 519:.\Generated_Source\PSoC5/ADC.c ****     else
 520:.\Generated_Source\PSoC5/ADC.c ****     {
 521:.\Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 522:.\Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 523:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 524:.\Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:.\Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 526:.\Generated_Source\PSoC5/ADC.c **** 
 527:.\Generated_Source\PSoC5/ADC.c ****         status = 0u;
 528:.\Generated_Source\PSoC5/ADC.c **** 
 529:.\Generated_Source\PSoC5/ADC.c ****     }
 530:.\Generated_Source\PSoC5/ADC.c ****     return(status);
 531:.\Generated_Source\PSoC5/ADC.c **** }
 532:.\Generated_Source\PSoC5/ADC.c **** 
 533:.\Generated_Source\PSoC5/ADC.c **** 
 534:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 535:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 536:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 537:.\Generated_Source\PSoC5/ADC.c **** *
 538:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 539:.\Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:.\Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 541:.\Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:.\Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:.\Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:.\Generated_Source\PSoC5/ADC.c **** *
 545:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 11


 546:.\Generated_Source\PSoC5/ADC.c **** *  None
 547:.\Generated_Source\PSoC5/ADC.c **** *
 548:.\Generated_Source\PSoC5/ADC.c **** * Return:
 549:.\Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 550:.\Generated_Source\PSoC5/ADC.c **** *
 551:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 553:.\Generated_Source\PSoC5/ADC.c **** {
 554:.\Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 555:.\Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 556:.\Generated_Source\PSoC5/ADC.c **** 
 557:.\Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 558:.\Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 559:.\Generated_Source\PSoC5/ADC.c **** 
 560:.\Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 561:.\Generated_Source\PSoC5/ADC.c ****     {
 562:.\Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 563:.\Generated_Source\PSoC5/ADC.c ****     }
 564:.\Generated_Source\PSoC5/ADC.c **** 
 565:.\Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 566:.\Generated_Source\PSoC5/ADC.c **** }
 567:.\Generated_Source\PSoC5/ADC.c **** 
 568:.\Generated_Source\PSoC5/ADC.c **** 
 569:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 571:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 572:.\Generated_Source\PSoC5/ADC.c **** *
 573:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 574:.\Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:.\Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:.\Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:.\Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:.\Generated_Source\PSoC5/ADC.c **** *
 579:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 580:.\Generated_Source\PSoC5/ADC.c **** *  None
 581:.\Generated_Source\PSoC5/ADC.c **** *
 582:.\Generated_Source\PSoC5/ADC.c **** * Return:
 583:.\Generated_Source\PSoC5/ADC.c **** *  None
 584:.\Generated_Source\PSoC5/ADC.c **** *
 585:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 586:.\Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 587:.\Generated_Source\PSoC5/ADC.c **** {
 588:.\Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 589:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 590:.\Generated_Source\PSoC5/ADC.c **** }
 591:.\Generated_Source\PSoC5/ADC.c **** 
 592:.\Generated_Source\PSoC5/ADC.c **** 
 593:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 595:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 596:.\Generated_Source\PSoC5/ADC.c **** *
 597:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 598:.\Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:.\Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:.\Generated_Source\PSoC5/ADC.c **** *  conversion.
 601:.\Generated_Source\PSoC5/ADC.c **** *
 602:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 12


 603:.\Generated_Source\PSoC5/ADC.c **** *  None
 604:.\Generated_Source\PSoC5/ADC.c **** *
 605:.\Generated_Source\PSoC5/ADC.c **** * Return:
 606:.\Generated_Source\PSoC5/ADC.c **** *  None
 607:.\Generated_Source\PSoC5/ADC.c **** *
 608:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 610:.\Generated_Source\PSoC5/ADC.c **** {
 611:.\Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 612:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 613:.\Generated_Source\PSoC5/ADC.c **** }
 614:.\Generated_Source\PSoC5/ADC.c **** 
 615:.\Generated_Source\PSoC5/ADC.c **** 
 616:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 618:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 619:.\Generated_Source\PSoC5/ADC.c **** *
 620:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 621:.\Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:.\Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:.\Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 624:.\Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:.\Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:.\Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:.\Generated_Source\PSoC5/ADC.c **** *
 628:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:.\Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 631:.\Generated_Source\PSoC5/ADC.c **** *                                      status.
 632:.\Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:.\Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 634:.\Generated_Source\PSoC5/ADC.c **** *
 635:.\Generated_Source\PSoC5/ADC.c **** * Return:
 636:.\Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:.\Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:.\Generated_Source\PSoC5/ADC.c **** *
 639:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 640:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 641:.\Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 642:.\Generated_Source\PSoC5/ADC.c **** *
 643:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 645:.\Generated_Source\PSoC5/ADC.c **** {
 646:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 647:.\Generated_Source\PSoC5/ADC.c **** 
 648:.\Generated_Source\PSoC5/ADC.c ****     do
 649:.\Generated_Source\PSoC5/ADC.c ****     {
 650:.\Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:.\Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 652:.\Generated_Source\PSoC5/ADC.c ****         */
 653:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 654:.\Generated_Source\PSoC5/ADC.c ****         {
 655:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 656:.\Generated_Source\PSoC5/ADC.c ****         }
 657:.\Generated_Source\PSoC5/ADC.c ****         else
 658:.\Generated_Source\PSoC5/ADC.c ****         {
 659:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 13


 660:.\Generated_Source\PSoC5/ADC.c ****         }
 661:.\Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 662:.\Generated_Source\PSoC5/ADC.c **** 
 663:.\Generated_Source\PSoC5/ADC.c ****     return(status);
 664:.\Generated_Source\PSoC5/ADC.c **** }
 665:.\Generated_Source\PSoC5/ADC.c **** 
 666:.\Generated_Source\PSoC5/ADC.c **** 
 667:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 669:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC5/ADC.c **** *
 671:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:.\Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:.\Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:.\Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:.\Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:.\Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:.\Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 679:.\Generated_Source\PSoC5/ADC.c **** *
 680:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 681:.\Generated_Source\PSoC5/ADC.c **** *  None
 682:.\Generated_Source\PSoC5/ADC.c **** *
 683:.\Generated_Source\PSoC5/ADC.c **** * Return:
 684:.\Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:.\Generated_Source\PSoC5/ADC.c **** *
 686:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 688:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 689:.\Generated_Source\PSoC5/ADC.c **** *
 690:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 692:.\Generated_Source\PSoC5/ADC.c **** {
 693:.\Generated_Source\PSoC5/ADC.c ****     int8 result;
 694:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 695:.\Generated_Source\PSoC5/ADC.c **** 
 696:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 697:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 698:.\Generated_Source\PSoC5/ADC.c **** 
 699:.\Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 700:.\Generated_Source\PSoC5/ADC.c **** 
 701:.\Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 702:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 704:.\Generated_Source\PSoC5/ADC.c ****     }
 705:.\Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 706:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 708:.\Generated_Source\PSoC5/ADC.c ****     }
 709:.\Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 710:.\Generated_Source\PSoC5/ADC.c ****     {
 711:.\Generated_Source\PSoC5/ADC.c ****     }
 712:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 714:.\Generated_Source\PSoC5/ADC.c ****     {
 715:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 716:.\Generated_Source\PSoC5/ADC.c ****     }
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 14


 717:.\Generated_Source\PSoC5/ADC.c ****     return (result);
 718:.\Generated_Source\PSoC5/ADC.c **** }
 719:.\Generated_Source\PSoC5/ADC.c **** 
 720:.\Generated_Source\PSoC5/ADC.c **** 
 721:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 723:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/ADC.c **** *
 725:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 726:.\Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:.\Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:.\Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:.\Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:.\Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 731:.\Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:.\Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 733:.\Generated_Source\PSoC5/ADC.c **** *
 734:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 735:.\Generated_Source\PSoC5/ADC.c **** *   void
 736:.\Generated_Source\PSoC5/ADC.c **** *
 737:.\Generated_Source\PSoC5/ADC.c **** * Return:
 738:.\Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 739:.\Generated_Source\PSoC5/ADC.c **** *
 740:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 741:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 742:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 743:.\Generated_Source\PSoC5/ADC.c **** *
 744:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 745:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 746:.\Generated_Source\PSoC5/ADC.c **** {
 747:.\Generated_Source\PSoC5/ADC.c ****     uint16 result;
 748:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 749:.\Generated_Source\PSoC5/ADC.c **** 
 750:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 751:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 752:.\Generated_Source\PSoC5/ADC.c **** 
 753:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 754:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 756:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 757:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 758:.\Generated_Source\PSoC5/ADC.c ****         #else
 759:.\Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 760:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 761:.\Generated_Source\PSoC5/ADC.c ****     }
 762:.\Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 763:.\Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 764:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 765:.\Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 766:.\Generated_Source\PSoC5/ADC.c ****         #else
 767:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 768:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 769:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 770:.\Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 771:.\Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:.\Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 773:.\Generated_Source\PSoC5/ADC.c ****         }
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 15


 774:.\Generated_Source\PSoC5/ADC.c ****     }
 775:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 777:.\Generated_Source\PSoC5/ADC.c ****     {
 778:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 779:.\Generated_Source\PSoC5/ADC.c ****     }
 780:.\Generated_Source\PSoC5/ADC.c **** 
 781:.\Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 782:.\Generated_Source\PSoC5/ADC.c **** }
 783:.\Generated_Source\PSoC5/ADC.c **** 
 784:.\Generated_Source\PSoC5/ADC.c **** 
 785:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 786:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 787:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 788:.\Generated_Source\PSoC5/ADC.c **** *
 789:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 790:.\Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:.\Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 792:.\Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 793:.\Generated_Source\PSoC5/ADC.c **** *
 794:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 795:.\Generated_Source\PSoC5/ADC.c **** *  None
 796:.\Generated_Source\PSoC5/ADC.c **** *
 797:.\Generated_Source\PSoC5/ADC.c **** * Return:
 798:.\Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 799:.\Generated_Source\PSoC5/ADC.c **** *
 800:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 801:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 802:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 803:.\Generated_Source\PSoC5/ADC.c **** *
 804:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 805:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 806:.\Generated_Source\PSoC5/ADC.c **** {
 807:.\Generated_Source\PSoC5/ADC.c ****     uint32 result;
 808:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 809:.\Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 810:.\Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 811:.\Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 812:.\Generated_Source\PSoC5/ADC.c **** 
 813:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 814:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 815:.\Generated_Source\PSoC5/ADC.c **** 
 816:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 817:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 819:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 820:.\Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 821:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 822:.\Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 823:.\Generated_Source\PSoC5/ADC.c ****             }
 824:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 825:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 826:.\Generated_Source\PSoC5/ADC.c ****         #else
 827:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 828:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 829:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 830:.\Generated_Source\PSoC5/ADC.c ****     }
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 16


 831:.\Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 832:.\Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 833:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 834:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 835:.\Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 836:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 837:.\Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 838:.\Generated_Source\PSoC5/ADC.c ****             }
 839:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 840:.\Generated_Source\PSoC5/ADC.c ****         #else
 841:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 842:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 843:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 844:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 845:.\Generated_Source\PSoC5/ADC.c ****     }
 846:.\Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 847:.\Generated_Source\PSoC5/ADC.c ****     {
 848:.\Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 849:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 850:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 851:.\Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 852:.\Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 853:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 854:.\Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 855:.\Generated_Source\PSoC5/ADC.c ****             }
 856:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 857:.\Generated_Source\PSoC5/ADC.c ****         #else
 858:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 859:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 860:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 861:.\Generated_Source\PSoC5/ADC.c ****     }
 862:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 864:.\Generated_Source\PSoC5/ADC.c ****     {
 865:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 866:.\Generated_Source\PSoC5/ADC.c ****     }
 867:.\Generated_Source\PSoC5/ADC.c **** 
 868:.\Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 869:.\Generated_Source\PSoC5/ADC.c **** }
 870:.\Generated_Source\PSoC5/ADC.c **** 
 871:.\Generated_Source\PSoC5/ADC.c **** 
 872:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 873:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 874:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 875:.\Generated_Source\PSoC5/ADC.c **** *
 876:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 877:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:.\Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 880:.\Generated_Source\PSoC5/ADC.c **** *
 881:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 882:.\Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:.\Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 884:.\Generated_Source\PSoC5/ADC.c **** *
 885:.\Generated_Source\PSoC5/ADC.c **** * Return:
 886:.\Generated_Source\PSoC5/ADC.c **** *  None
 887:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 17


 888:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 889:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 890:.\Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 891:.\Generated_Source\PSoC5/ADC.c **** *
 892:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 893:.\Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 894:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 895:.\Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 896:.\Generated_Source\PSoC5/ADC.c **** *
 897:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 898:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 899:.\Generated_Source\PSoC5/ADC.c **** {
 900:.\Generated_Source\PSoC5/ADC.c **** 
 901:.\Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 902:.\Generated_Source\PSoC5/ADC.c **** }
 903:.\Generated_Source\PSoC5/ADC.c **** 
 904:.\Generated_Source\PSoC5/ADC.c **** 
 905:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 906:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 907:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 908:.\Generated_Source\PSoC5/ADC.c **** *
 909:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 910:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:.\Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 912:.\Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:.\Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:.\Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:.\Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 916:.\Generated_Source\PSoC5/ADC.c **** *
 917:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 918:.\Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 919:.\Generated_Source\PSoC5/ADC.c **** *
 920:.\Generated_Source\PSoC5/ADC.c **** * Return:
 921:.\Generated_Source\PSoC5/ADC.c **** *  None
 922:.\Generated_Source\PSoC5/ADC.c **** *
 923:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 924:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:.\Generated_Source\PSoC5/ADC.c **** *   per volt.
 926:.\Generated_Source\PSoC5/ADC.c **** *
 927:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 928:.\Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 929:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 930:.\Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:.\Generated_Source\PSoC5/ADC.c **** *
 932:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 933:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 934:.\Generated_Source\PSoC5/ADC.c **** {
 935:.\Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 936:.\Generated_Source\PSoC5/ADC.c **** }
 937:.\Generated_Source\PSoC5/ADC.c **** 
 938:.\Generated_Source\PSoC5/ADC.c **** 
 939:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 941:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 942:.\Generated_Source\PSoC5/ADC.c **** *
 943:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 944:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 18


 945:.\Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:.\Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 947:.\Generated_Source\PSoC5/ADC.c **** *
 948:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 949:.\Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:.\Generated_Source\PSoC5/ADC.c **** *
 951:.\Generated_Source\PSoC5/ADC.c **** * Return:
 952:.\Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 953:.\Generated_Source\PSoC5/ADC.c **** *
 954:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 955:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 957:.\Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 958:.\Generated_Source\PSoC5/ADC.c **** *
 959:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 960:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 961:.\Generated_Source\PSoC5/ADC.c **** {
 962:.\Generated_Source\PSoC5/ADC.c **** 
 963:.\Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 964:.\Generated_Source\PSoC5/ADC.c **** 
 965:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 967:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 968:.\Generated_Source\PSoC5/ADC.c ****         {
 969:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 970:.\Generated_Source\PSoC5/ADC.c ****         }
 971:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 972:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 973:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 974:.\Generated_Source\PSoC5/ADC.c ****         {
 975:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 976:.\Generated_Source\PSoC5/ADC.c ****         }
 977:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 978:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 979:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 980:.\Generated_Source\PSoC5/ADC.c ****         {
 981:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 982:.\Generated_Source\PSoC5/ADC.c ****         }
 983:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 984:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 985:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 986:.\Generated_Source\PSoC5/ADC.c ****         {
 987:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 988:.\Generated_Source\PSoC5/ADC.c ****         }
 989:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 990:.\Generated_Source\PSoC5/ADC.c **** 
 991:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 992:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 993:.\Generated_Source\PSoC5/ADC.c **** 
 994:.\Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 995:.\Generated_Source\PSoC5/ADC.c **** 
 996:.\Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 997:.\Generated_Source\PSoC5/ADC.c **** }
 998:.\Generated_Source\PSoC5/ADC.c **** 
 999:.\Generated_Source\PSoC5/ADC.c **** 
1000:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1001:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 19


1002:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1003:.\Generated_Source\PSoC5/ADC.c **** *
1004:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1005:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:.\Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:.\Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1008:.\Generated_Source\PSoC5/ADC.c **** *
1009:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1010:.\Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:.\Generated_Source\PSoC5/ADC.c **** *
1012:.\Generated_Source\PSoC5/ADC.c **** * Return:
1013:.\Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1014:.\Generated_Source\PSoC5/ADC.c **** *
1015:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1016:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1017:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1018:.\Generated_Source\PSoC5/ADC.c **** *   to Volts.
1019:.\Generated_Source\PSoC5/ADC.c **** *
1020:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1021:.\Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1022:.\Generated_Source\PSoC5/ADC.c **** {
1023:.\Generated_Source\PSoC5/ADC.c **** 
1024:.\Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1025:.\Generated_Source\PSoC5/ADC.c **** 
1026:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1028:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1029:.\Generated_Source\PSoC5/ADC.c ****         {
1030:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1031:.\Generated_Source\PSoC5/ADC.c ****         }
1032:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1033:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1034:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1035:.\Generated_Source\PSoC5/ADC.c ****         {
1036:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1037:.\Generated_Source\PSoC5/ADC.c ****         }
1038:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1039:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1040:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1041:.\Generated_Source\PSoC5/ADC.c ****         {
1042:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1043:.\Generated_Source\PSoC5/ADC.c ****         }
1044:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1045:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1046:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1047:.\Generated_Source\PSoC5/ADC.c ****         {
1048:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1049:.\Generated_Source\PSoC5/ADC.c ****         }
1050:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1051:.\Generated_Source\PSoC5/ADC.c **** 
1052:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1053:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
1054:.\Generated_Source\PSoC5/ADC.c **** 
1055:.\Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
1056:.\Generated_Source\PSoC5/ADC.c **** 
1057:.\Generated_Source\PSoC5/ADC.c ****     return( Volts );
1058:.\Generated_Source\PSoC5/ADC.c **** }
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 20


1059:.\Generated_Source\PSoC5/ADC.c **** 
1060:.\Generated_Source\PSoC5/ADC.c **** 
1061:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1063:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1064:.\Generated_Source\PSoC5/ADC.c **** *
1065:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1066:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:.\Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:.\Generated_Source\PSoC5/ADC.c **** *
1069:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1070:.\Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:.\Generated_Source\PSoC5/ADC.c **** *
1072:.\Generated_Source\PSoC5/ADC.c **** * Return:
1073:.\Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1074:.\Generated_Source\PSoC5/ADC.c **** *
1075:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1076:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1078:.\Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1079:.\Generated_Source\PSoC5/ADC.c **** *
1080:.\Generated_Source\PSoC5/ADC.c **** * Theory:
1081:.\Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:.\Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:.\Generated_Source\PSoC5/ADC.c **** *
1084:.\Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1085:.\Generated_Source\PSoC5/ADC.c **** *
1086:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1087:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1088:.\Generated_Source\PSoC5/ADC.c **** {
1089:.\Generated_Source\PSoC5/ADC.c **** 
1090:.\Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1091:.\Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1092:.\Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1093:.\Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1094:.\Generated_Source\PSoC5/ADC.c **** 
1095:.\Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1096:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:.\Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
1098:.\Generated_Source\PSoC5/ADC.c ****     {
1099:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
1100:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1101:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1102:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1103:.\Generated_Source\PSoC5/ADC.c ****     }
1104:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
1105:.\Generated_Source\PSoC5/ADC.c ****     {
1106:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
1107:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1108:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1109:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1110:.\Generated_Source\PSoC5/ADC.c ****     }
1111:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
1112:.\Generated_Source\PSoC5/ADC.c ****     {
1113:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
1114:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1115:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 21


1116:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1117:.\Generated_Source\PSoC5/ADC.c ****     }
1118:.\Generated_Source\PSoC5/ADC.c ****     else
1119:.\Generated_Source\PSoC5/ADC.c ****     {
1120:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
1121:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1122:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1123:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1124:.\Generated_Source\PSoC5/ADC.c ****     }
1125:.\Generated_Source\PSoC5/ADC.c **** 
1126:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
1127:.\Generated_Source\PSoC5/ADC.c ****     {
1128:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1129:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1130:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1131:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1132:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1133:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1134:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1135:.\Generated_Source\PSoC5/ADC.c ****                 break;
1136:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1137:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1138:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1139:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1140:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1141:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1142:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1143:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1144:.\Generated_Source\PSoC5/ADC.c ****                 break;
1145:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1146:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1147:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1148:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1149:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1150:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1151:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1152:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1153:.\Generated_Source\PSoC5/ADC.c ****                 break;
1154:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1155:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1156:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1157:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1158:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1159:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1160:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1161:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1162:.\Generated_Source\PSoC5/ADC.c ****                 break;
1163:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1164:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1165:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1166:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1167:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1168:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1169:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
1170:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
1171:.\Generated_Source\PSoC5/ADC.c ****                 break;
1172:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 22


1173:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1174:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1175:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1176:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1177:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1178:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1179:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1180:.\Generated_Source\PSoC5/ADC.c ****                 break;
1181:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1182:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1183:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1184:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1185:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1186:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1187:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1188:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1189:.\Generated_Source\PSoC5/ADC.c ****                 break;
1190:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1191:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1192:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1193:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1194:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1195:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1196:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1197:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1198:.\Generated_Source\PSoC5/ADC.c ****                 break;
1199:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1200:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1201:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1202:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1203:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1204:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1205:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1206:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1207:.\Generated_Source\PSoC5/ADC.c ****                 break;
1208:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1209:.\Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1210:.\Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:.\Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
1212:.\Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
1213:.\Generated_Source\PSoC5/ADC.c ****             break;
1214:.\Generated_Source\PSoC5/ADC.c ****     }
1215:.\Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
1216:.\Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
1217:.\Generated_Source\PSoC5/ADC.c **** 
1218:.\Generated_Source\PSoC5/ADC.c ****     return( uVolts );
1219:.\Generated_Source\PSoC5/ADC.c **** }
1220:.\Generated_Source\PSoC5/ADC.c **** 
1221:.\Generated_Source\PSoC5/ADC.c **** 
1222:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1224:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1225:.\Generated_Source\PSoC5/ADC.c **** *
1226:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1227:.\Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1228:.\Generated_Source\PSoC5/ADC.c **** *
1229:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 23


1230:.\Generated_Source\PSoC5/ADC.c **** *   void
1231:.\Generated_Source\PSoC5/ADC.c **** *
1232:.\Generated_Source\PSoC5/ADC.c **** * Return:
1233:.\Generated_Source\PSoC5/ADC.c **** *  None
1234:.\Generated_Source\PSoC5/ADC.c **** *
1235:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1236:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:.\Generated_Source\PSoC5/ADC.c **** *
1238:.\Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1239:.\Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1240:.\Generated_Source\PSoC5/ADC.c **** *
1241:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1242:.\Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1243:.\Generated_Source\PSoC5/ADC.c **** {
1244:.\Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
1245:.\Generated_Source\PSoC5/ADC.c **** 
1246:.\Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
1247:.\Generated_Source\PSoC5/ADC.c ****     {
1248:.\Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1249:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
1250:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
1251:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
1252:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
1253:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
1254:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
1255:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
1256:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
1257:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
1258:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
1259:.\Generated_Source\PSoC5/ADC.c **** 
1260:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
1261:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
1262:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
1263:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
1264:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
1265:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
1266:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
1267:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
1268:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
1269:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
1270:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
1271:.\Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:.\Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
1273:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
1274:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
1275:.\Generated_Source\PSoC5/ADC.c **** 
1276:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
1277:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
1278:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
1279:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
1280:.\Generated_Source\PSoC5/ADC.c **** 
1281:.\Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:.\Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1283:.\Generated_Source\PSoC5/ADC.c ****         */
1284:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1285:.\Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1286:.\Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 24


1287:.\Generated_Source\PSoC5/ADC.c ****             #else
1288:.\Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
1289:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1290:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1291:.\Generated_Source\PSoC5/ADC.c **** 
1292:.\Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:.\Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1294:.\Generated_Source\PSoC5/ADC.c ****         */
1295:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1296:.\Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1297:.\Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1298:.\Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:.\Generated_Source\PSoC5/ADC.c **** 
1300:.\Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
1301:.\Generated_Source\PSoC5/ADC.c **** 
1302:.\Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
1303:.\Generated_Source\PSoC5/ADC.c **** 
1304:.\Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1305:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1306:.\Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
1307:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1308:.\Generated_Source\PSoC5/ADC.c **** 
1309:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1310:.\Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1311:.\Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
1312:.\Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1313:.\Generated_Source\PSoC5/ADC.c ****     }
1314:.\Generated_Source\PSoC5/ADC.c **** 
1315:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1316:.\Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
1317:.\Generated_Source\PSoC5/ADC.c ****         {
1318:.\Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1319:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
1320:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
1321:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
1322:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
1323:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
1324:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
1325:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
1326:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
1327:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
1328:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
1329:.\Generated_Source\PSoC5/ADC.c **** 
1330:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
1331:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
1332:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
1333:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
1334:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
1335:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
1336:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
1337:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
1338:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
1339:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
1340:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
1341:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
1343:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 25


1344:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
1345:.\Generated_Source\PSoC5/ADC.c **** 
1346:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
1347:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
1348:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
1349:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
1350:.\Generated_Source\PSoC5/ADC.c **** 
1351:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1353:.\Generated_Source\PSoC5/ADC.c ****             */
1354:.\Generated_Source\PSoC5/ADC.c **** 
1355:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1356:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1357:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1358:.\Generated_Source\PSoC5/ADC.c ****                 #else
1359:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1360:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1361:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1362:.\Generated_Source\PSoC5/ADC.c **** 
1363:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:.\Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1365:.\Generated_Source\PSoC5/ADC.c ****             */
1366:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1367:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1368:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1369:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:.\Generated_Source\PSoC5/ADC.c **** 
1371:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
1372:.\Generated_Source\PSoC5/ADC.c **** 
1373:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
1374:.\Generated_Source\PSoC5/ADC.c **** 
1375:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1376:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1377:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1378:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1379:.\Generated_Source\PSoC5/ADC.c **** 
1380:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1381:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1382:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
1383:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1384:.\Generated_Source\PSoC5/ADC.c ****         }
1385:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:.\Generated_Source\PSoC5/ADC.c **** 
1387:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1388:.\Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
1389:.\Generated_Source\PSoC5/ADC.c ****         {
1390:.\Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1391:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
1392:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
1393:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
1394:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
1395:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
1396:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
1397:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
1398:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
1399:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
1400:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 26


1401:.\Generated_Source\PSoC5/ADC.c **** 
1402:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
1403:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
1404:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
1405:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
1406:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
1407:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
1408:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
1409:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
1410:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
1411:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
1412:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
1413:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
1415:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
1416:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
1417:.\Generated_Source\PSoC5/ADC.c **** 
1418:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
1419:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
1420:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
1421:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
1422:.\Generated_Source\PSoC5/ADC.c **** 
1423:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1425:.\Generated_Source\PSoC5/ADC.c ****             */
1426:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1427:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1428:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1429:.\Generated_Source\PSoC5/ADC.c ****                 #else
1430:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1431:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1432:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1433:.\Generated_Source\PSoC5/ADC.c **** 
1434:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:.\Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1436:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1437:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1438:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1439:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:.\Generated_Source\PSoC5/ADC.c **** 
1441:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
1442:.\Generated_Source\PSoC5/ADC.c **** 
1443:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
1444:.\Generated_Source\PSoC5/ADC.c **** 
1445:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1446:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1447:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1448:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1449:.\Generated_Source\PSoC5/ADC.c **** 
1450:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1451:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1452:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
1453:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1454:.\Generated_Source\PSoC5/ADC.c ****         }
1455:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:.\Generated_Source\PSoC5/ADC.c **** 
1457:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 27


1458:.\Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
1459:.\Generated_Source\PSoC5/ADC.c ****         {
1460:.\Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1461:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
1462:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
1463:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
1464:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
1465:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
1466:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
1467:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
1468:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
1469:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
1470:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
1471:.\Generated_Source\PSoC5/ADC.c **** 
1472:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
1473:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
1474:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
1475:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
1476:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
1477:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
1478:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
1479:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
1480:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
1481:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
1482:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
1483:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
1485:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
1486:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
1487:.\Generated_Source\PSoC5/ADC.c **** 
1488:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
1489:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
1490:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
1491:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
1492:.\Generated_Source\PSoC5/ADC.c **** 
1493:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1495:.\Generated_Source\PSoC5/ADC.c ****             */
1496:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1497:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1498:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1499:.\Generated_Source\PSoC5/ADC.c ****                 #else
1500:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1501:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1502:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1503:.\Generated_Source\PSoC5/ADC.c **** 
1504:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:.\Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1506:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1507:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1508:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1509:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:.\Generated_Source\PSoC5/ADC.c **** 
1511:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
1512:.\Generated_Source\PSoC5/ADC.c **** 
1513:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
1514:.\Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 28


1515:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1516:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1517:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1518:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1519:.\Generated_Source\PSoC5/ADC.c **** 
1520:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1521:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1522:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
1523:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1524:.\Generated_Source\PSoC5/ADC.c ****         }
1525:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:.\Generated_Source\PSoC5/ADC.c **** }
1527:.\Generated_Source\PSoC5/ADC.c **** 
1528:.\Generated_Source\PSoC5/ADC.c **** 
1529:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1530:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1531:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1532:.\Generated_Source\PSoC5/ADC.c **** *
1533:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1534:.\Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:.\Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:.\Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:.\Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1538:.\Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:.\Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1540:.\Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1541:.\Generated_Source\PSoC5/ADC.c **** *
1542:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1543:.\Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1544:.\Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1545:.\Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:.\Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1547:.\Generated_Source\PSoC5/ADC.c **** *
1548:.\Generated_Source\PSoC5/ADC.c **** * Return:
1549:.\Generated_Source\PSoC5/ADC.c **** *  None
1550:.\Generated_Source\PSoC5/ADC.c **** *
1551:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1552:.\Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:.\Generated_Source\PSoC5/ADC.c ****                                               
1554:.\Generated_Source\PSoC5/ADC.c **** {
1555:.\Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1556:.\Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
1557:.\Generated_Source\PSoC5/ADC.c ****     {
1558:.\Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:.\Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
1560:.\Generated_Source\PSoC5/ADC.c **** 		*/
1561:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
1562:.\Generated_Source\PSoC5/ADC.c ****         {
1563:.\Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
1564:.\Generated_Source\PSoC5/ADC.c ****         }
1565:.\Generated_Source\PSoC5/ADC.c **** 
1566:.\Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1567:.\Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
1568:.\Generated_Source\PSoC5/ADC.c **** 
1569:.\Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1570:.\Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
1571:.\Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 29


1572:.\Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:.\Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
1574:.\Generated_Source\PSoC5/ADC.c **** 
1575:.\Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1576:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
1577:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
1578:.\Generated_Source\PSoC5/ADC.c **** 
1579:.\Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
1580:.\Generated_Source\PSoC5/ADC.c ****         {
1581:.\Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1582:.\Generated_Source\PSoC5/ADC.c ****             ADC_Start();
1583:.\Generated_Source\PSoC5/ADC.c **** 
1584:.\Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1585:.\Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
1586:.\Generated_Source\PSoC5/ADC.c ****         }
1587:.\Generated_Source\PSoC5/ADC.c ****     }
1588:.\Generated_Source\PSoC5/ADC.c ****     else
1589:.\Generated_Source\PSoC5/ADC.c ****     {
1590:.\Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:.\Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
1592:.\Generated_Source\PSoC5/ADC.c ****     }
1593:.\Generated_Source\PSoC5/ADC.c **** }
1594:.\Generated_Source\PSoC5/ADC.c **** 
1595:.\Generated_Source\PSoC5/ADC.c **** 
1596:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1597:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1598:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1599:.\Generated_Source\PSoC5/ADC.c **** *
1600:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1601:.\Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:.\Generated_Source\PSoC5/ADC.c **** *
1603:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1604:.\Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:.\Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:.\Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1607:.\Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:.\Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1609:.\Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:.\Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1611:.\Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1612:.\Generated_Source\PSoC5/ADC.c **** *
1613:.\Generated_Source\PSoC5/ADC.c **** * Return:
1614:.\Generated_Source\PSoC5/ADC.c **** *  None
1615:.\Generated_Source\PSoC5/ADC.c **** *
1616:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1617:.\Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1618:.\Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1619:.\Generated_Source\PSoC5/ADC.c **** {
  26              		.loc 1 1619 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 30


  35 0002 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
1620:.\Generated_Source\PSoC5/ADC.c ****     int8 flash;
1621:.\Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1622:.\Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1623:.\Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1624:.\Generated_Source\PSoC5/ADC.c **** 
1625:.\Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
  36              		.loc 1 1625 0
  37 0006 012C     		cmp	r4, #1
  38 0008 4AD1     		bne	.L2
1626:.\Generated_Source\PSoC5/ADC.c ****     {
1627:.\Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
  39              		.loc 1 1627 0
  40 000a 0138     		subs	r0, r0, #1
  41              	.LVL1:
  42 000c 0928     		cmp	r0, #9
  43 000e 26D8     		bhi	.L16
  44 0010 DFE800F0 		tbb	[pc, r0]
  45              	.L5:
  46 0014 05       		.byte	(.L4-.L5)/2
  47 0015 25       		.byte	(.L16-.L5)/2
  48 0016 25       		.byte	(.L16-.L5)/2
  49 0017 05       		.byte	(.L4-.L5)/2
  50 0018 25       		.byte	(.L16-.L5)/2
  51 0019 25       		.byte	(.L16-.L5)/2
  52 001a 0D       		.byte	(.L6-.L5)/2
  53 001b 15       		.byte	(.L7-.L5)/2
  54 001c 25       		.byte	(.L16-.L5)/2
  55 001d 1D       		.byte	(.L8-.L5)/2
  56              		.p2align 1
  57              	.L4:
1628:.\Generated_Source\PSoC5/ADC.c ****         {
1629:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1630:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1631:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1632:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  58              		.loc 1 1632 0
  59 001e 0F2B     		cmp	r3, #15
  60 0020 02D9     		bls	.L9
1633:.\Generated_Source\PSoC5/ADC.c ****                 {
1634:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
  61              		.loc 1 1634 0
  62 0022 2148     		ldr	r0, .L18
  63 0024 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  64              	.LVL2:
  65 0026 1BE0     		b	.L3
  66              	.LVL3:
  67              	.L9:
1635:.\Generated_Source\PSoC5/ADC.c ****                 }
1636:.\Generated_Source\PSoC5/ADC.c ****                 else
1637:.\Generated_Source\PSoC5/ADC.c ****                 {
1638:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
  68              		.loc 1 1638 0
  69 0028 2048     		ldr	r0, .L18+4
  70 002a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  71              	.LVL4:
  72 002c 18E0     		b	.L3
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 31


  73              	.LVL5:
  74              	.L6:
1639:.\Generated_Source\PSoC5/ADC.c ****                 }
1640:.\Generated_Source\PSoC5/ADC.c ****                 break;
1641:.\Generated_Source\PSoC5/ADC.c **** 
1642:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1643:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1644:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  75              		.loc 1 1644 0
  76 002e 0F2B     		cmp	r3, #15
  77 0030 02D9     		bls	.L10
1645:.\Generated_Source\PSoC5/ADC.c ****                 {
1646:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
  78              		.loc 1 1646 0
  79 0032 1F48     		ldr	r0, .L18+8
  80 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  81              	.LVL6:
  82 0036 13E0     		b	.L3
  83              	.LVL7:
  84              	.L10:
1647:.\Generated_Source\PSoC5/ADC.c ****                 }
1648:.\Generated_Source\PSoC5/ADC.c ****                 else
1649:.\Generated_Source\PSoC5/ADC.c ****                 {
1650:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
  85              		.loc 1 1650 0
  86 0038 1E48     		ldr	r0, .L18+12
  87 003a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  88              	.LVL8:
  89 003c 10E0     		b	.L3
  90              	.LVL9:
  91              	.L7:
1651:.\Generated_Source\PSoC5/ADC.c ****                 }
1652:.\Generated_Source\PSoC5/ADC.c ****                 break;
1653:.\Generated_Source\PSoC5/ADC.c **** 
1654:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1655:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1656:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  92              		.loc 1 1656 0
  93 003e 0F2B     		cmp	r3, #15
  94 0040 02D9     		bls	.L11
1657:.\Generated_Source\PSoC5/ADC.c ****                 {
1658:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
  95              		.loc 1 1658 0
  96 0042 1D48     		ldr	r0, .L18+16
  97 0044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  98              	.LVL10:
  99 0046 0BE0     		b	.L3
 100              	.LVL11:
 101              	.L11:
1659:.\Generated_Source\PSoC5/ADC.c ****                 }
1660:.\Generated_Source\PSoC5/ADC.c ****                 else
1661:.\Generated_Source\PSoC5/ADC.c ****                 {
1662:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
 102              		.loc 1 1662 0
 103 0048 1C48     		ldr	r0, .L18+20
 104 004a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 105              	.LVL12:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 32


 106 004c 08E0     		b	.L3
 107              	.LVL13:
 108              	.L8:
1663:.\Generated_Source\PSoC5/ADC.c ****                 }
1664:.\Generated_Source\PSoC5/ADC.c ****                 break;
1665:.\Generated_Source\PSoC5/ADC.c **** 
1666:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1667:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1668:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 109              		.loc 1 1668 0
 110 004e 0F2B     		cmp	r3, #15
 111 0050 02D9     		bls	.L12
1669:.\Generated_Source\PSoC5/ADC.c ****                 {
1670:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 112              		.loc 1 1670 0
 113 0052 1B48     		ldr	r0, .L18+24
 114 0054 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 115              	.LVL14:
 116 0056 03E0     		b	.L3
 117              	.LVL15:
 118              	.L12:
1671:.\Generated_Source\PSoC5/ADC.c ****                 }
1672:.\Generated_Source\PSoC5/ADC.c ****                 else
1673:.\Generated_Source\PSoC5/ADC.c ****                 {
1674:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
 119              		.loc 1 1674 0
 120 0058 1A48     		ldr	r0, .L18+28
 121 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 122              	.LVL16:
 123 005c 00E0     		b	.L3
 124              	.LVL17:
 125              	.L16:
1675:.\Generated_Source\PSoC5/ADC.c ****                 }
1676:.\Generated_Source\PSoC5/ADC.c ****                 break;
1677:.\Generated_Source\PSoC5/ADC.c **** 
1678:.\Generated_Source\PSoC5/ADC.c ****             default:
1679:.\Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 126              		.loc 1 1679 0
 127 005e 0020     		movs	r0, #0
 128              	.L3:
 129              	.LVL18:
1680:.\Generated_Source\PSoC5/ADC.c ****                 break;
1681:.\Generated_Source\PSoC5/ADC.c ****         }
1682:.\Generated_Source\PSoC5/ADC.c **** 
1683:.\Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1684:.\Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 130              		.loc 1 1684 0
 131 0060 40B2     		sxtb	r0, r0
 132 0062 01EB4011 		add	r1, r1, r0, lsl #5
 133              	.LVL19:
1685:.\Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 134              		.loc 1 1685 0
 135 0066 01FB02F1 		mul	r1, r1, r2
 136              	.LVL20:
1686:.\Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 137              		.loc 1 1686 0
 138 006a C90B     		lsrs	r1, r1, #15
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 33


 139              	.LVL21:
 140 006c 8AB2     		uxth	r2, r1
 141              	.LVL22:
1687:.\Generated_Source\PSoC5/ADC.c **** 
1688:.\Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 142              		.loc 1 1688 0
 143 006e 0D2B     		cmp	r3, #13
 144 0070 0BD8     		bhi	.L13
1689:.\Generated_Source\PSoC5/ADC.c ****         {
1690:.\Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 145              		.loc 1 1690 0
 146 0072 C3F10E02 		rsb	r2, r3, #14
 147              	.LVL23:
 148 0076 89B2     		uxth	r1, r1
 149 0078 1141     		asrs	r1, r1, r2
 150              	.LVL24:
 151 007a 8AB2     		uxth	r2, r1
 152              	.LVL25:
1691:.\Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 153              		.loc 1 1691 0
 154 007c 1249     		ldr	r1, .L18+32
 155 007e 01EB8401 		add	r1, r1, r4, lsl #2
 156 0082 0133     		adds	r3, r3, #1
 157              	.LVL26:
 158 0084 01F8023C 		strb	r3, [r1, #-2]
 159 0088 05E0     		b	.L14
 160              	.LVL27:
 161              	.L13:
1692:.\Generated_Source\PSoC5/ADC.c ****         }
1693:.\Generated_Source\PSoC5/ADC.c ****         else
1694:.\Generated_Source\PSoC5/ADC.c ****         {
1695:.\Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1696:.\Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 162              		.loc 1 1696 0
 163 008a 0F4B     		ldr	r3, .L18+32
 164              	.LVL28:
 165 008c 03EB8403 		add	r3, r3, r4, lsl #2
 166 0090 0F21     		movs	r1, #15
 167 0092 03F8021C 		strb	r1, [r3, #-2]
 168              	.L14:
1697:.\Generated_Source\PSoC5/ADC.c ****         }
1698:.\Generated_Source\PSoC5/ADC.c **** 
1699:.\Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1700:.\Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 169              		.loc 1 1700 0
 170 0096 013C     		subs	r4, r4, #1
 171 0098 0B4B     		ldr	r3, .L18+32
 172 009a 23F82420 		strh	r2, [r3, r4, lsl #2]	@ movhi
 173 009e 10BD     		pop	{r4, pc}
 174              	.LVL29:
 175              	.L2:
1701:.\Generated_Source\PSoC5/ADC.c ****     }
1702:.\Generated_Source\PSoC5/ADC.c ****     else
1703:.\Generated_Source\PSoC5/ADC.c ****     {
1704:.\Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:.\Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 176              		.loc 1 1705 0 discriminator 1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 34


 177 00a0 0020     		movs	r0, #0
 178              	.LVL30:
 179 00a2 FFF7FEFF 		bl	CyHalt
 180              	.LVL31:
 181 00a6 10BD     		pop	{r4, pc}
 182              	.LVL32:
 183              	.L19:
 184              		.align	2
 185              	.L18:
 186 00a8 18010049 		.word	1224737048
 187 00ac 1C010049 		.word	1224737052
 188 00b0 19010049 		.word	1224737049
 189 00b4 1D010049 		.word	1224737053
 190 00b8 1A010049 		.word	1224737050
 191 00bc 1E010049 		.word	1224737054
 192 00c0 1B010049 		.word	1224737051
 193 00c4 1F010049 		.word	1224737055
 194 00c8 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE21:
 197              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 198              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 199              		.align	2
 200              		.thumb
 201              		.thumb_func
 202              		.type	ADC_SetDSMRef0Reg, %function
 203              	ADC_SetDSMRef0Reg:
 204              	.LFB22:
1706:.\Generated_Source\PSoC5/ADC.c ****     }
1707:.\Generated_Source\PSoC5/ADC.c **** }
1708:.\Generated_Source\PSoC5/ADC.c **** 
1709:.\Generated_Source\PSoC5/ADC.c **** 
1710:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1711:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1712:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1713:.\Generated_Source\PSoC5/ADC.c **** *
1714:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1715:.\Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:.\Generated_Source\PSoC5/ADC.c **** *
1717:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1718:.\Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:.\Generated_Source\PSoC5/ADC.c **** *
1720:.\Generated_Source\PSoC5/ADC.c **** * Return:
1721:.\Generated_Source\PSoC5/ADC.c **** *  None
1722:.\Generated_Source\PSoC5/ADC.c **** *
1723:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1724:.\Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1725:.\Generated_Source\PSoC5/ADC.c **** {
 205              		.loc 1 1725 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL33:
 210 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 211              		.cfi_def_cfa_offset 24
 212              		.cfi_offset 3, -24
 213              		.cfi_offset 4, -20
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 35


 214              		.cfi_offset 5, -16
 215              		.cfi_offset 6, -12
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 0746     		mov	r7, r0
1726:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1727:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 1727 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL34:
 222 0008 0646     		mov	r6, r0
 223              	.LVL35:
1728:.\Generated_Source\PSoC5/ADC.c **** 
1729:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 224              		.loc 1 1730 0
 225 000a 0D4D     		ldr	r5, .L22
 226 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 227 000e 43F00303 		orr	r3, r3, #3
 228 0012 2B70     		strb	r3, [r5]
1731:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 229              		.loc 1 1731 0
 230 0014 0B4C     		ldr	r4, .L22+4
 231 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 232 0018 43F00303 		orr	r3, r3, #3
 233 001c 2370     		strb	r3, [r4]
1732:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 234              		.loc 1 1732 0
 235 001e 0A4B     		ldr	r3, .L22+8
 236 0020 1F70     		strb	r7, [r3]
1733:.\Generated_Source\PSoC5/ADC.c **** 
1734:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1735:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 237              		.loc 1 1735 0
 238 0022 0320     		movs	r0, #3
 239 0024 FFF7FEFF 		bl	CyDelayUs
 240              	.LVL36:
1736:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1737:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 241              		.loc 1 1737 0
 242 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 243 002a 03F0FC03 		and	r3, r3, #252
 244 002e 2B70     		strb	r3, [r5]
1738:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 245              		.loc 1 1738 0
 246 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 247 0032 03F0FC03 		and	r3, r3, #252
 248 0036 2370     		strb	r3, [r4]
1739:.\Generated_Source\PSoC5/ADC.c **** 
1740:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 249              		.loc 1 1740 0
 250 0038 3046     		mov	r0, r6
 251 003a FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL37:
 253 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 254              	.LVL38:
 255              	.L23:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 36


 256              		.align	2
 257              	.L22:
 258 0040 F8460040 		.word	1073759992
 259 0044 F9460040 		.word	1073759993
 260 0048 92580040 		.word	1073764498
 261              		.cfi_endproc
 262              	.LFE22:
 263              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 264              		.section	.text.ADC_InitConfig,"ax",%progbits
 265              		.align	2
 266              		.thumb
 267              		.thumb_func
 268              		.type	ADC_InitConfig, %function
 269              	ADC_InitConfig:
 270              	.LFB19:
1243:.\Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 271              		.loc 1 1243 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL39:
 276 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 277              		.cfi_def_cfa_offset 24
 278              		.cfi_offset 3, -24
 279              		.cfi_offset 4, -20
 280              		.cfi_offset 5, -16
 281              		.cfi_offset 6, -12
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
1244:.\Generated_Source\PSoC5/ADC.c **** 
 284              		.loc 1 1244 0
 285 0002 0022     		movs	r2, #0
 286 0004 314B     		ldr	r3, .L27
 287 0006 1A71     		strb	r2, [r3, #4]
1246:.\Generated_Source\PSoC5/ADC.c ****     {
 288              		.loc 1 1246 0
 289 0008 0128     		cmp	r0, #1
 290 000a 5DD1     		bne	.L24
1249:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 291              		.loc 1 1249 0
 292 000c 3822     		movs	r2, #56
 293 000e 304B     		ldr	r3, .L27+4
 294 0010 1A70     		strb	r2, [r3]
1250:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 295              		.loc 1 1250 0
 296 0012 0422     		movs	r2, #4
 297 0014 0233     		adds	r3, r3, #2
 298 0016 1A70     		strb	r2, [r3]
1251:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 299              		.loc 1 1251 0
 300 0018 0622     		movs	r2, #6
 301 001a 0133     		adds	r3, r3, #1
 302 001c 1A70     		strb	r2, [r3]
1252:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 303              		.loc 1 1252 0
 304 001e 0024     		movs	r4, #0
 305 0020 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 37


 306 0022 1C70     		strb	r4, [r3]
1253:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 307              		.loc 1 1253 0
 308 0024 0133     		adds	r3, r3, #1
 309 0026 1C70     		strb	r4, [r3]
1254:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 310              		.loc 1 1254 0
 311 0028 3F22     		movs	r2, #63
 312 002a 0133     		adds	r3, r3, #1
 313 002c 1A70     		strb	r2, [r3]
1255:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 314              		.loc 1 1255 0
 315 002e 0233     		adds	r3, r3, #2
 316 0030 1C70     		strb	r4, [r3]
1256:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 317              		.loc 1 1256 0
 318 0032 0133     		adds	r3, r3, #1
 319 0034 1C70     		strb	r4, [r3]
1257:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 320              		.loc 1 1257 0
 321 0036 0133     		adds	r3, r3, #1
 322 0038 1C70     		strb	r4, [r3]
1258:.\Generated_Source\PSoC5/ADC.c **** 
 323              		.loc 1 1258 0
 324 003a 0125     		movs	r5, #1
 325 003c 0A33     		adds	r3, r3, #10
 326 003e 1D70     		strb	r5, [r3]
1260:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 327              		.loc 1 1260 0
 328 0040 5022     		movs	r2, #80
 329 0042 03F52763 		add	r3, r3, #2672
 330 0046 1A70     		strb	r2, [r3]
1261:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 331              		.loc 1 1261 0
 332 0048 0726     		movs	r6, #7
 333 004a 0133     		adds	r3, r3, #1
 334 004c 1E70     		strb	r6, [r3]
1262:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 335              		.loc 1 1262 0
 336 004e 2922     		movs	r2, #41
 337 0050 0133     		adds	r3, r3, #1
 338 0052 1A70     		strb	r2, [r3]
1263:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 339              		.loc 1 1263 0
 340 0054 0133     		adds	r3, r3, #1
 341 0056 1C70     		strb	r4, [r3]
1264:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 342              		.loc 1 1264 0
 343 0058 5522     		movs	r2, #85
 344 005a 0333     		adds	r3, r3, #3
 345 005c 1A70     		strb	r2, [r3]
1265:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 346              		.loc 1 1265 0
 347 005e 5A22     		movs	r2, #90
 348 0060 0133     		adds	r3, r3, #1
 349 0062 1A70     		strb	r2, [r3]
1266:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 38


 350              		.loc 1 1266 0
 351 0064 0133     		adds	r3, r3, #1
 352 0066 1C70     		strb	r4, [r3]
1267:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 353              		.loc 1 1267 0
 354 0068 0227     		movs	r7, #2
 355 006a 0233     		adds	r3, r3, #2
 356 006c 1F70     		strb	r7, [r3]
1268:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 357              		.loc 1 1268 0
 358 006e 1222     		movs	r2, #18
 359 0070 0133     		adds	r3, r3, #1
 360 0072 1A70     		strb	r2, [r3]
1269:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 361              		.loc 1 1269 0
 362 0074 2822     		movs	r2, #40
 363 0076 0133     		adds	r3, r3, #1
 364 0078 1A70     		strb	r2, [r3]
1270:.\Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
 365              		.loc 1 1270 0
 366 007a EB22     		movs	r2, #235
 367 007c 0133     		adds	r3, r3, #1
 368 007e 1A70     		strb	r2, [r3]
1272:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 369              		.loc 1 1272 0
 370 0080 5220     		movs	r0, #82
 371              	.LVL40:
 372 0082 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
 373              	.LVL41:
1273:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 374              		.loc 1 1273 0
 375 0086 5822     		movs	r2, #88
 376 0088 124B     		ldr	r3, .L27+8
 377 008a 1A70     		strb	r2, [r3]
1274:.\Generated_Source\PSoC5/ADC.c **** 
 378              		.loc 1 1274 0
 379 008c 0133     		adds	r3, r3, #1
 380 008e 1C70     		strb	r4, [r3]
1276:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 381              		.loc 1 1276 0
 382 0090 0522     		movs	r2, #5
 383 0092 0533     		adds	r3, r3, #5
 384 0094 1A70     		strb	r2, [r3]
1277:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 385              		.loc 1 1277 0
 386 0096 0133     		adds	r3, r3, #1
 387 0098 1F70     		strb	r7, [r3]
1278:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 388              		.loc 1 1278 0
 389 009a 0133     		adds	r3, r3, #1
 390 009c 1C70     		strb	r4, [r3]
1279:.\Generated_Source\PSoC5/ADC.c **** 
 391              		.loc 1 1279 0
 392 009e 0133     		adds	r3, r3, #1
 393 00a0 1C70     		strb	r4, [r3]
1288:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
 394              		.loc 1 1288 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 39


 395 00a2 2046     		mov	r0, r4
 396 00a4 FFF7FEFF 		bl	ADC_AMux_Select
 397              	.LVL42:
1300:.\Generated_Source\PSoC5/ADC.c **** 
 398              		.loc 1 1300 0
 399 00a8 42F22222 		movw	r2, #8738
 400 00ac 0A4B     		ldr	r3, .L27+12
 401 00ae 1A60     		str	r2, [r3]
1302:.\Generated_Source\PSoC5/ADC.c **** 
 402              		.loc 1 1302 0
 403 00b0 2846     		mov	r0, r5
 404 00b2 2946     		mov	r1, r5
 405 00b4 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
 406              	.LVL43:
1306:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
 407              		.loc 1 1306 0
 408 00b8 3046     		mov	r0, r6
 409 00ba 2946     		mov	r1, r5
 410 00bc FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
 411              	.LVL44:
1311:.\Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
 412              		.loc 1 1311 0
 413 00c0 1D20     		movs	r0, #29
 414 00c2 0649     		ldr	r1, .L27+16
 415 00c4 FFF7FEFF 		bl	CyIntSetVector
 416              	.LVL45:
 417              	.L24:
 418 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 419              	.L28:
 420 00ca 00BF     		.align	2
 421              	.L27:
 422 00cc 00000000 		.word	.LANCHOR0
 423 00d0 004E0040 		.word	1073761792
 424 00d4 94580040 		.word	1073764500
 425 00d8 00000000 		.word	ADC_CountsPerVolt
 426 00dc 00000000 		.word	ADC_ISR1
 427              		.cfi_endproc
 428              	.LFE19:
 429              		.size	ADC_InitConfig, .-ADC_InitConfig
 430              		.section	.text.ADC_Init,"ax",%progbits
 431              		.align	2
 432              		.global	ADC_Init
 433              		.thumb
 434              		.thumb_func
 435              		.type	ADC_Init, %function
 436              	ADC_Init:
 437              	.LFB0:
  92:.\Generated_Source\PSoC5/ADC.c **** 
 438              		.loc 1 92 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 443              		.cfi_def_cfa_offset 20
 444              		.cfi_offset 4, -20
 445              		.cfi_offset 5, -16
 446              		.cfi_offset 6, -12
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 40


 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              		.cfi_def_cfa_offset 32
  94:.\Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
 451              		.loc 1 94 0
 452 0004 284D     		ldr	r5, .L31
 453 0006 0127     		movs	r7, #1
 454 0008 2F70     		strb	r7, [r5]
  95:.\Generated_Source\PSoC5/ADC.c **** 
 455              		.loc 1 95 0
 456 000a 284E     		ldr	r6, .L31+4
 457 000c 0024     		movs	r4, #0
 458 000e 7471     		strb	r4, [r6, #5]
  97:.\Generated_Source\PSoC5/ADC.c **** 
 459              		.loc 1 97 0
 460 0010 1020     		movs	r0, #16
 461 0012 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
 462              	.LVL46:
 101:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 463              		.loc 1 101 0
 464 0016 1020     		movs	r0, #16
 465 0018 FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 466              	.LVL47:
 106:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 467              		.loc 1 106 0
 468 001c 1D20     		movs	r0, #29
 469 001e 0721     		movs	r1, #7
 470 0020 FFF7FEFF 		bl	CyIntSetPriority
 471              	.LVL48:
 110:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 472              		.loc 1 110 0
 473 0024 0422     		movs	r2, #4
 474 0026 224B     		ldr	r3, .L31+8
 475 0028 1A70     		strb	r2, [r3]
 111:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 476              		.loc 1 111 0
 477 002a 0133     		adds	r3, r3, #1
 478 002c 1C70     		strb	r4, [r3]
 112:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 479              		.loc 1 112 0
 480 002e 0733     		adds	r3, r3, #7
 481 0030 1C70     		strb	r4, [r3]
 113:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 482              		.loc 1 113 0
 483 0032 204A     		ldr	r2, .L31+12
 484 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 485 0036 43F01803 		orr	r3, r3, #24
 486 003a 1370     		strb	r3, [r2]
 114:.\Generated_Source\PSoC5/ADC.c **** 
 487              		.loc 1 114 0
 488 003c 1E4B     		ldr	r3, .L31+16
 489 003e 1C70     		strb	r4, [r3]
 116:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 490              		.loc 1 116 0
 491 0040 03F2F523 		addw	r3, r3, #757
 492 0044 1C70     		strb	r4, [r3]
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 41


 117:.\Generated_Source\PSoC5/ADC.c **** 
 493              		.loc 1 117 0
 494 0046 0133     		adds	r3, r3, #1
 495 0048 1C70     		strb	r4, [r3]
 119:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 496              		.loc 1 119 0
 497 004a 0A22     		movs	r2, #10
 498 004c A3F20933 		subw	r3, r3, #777
 499 0050 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 500              		.loc 1 120 0
 501 0052 0133     		adds	r3, r3, #1
 502 0054 1C70     		strb	r4, [r3]
 124:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 503              		.loc 1 124 0
 504 0056 0233     		adds	r3, r3, #2
 505 0058 1C70     		strb	r4, [r3]
 126:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 506              		.loc 1 126 0
 507 005a 5B22     		movs	r2, #91
 508 005c 0533     		adds	r3, r3, #5
 509 005e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 510              		.loc 1 127 0
 511 0060 5E22     		movs	r2, #94
 512 0062 0133     		adds	r3, r3, #1
 513 0064 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC5/ADC.c **** 
 514              		.loc 1 128 0
 515 0066 0433     		adds	r3, r3, #4
 516 0068 1C70     		strb	r4, [r3]
 130:.\Generated_Source\PSoC5/ADC.c **** 
 517              		.loc 1 130 0
 518 006a 1422     		movs	r2, #20
 519 006c A3F68C23 		subw	r3, r3, #2700
 520 0070 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 521              		.loc 1 133 0
 522 0072 0097     		str	r7, [sp]
 523 0074 0320     		movs	r0, #3
 524 0076 47F60271 		movw	r1, #32514
 525 007a 4FF40042 		mov	r2, #32768
 526 007e 1023     		movs	r3, #16
 527 0080 FFF7FEFF 		bl	ADC_GainCompensation
 528              	.LVL49:
 161:.\Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 529              		.loc 1 161 0
 530 0084 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 531 0086 06EB8303 		add	r3, r6, r3, lsl #2
 532 008a 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
 533 008e 0B4B     		ldr	r3, .L31+20
 534 0090 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/ADC.c **** 
 535              		.loc 1 162 0
 536 0092 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 537 0094 013B     		subs	r3, r3, #1
 538 0096 36F82320 		ldrh	r2, [r6, r3, lsl #2]
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 42


 539 009a 094B     		ldr	r3, .L31+24
 540 009c 1A80     		strh	r2, [r3]	@ movhi
 165:.\Generated_Source\PSoC5/ADC.c **** }
 541              		.loc 1 165 0
 542 009e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 543 00a0 FFF7FEFF 		bl	ADC_InitConfig
 544              	.LVL50:
 166:.\Generated_Source\PSoC5/ADC.c **** 
 545              		.loc 1 166 0
 546 00a4 03B0     		add	sp, sp, #12
 547              		.cfi_def_cfa_offset 20
 548              		@ sp needed
 549 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 550              	.L32:
 551              		.align	2
 552              	.L31:
 553 00a8 00000000 		.word	.LANCHOR1
 554 00ac 00000000 		.word	.LANCHOR0
 555 00b0 96580040 		.word	1073764502
 556 00b4 075B0040 		.word	1073765127
 557 00b8 93580040 		.word	1073764499
 558 00bc 0E4E0040 		.word	1073761806
 559 00c0 0C4E0040 		.word	1073761804
 560              		.cfi_endproc
 561              	.LFE0:
 562              		.size	ADC_Init, .-ADC_Init
 563              		.section	.text.ADC_Enable,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_Enable
 566              		.thumb
 567              		.thumb_func
 568              		.type	ADC_Enable, %function
 569              	ADC_Enable:
 570              	.LFB1:
 185:.\Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 571              		.loc 1 185 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 70B5     		push	{r4, r5, r6, lr}
 576              		.cfi_def_cfa_offset 16
 577              		.cfi_offset 4, -16
 578              		.cfi_offset 5, -12
 579              		.cfi_offset 6, -8
 580              		.cfi_offset 14, -4
 188:.\Generated_Source\PSoC5/ADC.c **** 
 581              		.loc 1 188 0
 582 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 583              	.LVL51:
 584 0006 0646     		mov	r6, r0
 585              	.LVL52:
 191:.\Generated_Source\PSoC5/ADC.c ****     
 586              		.loc 1 191 0
 587 0008 2A4B     		ldr	r3, .L35
 588 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589              	.LVL53:
 194:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 43


 590              		.loc 1 194 0
 591 000c 2A4B     		ldr	r3, .L35+4
 592 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 593 0010 42F00102 		orr	r2, r2, #1
 594 0014 1A70     		strb	r2, [r3]
 195:.\Generated_Source\PSoC5/ADC.c **** 
 595              		.loc 1 195 0
 596 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 597 0018 42F01002 		orr	r2, r2, #16
 598 001c 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 599              		.loc 1 198 0
 600 001e 1033     		adds	r3, r3, #16
 601 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 602 0022 42F00102 		orr	r2, r2, #1
 603 0026 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/ADC.c **** 
 604              		.loc 1 199 0
 605 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 606 002a 42F01002 		orr	r2, r2, #16
 607 002e 1A70     		strb	r2, [r3]
 202:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 608              		.loc 1 202 0
 609 0030 224D     		ldr	r5, .L35+8
 610 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 611 0034 43F00203 		orr	r3, r3, #2
 612 0038 2B70     		strb	r3, [r5]
 203:.\Generated_Source\PSoC5/ADC.c **** 
 613              		.loc 1 203 0
 614 003a 214C     		ldr	r4, .L35+12
 615 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 616 003e 43F00203 		orr	r3, r3, #2
 617 0042 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC5/ADC.c **** 
 618              		.loc 1 205 0
 619 0044 1F4A     		ldr	r2, .L35+16
 620 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 621 0048 43F00303 		orr	r3, r3, #3
 622 004c 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/ADC.c **** 
 623              		.loc 1 271 0
 624 004e 0320     		movs	r0, #3
 625 0050 FFF7FEFF 		bl	CyDelayUs
 626              	.LVL54:
 274:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 627              		.loc 1 274 0
 628 0054 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 629 0056 03F0FD03 		and	r3, r3, #253
 630 005a 2B70     		strb	r3, [r5]
 275:.\Generated_Source\PSoC5/ADC.c **** 
 631              		.loc 1 275 0
 632 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 633 005e 03F0FD03 		and	r3, r3, #253
 634 0062 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC5/ADC.c **** 
 635              		.loc 1 278 0
 636 0064 184A     		ldr	r2, .L35+20
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 44


 637 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 638 0068 43F00603 		orr	r3, r3, #6
 639 006c 1370     		strb	r3, [r2]
 281:.\Generated_Source\PSoC5/ADC.c **** 
 640              		.loc 1 281 0
 641 006e 7A22     		movs	r2, #122
 642 0070 164B     		ldr	r3, .L35+24
 643 0072 1A70     		strb	r2, [r3]
 285:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 644              		.loc 1 285 0
 645 0074 164A     		ldr	r2, .L35+28
 646 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647 0078 43F00103 		orr	r3, r3, #1
 648 007c 1370     		strb	r3, [r2]
 286:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 649              		.loc 1 286 0
 650 007e 1032     		adds	r2, r2, #16
 651 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 652 0082 43F00103 		orr	r3, r3, #1
 653 0086 1370     		strb	r3, [r2]
 290:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 654              		.loc 1 290 0
 655 0088 0F3A     		subs	r2, r2, #15
 656 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 657 008c 43F00103 		orr	r3, r3, #1
 658 0090 1370     		strb	r3, [r2]
 291:.\Generated_Source\PSoC5/ADC.c **** 
 659              		.loc 1 291 0
 660 0092 1032     		adds	r2, r2, #16
 661 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 662 0096 43F00103 		orr	r3, r3, #1
 663 009a 1370     		strb	r3, [r2]
 295:.\Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 664              		.loc 1 295 0
 665 009c 4FF00053 		mov	r3, #536870912
 666 00a0 0C4A     		ldr	r2, .L35+32
 667 00a2 1360     		str	r3, [r2]
 297:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 668              		.loc 1 297 0
 669 00a4 A2F5C072 		sub	r2, r2, #384
 670 00a8 1360     		str	r3, [r2]
 300:.\Generated_Source\PSoC5/ADC.c **** 
 671              		.loc 1 300 0
 672 00aa 3046     		mov	r0, r6
 673 00ac FFF7FEFF 		bl	CyExitCriticalSection
 674              	.LVL55:
 675 00b0 70BD     		pop	{r4, r5, r6, pc}
 676              	.LVL56:
 677              	.L36:
 678 00b2 00BF     		.align	2
 679              	.L35:
 680 00b4 00000000 		.word	.LANCHOR1
 681 00b8 AA430040 		.word	1073759146
 682 00bc F8460040 		.word	1073759992
 683 00c0 F9460040 		.word	1073759993
 684 00c4 91580040 		.word	1073764497
 685 00c8 77580040 		.word	1073764471
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 45


 686 00cc 82580040 		.word	1073764482
 687 00d0 A1430040 		.word	1073759137
 688 00d4 80E200E0 		.word	-536812928
 689              		.cfi_endproc
 690              	.LFE1:
 691              		.size	ADC_Enable, .-ADC_Enable
 692              		.section	.text.ADC_Start,"ax",%progbits
 693              		.align	2
 694              		.global	ADC_Start
 695              		.thumb
 696              		.thumb_func
 697              		.type	ADC_Start, %function
 698              	ADC_Start:
 699              	.LFB2:
 330:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 700              		.loc 1 330 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 08B5     		push	{r3, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 331:.\Generated_Source\PSoC5/ADC.c ****     {
 708              		.loc 1 331 0
 709 0002 084B     		ldr	r3, .L41
 710 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 711 0006 4BB9     		cbnz	r3, .L38
 333:.\Generated_Source\PSoC5/ADC.c ****         {
 712              		.loc 1 333 0
 713 0008 064B     		ldr	r3, .L41
 714 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 715 000c 13F0FF0F 		tst	r3, #255
 716 0010 01D1     		bne	.L39
 335:.\Generated_Source\PSoC5/ADC.c ****         }
 717              		.loc 1 335 0
 718 0012 FFF7FEFF 		bl	ADC_Init
 719              	.LVL57:
 720              	.L39:
 337:.\Generated_Source\PSoC5/ADC.c ****     }
 721              		.loc 1 337 0
 722 0016 0122     		movs	r2, #1
 723 0018 024B     		ldr	r3, .L41
 724 001a 9A71     		strb	r2, [r3, #6]
 725              	.L38:
 341:.\Generated_Source\PSoC5/ADC.c **** }
 726              		.loc 1 341 0
 727 001c FFF7FEFF 		bl	ADC_Enable
 728              	.LVL58:
 729 0020 08BD     		pop	{r3, pc}
 730              	.L42:
 731 0022 00BF     		.align	2
 732              	.L41:
 733 0024 00000000 		.word	.LANCHOR0
 734              		.cfi_endproc
 735              	.LFE2:
 736              		.size	ADC_Start, .-ADC_Start
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 46


 737              		.section	.text.ADC_Stop,"ax",%progbits
 738              		.align	2
 739              		.global	ADC_Stop
 740              		.thumb
 741              		.thumb_func
 742              		.type	ADC_Stop, %function
 743              	ADC_Stop:
 744              	.LFB3:
 363:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 745              		.loc 1 363 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 365:.\Generated_Source\PSoC5/ADC.c **** 
 755              		.loc 1 365 0
 756 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 757              	.LVL59:
 758 0006 0646     		mov	r6, r0
 759              	.LVL60:
 368:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 760              		.loc 1 368 0
 761 0008 314A     		ldr	r2, .L45
 762 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 763 000c 03F0FE03 		and	r3, r3, #254
 764 0010 1370     		strb	r3, [r2]
 369:.\Generated_Source\PSoC5/ADC.c **** 
 765              		.loc 1 369 0
 766 0012 0132     		adds	r2, r2, #1
 767 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 768 0016 43F00403 		orr	r3, r3, #4
 769 001a 1370     		strb	r3, [r2]
 373:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 770              		.loc 1 373 0
 771 001c 2D4D     		ldr	r5, .L45+4
 772 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 773 0020 43F00203 		orr	r3, r3, #2
 774 0024 2B70     		strb	r3, [r5]
 374:.\Generated_Source\PSoC5/ADC.c **** 
 775              		.loc 1 374 0
 776 0026 2C4C     		ldr	r4, .L45+8
 777 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 778 002a 43F00203 		orr	r3, r3, #2
 779 002e 2370     		strb	r3, [r4]
 376:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 780              		.loc 1 376 0
 781 0030 02F52962 		add	r2, r2, #2704
 782 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 783 0036 03F0FC03 		and	r3, r3, #252
 784 003a 1370     		strb	r3, [r2]
 377:.\Generated_Source\PSoC5/ADC.c **** 
 785              		.loc 1 377 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 47


 786 003c 0132     		adds	r2, r2, #1
 787 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 788 0040 03F0F703 		and	r3, r3, #247
 789 0044 1370     		strb	r3, [r2]
 380:.\Generated_Source\PSoC5/ADC.c **** 
 790              		.loc 1 380 0
 791 0046 0320     		movs	r0, #3
 792 0048 FFF7FEFF 		bl	CyDelayUs
 793              	.LVL61:
 383:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 794              		.loc 1 383 0
 795 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 796 004e 03F0FD03 		and	r3, r3, #253
 797 0052 2B70     		strb	r3, [r5]
 384:.\Generated_Source\PSoC5/ADC.c **** 
 798              		.loc 1 384 0
 799 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 800 0056 03F0FD03 		and	r3, r3, #253
 801 005a 2370     		strb	r3, [r4]
 387:.\Generated_Source\PSoC5/ADC.c **** 
 802              		.loc 1 387 0
 803 005c 1F4B     		ldr	r3, .L45+12
 804 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 805 0060 02F0EF02 		and	r2, r2, #239
 806 0064 1A70     		strb	r2, [r3]
 390:.\Generated_Source\PSoC5/ADC.c **** 
 807              		.loc 1 390 0
 808 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 809 0068 02F0FE02 		and	r2, r2, #254
 810 006c 1A70     		strb	r2, [r3]
 393:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 811              		.loc 1 393 0
 812 006e 1033     		adds	r3, r3, #16
 813 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 814 0072 02F0FE02 		and	r2, r2, #254
 815 0076 1A70     		strb	r2, [r3]
 394:.\Generated_Source\PSoC5/ADC.c **** 
 816              		.loc 1 394 0
 817 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 818 007a 02F0EF02 		and	r2, r2, #239
 819 007e 1A70     		strb	r2, [r3]
 397:.\Generated_Source\PSoC5/ADC.c **** 
 820              		.loc 1 397 0
 821 0080 174A     		ldr	r2, .L45+16
 822 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 823 0084 03F0F903 		and	r3, r3, #249
 824 0088 1370     		strb	r3, [r2]
 401:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 825              		.loc 1 401 0
 826 008a A2F5A652 		sub	r2, r2, #5312
 827 008e 163A     		subs	r2, r2, #22
 828 0090 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 829 0092 03F0FE03 		and	r3, r3, #254
 830 0096 1370     		strb	r3, [r2]
 402:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 831              		.loc 1 402 0
 832 0098 1032     		adds	r2, r2, #16
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 48


 833 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 834 009c 03F0FE03 		and	r3, r3, #254
 835 00a0 1370     		strb	r3, [r2]
 406:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 836              		.loc 1 406 0
 837 00a2 02F5A652 		add	r2, r2, #5312
 838 00a6 1132     		adds	r2, r2, #17
 839 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 840 00aa 03F0F703 		and	r3, r3, #247
 841 00ae 1370     		strb	r3, [r2]
 408:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 842              		.loc 1 408 0
 843 00b0 A2F5A752 		sub	r2, r2, #5344
 844 00b4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 845 00b6 03F0FE03 		and	r3, r3, #254
 846 00ba 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/ADC.c ****     
 847              		.loc 1 409 0
 848 00bc 1032     		adds	r2, r2, #16
 849 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 850 00c0 03F0FE03 		and	r3, r3, #254
 851 00c4 1370     		strb	r3, [r2]
 411:.\Generated_Source\PSoC5/ADC.c **** }
 852              		.loc 1 411 0
 853 00c6 3046     		mov	r0, r6
 854 00c8 FFF7FEFF 		bl	CyExitCriticalSection
 855              	.LVL62:
 856 00cc 70BD     		pop	{r4, r5, r6, pc}
 857              	.LVL63:
 858              	.L46:
 859 00ce 00BF     		.align	2
 860              	.L45:
 861 00d0 004E0040 		.word	1073761792
 862 00d4 F8460040 		.word	1073759992
 863 00d8 F9460040 		.word	1073759993
 864 00dc AA430040 		.word	1073759146
 865 00e0 77580040 		.word	1073764471
 866              		.cfi_endproc
 867              	.LFE3:
 868              		.size	ADC_Stop, .-ADC_Stop
 869              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 870              		.align	2
 871              		.global	ADC_SetBufferGain
 872              		.thumb
 873              		.thumb_func
 874              		.type	ADC_SetBufferGain, %function
 875              	ADC_SetBufferGain:
 876              	.LFB4:
 430:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 877              		.loc 1 430 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882              	.LVL64:
 432:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 883              		.loc 1 432 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 49


 884 0000 044A     		ldr	r2, .L48
 885 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 886 0004 03F0F303 		and	r3, r3, #243
 887              	.LVL65:
 433:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 888              		.loc 1 433 0
 889 0008 8000     		lsls	r0, r0, #2
 890              	.LVL66:
 891 000a 00F00C00 		and	r0, r0, #12
 892 000e 1843     		orrs	r0, r0, r3
 893              	.LVL67:
 434:.\Generated_Source\PSoC5/ADC.c **** }
 894              		.loc 1 434 0
 895 0010 1070     		strb	r0, [r2]
 896 0012 7047     		bx	lr
 897              	.L49:
 898              		.align	2
 899              	.L48:
 900 0014 9B580040 		.word	1073764507
 901              		.cfi_endproc
 902              	.LFE4:
 903              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 904              		.section	.text.ADC_SetCoherency,"ax",%progbits
 905              		.align	2
 906              		.global	ADC_SetCoherency
 907              		.thumb
 908              		.thumb_func
 909              		.type	ADC_SetCoherency, %function
 910              	ADC_SetCoherency:
 911              	.LFB5:
 466:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 912              		.loc 1 466 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
 917              	.LVL68:
 469:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 918              		.loc 1 469 0
 919 0000 044A     		ldr	r2, .L51
 920 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 921 0004 03F0FC03 		and	r3, r3, #252
 922              	.LVL69:
 470:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 923              		.loc 1 470 0
 924 0008 00F00300 		and	r0, r0, #3
 925              	.LVL70:
 926 000c 1843     		orrs	r0, r0, r3
 927              	.LVL71:
 471:.\Generated_Source\PSoC5/ADC.c **** }
 928              		.loc 1 471 0
 929 000e 1070     		strb	r0, [r2]
 930 0010 7047     		bx	lr
 931              	.L52:
 932 0012 00BF     		.align	2
 933              	.L51:
 934 0014 144E0040 		.word	1073761812
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 50


 935              		.cfi_endproc
 936              	.LFE5:
 937              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 938              		.global	__aeabi_ui2f
 939              		.global	__aeabi_fmul
 940              		.global	__aeabi_f2d
 941              		.global	__aeabi_dcmpgt
 942              		.global	__aeabi_f2uiz
 943              		.section	.text.ADC_SetGCOR,"ax",%progbits
 944              		.align	2
 945              		.global	ADC_SetGCOR
 946              		.thumb
 947              		.thumb_func
 948              		.type	ADC_SetGCOR, %function
 949              	ADC_SetGCOR:
 950              	.LFB6:
 506:.\Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 951              		.loc 1 506 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL72:
 956 0000 10B5     		push	{r4, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 4, -8
 959              		.cfi_offset 14, -4
 960 0002 0446     		mov	r4, r0
 511:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 961              		.loc 1 511 0
 962 0004 184B     		ldr	r3, .L57+8
 963 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 0008 013B     		subs	r3, r3, #1
 965              	.LVL73:
 512:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 966              		.loc 1 512 0
 967 000a 184A     		ldr	r2, .L57+12
 968 000c 32F82300 		ldrh	r0, [r2, r3, lsl #2]
 969              	.LVL74:
 970 0010 FFF7FEFF 		bl	__aeabi_ui2f
 971              	.LVL75:
 972 0014 4FF06051 		mov	r1, #939524096
 973 0018 FFF7FEFF 		bl	__aeabi_fmul
 974              	.LVL76:
 513:.\Generated_Source\PSoC5/ADC.c **** 
 975              		.loc 1 513 0
 976 001c 2146     		mov	r1, r4
 977 001e FFF7FEFF 		bl	__aeabi_fmul
 978              	.LVL77:
 979 0022 0446     		mov	r4, r0
 980              	.LVL78:
 515:.\Generated_Source\PSoC5/ADC.c ****     {
 981              		.loc 1 515 0
 982 0024 FFF7FEFF 		bl	__aeabi_f2d
 983              	.LVL79:
 984 0028 0DA3     		adr	r3, .L57
 985 002a D3E90023 		ldrd	r2, [r3]
 986 002e FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 51


 987              	.LVL80:
 988 0032 88B9     		cbnz	r0, .L55
 521:.\Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 989              		.loc 1 521 0
 990 0034 2046     		mov	r0, r4
 991 0036 4FF08E41 		mov	r1, #1191182336
 992 003a FFF7FEFF 		bl	__aeabi_fmul
 993              	.LVL81:
 522:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 994              		.loc 1 522 0
 995 003e FFF7FEFF 		bl	__aeabi_f2uiz
 996              	.LVL82:
 997 0042 80B2     		uxth	r0, r0
 998              	.LVL83:
 523:.\Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 999              		.loc 1 523 0
 1000 0044 0A4B     		ldr	r3, .L57+16
 1001 0046 1880     		strh	r0, [r3]	@ movhi
 525:.\Generated_Source\PSoC5/ADC.c **** 
 1002              		.loc 1 525 0
 1003 0048 074B     		ldr	r3, .L57+8
 1004 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1005 004c 013B     		subs	r3, r3, #1
 1006 004e 074A     		ldr	r2, .L57+12
 1007 0050 22F82300 		strh	r0, [r2, r3, lsl #2]	@ movhi
 1008              	.LVL84:
 527:.\Generated_Source\PSoC5/ADC.c **** 
 1009              		.loc 1 527 0
 1010 0054 0020     		movs	r0, #0
 1011              	.LVL85:
 1012 0056 10BD     		pop	{r4, pc}
 1013              	.LVL86:
 1014              	.L55:
 517:.\Generated_Source\PSoC5/ADC.c ****     }
 1015              		.loc 1 517 0
 1016 0058 0120     		movs	r0, #1
 1017              	.LVL87:
 531:.\Generated_Source\PSoC5/ADC.c **** 
 1018              		.loc 1 531 0
 1019 005a 10BD     		pop	{r4, pc}
 1020              	.LVL88:
 1021              	.L58:
 1022 005c AFF30080 		.align	3
 1023              	.L57:
 1024 0060 8F537424 		.word	611603343
 1025 0064 97FFFF3F 		.word	1073741719
 1026 0068 00000000 		.word	.LANCHOR1
 1027 006c 00000000 		.word	.LANCHOR0
 1028 0070 0C4E0040 		.word	1073761804
 1029              		.cfi_endproc
 1030              	.LFE6:
 1031              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 1032 0074 AFF30080 		.section	.text.ADC_ReadGCOR,"ax",%progbits
 1033              		.align	2
 1034              		.global	ADC_ReadGCOR
 1035              		.thumb
 1036              		.thumb_func
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 52


 1037              		.type	ADC_ReadGCOR, %function
 1038              	ADC_ReadGCOR:
 1039              	.LFB7:
 553:.\Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 1040              		.loc 1 553 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 557:.\Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 1045              		.loc 1 557 0
 1046 0000 064B     		ldr	r3, .L61
 1047 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 0004 DBB2     		uxtb	r3, r3
 1049              	.LVL89:
 558:.\Generated_Source\PSoC5/ADC.c **** 
 1050              		.loc 1 558 0
 1051 0006 064A     		ldr	r2, .L61+4
 1052 0008 1088     		ldrh	r0, [r2]
 1053 000a 80B2     		uxth	r0, r0
 1054              	.LVL90:
 560:.\Generated_Source\PSoC5/ADC.c ****     {
 1055              		.loc 1 560 0
 1056 000c 0E2B     		cmp	r3, #14
 1057 000e 03D8     		bhi	.L60
 562:.\Generated_Source\PSoC5/ADC.c ****     }
 1058              		.loc 1 562 0
 1059 0010 C3F10F03 		rsb	r3, r3, #15
 1060              	.LVL91:
 1061 0014 9840     		lsls	r0, r0, r3
 1062              	.LVL92:
 1063 0016 80B2     		uxth	r0, r0
 1064              	.LVL93:
 1065              	.L60:
 566:.\Generated_Source\PSoC5/ADC.c **** 
 1066              		.loc 1 566 0
 1067 0018 7047     		bx	lr
 1068              	.L62:
 1069 001a 00BF     		.align	2
 1070              	.L61:
 1071 001c 0E4E0040 		.word	1073761806
 1072 0020 0C4E0040 		.word	1073761804
 1073              		.cfi_endproc
 1074              	.LFE7:
 1075              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 1076              		.section	.text.ADC_StartConvert,"ax",%progbits
 1077              		.align	2
 1078              		.global	ADC_StartConvert
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	ADC_StartConvert, %function
 1082              	ADC_StartConvert:
 1083              	.LFB8:
 587:.\Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 1084              		.loc 1 587 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 53


 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 589:.\Generated_Source\PSoC5/ADC.c **** }
 1089              		.loc 1 589 0
 1090 0000 024A     		ldr	r2, .L64
 1091 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1092 0004 43F00103 		orr	r3, r3, #1
 1093 0008 1370     		strb	r3, [r2]
 1094 000a 7047     		bx	lr
 1095              	.L65:
 1096              		.align	2
 1097              	.L64:
 1098 000c 004E0040 		.word	1073761792
 1099              		.cfi_endproc
 1100              	.LFE8:
 1101              		.size	ADC_StartConvert, .-ADC_StartConvert
 1102              		.section	.text.ADC_StopConvert,"ax",%progbits
 1103              		.align	2
 1104              		.global	ADC_StopConvert
 1105              		.thumb
 1106              		.thumb_func
 1107              		.type	ADC_StopConvert, %function
 1108              	ADC_StopConvert:
 1109              	.LFB9:
 610:.\Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 1110              		.loc 1 610 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 612:.\Generated_Source\PSoC5/ADC.c **** }
 1115              		.loc 1 612 0
 1116 0000 024A     		ldr	r2, .L67
 1117 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1118 0004 03F0FE03 		and	r3, r3, #254
 1119 0008 1370     		strb	r3, [r2]
 1120 000a 7047     		bx	lr
 1121              	.L68:
 1122              		.align	2
 1123              	.L67:
 1124 000c 004E0040 		.word	1073761792
 1125              		.cfi_endproc
 1126              	.LFE9:
 1127              		.size	ADC_StopConvert, .-ADC_StopConvert
 1128              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1129              		.align	2
 1130              		.global	ADC_IsEndConversion
 1131              		.thumb
 1132              		.thumb_func
 1133              		.type	ADC_IsEndConversion, %function
 1134              	ADC_IsEndConversion:
 1135              	.LFB10:
 645:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 1136              		.loc 1 645 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 54


 1140              		@ link register save eliminated.
 1141              	.LVL94:
 1142              	.L73:
 653:.\Generated_Source\PSoC5/ADC.c ****         {
 1143              		.loc 1 653 0
 1144 0000 094B     		ldr	r3, .L74
 1145 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1146 0004 13F0FF0F 		tst	r3, #255
 1147 0008 03D0     		beq	.L70
 655:.\Generated_Source\PSoC5/ADC.c ****         }
 1148              		.loc 1 655 0
 1149 000a 074B     		ldr	r3, .L74
 1150 000c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1151 000e DBB2     		uxtb	r3, r3
 1152              	.LVL95:
 1153 0010 03E0     		b	.L71
 1154              	.LVL96:
 1155              	.L70:
 659:.\Generated_Source\PSoC5/ADC.c ****         }
 1156              		.loc 1 659 0
 1157 0012 064B     		ldr	r3, .L74+4
 1158 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 0016 03F00103 		and	r3, r3, #1
 1160              	.LVL97:
 1161              	.L71:
 661:.\Generated_Source\PSoC5/ADC.c **** 
 1162              		.loc 1 661 0
 1163 001a 012B     		cmp	r3, #1
 1164 001c 01D0     		beq	.L72
 661:.\Generated_Source\PSoC5/ADC.c **** 
 1165              		.loc 1 661 0 is_stmt 0 discriminator 1
 1166 001e 0028     		cmp	r0, #0
 1167 0020 EED0     		beq	.L73
 1168              	.L72:
 664:.\Generated_Source\PSoC5/ADC.c **** 
 1169              		.loc 1 664 0 is_stmt 1
 1170 0022 1846     		mov	r0, r3
 1171              	.LVL98:
 1172 0024 7047     		bx	lr
 1173              	.L75:
 1174 0026 00BF     		.align	2
 1175              	.L74:
 1176 0028 00000000 		.word	.LANCHOR0
 1177 002c 014E0040 		.word	1073761793
 1178              		.cfi_endproc
 1179              	.LFE10:
 1180              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1181              		.section	.text.ADC_GetResult8,"ax",%progbits
 1182              		.align	2
 1183              		.global	ADC_GetResult8
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	ADC_GetResult8, %function
 1187              	ADC_GetResult8:
 1188              	.LFB11:
 692:.\Generated_Source\PSoC5/ADC.c ****     int8 result;
 1189              		.loc 1 692 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 55


 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 697:.\Generated_Source\PSoC5/ADC.c **** 
 1194              		.loc 1 697 0
 1195 0000 0C4B     		ldr	r3, .L80
 1196 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1197 0004 03F00303 		and	r3, r3, #3
 1198              	.LVL99:
 699:.\Generated_Source\PSoC5/ADC.c **** 
 1199              		.loc 1 699 0
 1200 0008 0B4A     		ldr	r2, .L80+4
 1201 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1202              	.LVL100:
 701:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 1203              		.loc 1 701 0
 1204 000c 022B     		cmp	r3, #2
 1205 000e 02D1     		bne	.L77
 703:.\Generated_Source\PSoC5/ADC.c ****     }
 1206              		.loc 1 703 0
 1207 0010 0A4B     		ldr	r3, .L80+8
 1208              	.LVL101:
 1209 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1210 0014 03E0     		b	.L78
 1211              	.LVL102:
 1212              	.L77:
 705:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 1213              		.loc 1 705 0
 1214 0016 032B     		cmp	r3, #3
 1215 0018 01D1     		bne	.L78
 707:.\Generated_Source\PSoC5/ADC.c ****     }
 1216              		.loc 1 707 0
 1217 001a 094B     		ldr	r3, .L80+12
 1218              	.LVL103:
 1219 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1220              	.L78:
 713:.\Generated_Source\PSoC5/ADC.c ****     {
 1221              		.loc 1 713 0
 1222 001e 094B     		ldr	r3, .L80+16
 1223 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1224 0022 13F0FF0F 		tst	r3, #255
 1225 0026 02D0     		beq	.L79
 715:.\Generated_Source\PSoC5/ADC.c ****     }
 1226              		.loc 1 715 0
 1227 0028 0022     		movs	r2, #0
 1228 002a 064B     		ldr	r3, .L80+16
 1229 002c 5A71     		strb	r2, [r3, #5]
 1230              	.L79:
 718:.\Generated_Source\PSoC5/ADC.c **** 
 1231              		.loc 1 718 0
 1232 002e 40B2     		sxtb	r0, r0
 1233 0030 7047     		bx	lr
 1234              	.L81:
 1235 0032 00BF     		.align	2
 1236              	.L80:
 1237 0034 144E0040 		.word	1073761812
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 56


 1238 0038 104E0040 		.word	1073761808
 1239 003c 114E0040 		.word	1073761809
 1240 0040 124E0040 		.word	1073761810
 1241 0044 00000000 		.word	.LANCHOR0
 1242              		.cfi_endproc
 1243              	.LFE11:
 1244              		.size	ADC_GetResult8, .-ADC_GetResult8
 1245              		.section	.text.ADC_GetResult16,"ax",%progbits
 1246              		.align	2
 1247              		.global	ADC_GetResult16
 1248              		.thumb
 1249              		.thumb_func
 1250              		.type	ADC_GetResult16, %function
 1251              	ADC_GetResult16:
 1252              	.LFB12:
 746:.\Generated_Source\PSoC5/ADC.c ****     uint16 result;
 1253              		.loc 1 746 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              		@ link register save eliminated.
 751:.\Generated_Source\PSoC5/ADC.c **** 
 1258              		.loc 1 751 0
 1259 0000 0E4B     		ldr	r3, .L86
 1260 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0004 03F00303 		and	r3, r3, #3
 1262              	.LVL104:
 753:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1263              		.loc 1 753 0
 1264 0008 012B     		cmp	r3, #1
 1265 000a 03D8     		bhi	.L83
 759:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1266              		.loc 1 759 0
 1267 000c 0C4B     		ldr	r3, .L86+4
 1268              	.LVL105:
 1269 000e 1888     		ldrh	r0, [r3]
 1270 0010 80B2     		uxth	r0, r0
 1271              	.LVL106:
 1272 0012 09E0     		b	.L84
 1273              	.LVL107:
 1274              	.L83:
 767:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1275              		.loc 1 767 0
 1276 0014 0A4A     		ldr	r2, .L86+4
 1277 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1278              	.LVL108:
 768:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1279              		.loc 1 768 0
 1280 0018 0A49     		ldr	r1, .L86+8
 1281 001a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1282 001c 42EA0020 		orr	r0, r2, r0, lsl #8
 1283              	.LVL109:
 770:.\Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 1284              		.loc 1 770 0
 1285 0020 032B     		cmp	r3, #3
 1286 0022 01D1     		bne	.L84
 772:.\Generated_Source\PSoC5/ADC.c ****         }
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 57


 1287              		.loc 1 772 0
 1288 0024 084B     		ldr	r3, .L86+12
 1289              	.LVL110:
 1290 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1291              	.L84:
 776:.\Generated_Source\PSoC5/ADC.c ****     {
 1292              		.loc 1 776 0
 1293 0028 084B     		ldr	r3, .L86+16
 1294 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1295 002c 13F0FF0F 		tst	r3, #255
 1296 0030 02D0     		beq	.L85
 778:.\Generated_Source\PSoC5/ADC.c ****     }
 1297              		.loc 1 778 0
 1298 0032 0022     		movs	r2, #0
 1299 0034 054B     		ldr	r3, .L86+16
 1300 0036 5A71     		strb	r2, [r3, #5]
 1301              	.L85:
 782:.\Generated_Source\PSoC5/ADC.c **** 
 1302              		.loc 1 782 0
 1303 0038 00B2     		sxth	r0, r0
 1304 003a 7047     		bx	lr
 1305              	.L87:
 1306              		.align	2
 1307              	.L86:
 1308 003c 144E0040 		.word	1073761812
 1309 0040 104E0040 		.word	1073761808
 1310 0044 114E0040 		.word	1073761809
 1311 0048 124E0040 		.word	1073761810
 1312 004c 00000000 		.word	.LANCHOR0
 1313              		.cfi_endproc
 1314              	.LFE12:
 1315              		.size	ADC_GetResult16, .-ADC_GetResult16
 1316              		.section	.text.ADC_GetResult32,"ax",%progbits
 1317              		.align	2
 1318              		.global	ADC_GetResult32
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	ADC_GetResult32, %function
 1322              	ADC_GetResult32:
 1323              	.LFB13:
 806:.\Generated_Source\PSoC5/ADC.c ****     uint32 result;
 1324              		.loc 1 806 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              		@ link register save eliminated.
 814:.\Generated_Source\PSoC5/ADC.c **** 
 1329              		.loc 1 814 0
 1330 0000 154B     		ldr	r3, .L93
 1331 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 0004 03F00303 		and	r3, r3, #3
 1333              	.LVL111:
 816:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1334              		.loc 1 816 0
 1335 0008 012B     		cmp	r3, #1
 1336 000a 07D8     		bhi	.L89
 827:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 58


 1337              		.loc 1 827 0
 1338 000c 134B     		ldr	r3, .L93+4
 1339              	.LVL112:
 1340 000e 1888     		ldrh	r0, [r3]
 1341              	.LVL113:
 828:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1342              		.loc 1 828 0
 1343 0010 023B     		subs	r3, r3, #2
 1344 0012 1B88     		ldrh	r3, [r3]
 1345 0014 9BB2     		uxth	r3, r3
 1346 0016 43EA0040 		orr	r0, r3, r0, lsl #16
 1347              	.LVL114:
 1348 001a 13E0     		b	.L90
 1349              	.LVL115:
 1350              	.L89:
 831:.\Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 1351              		.loc 1 831 0
 1352 001c 022B     		cmp	r3, #2
 1353 001e 0AD1     		bne	.L91
 841:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1354              		.loc 1 841 0
 1355 0020 0E4B     		ldr	r3, .L93+4
 1356              	.LVL116:
 1357 0022 1888     		ldrh	r0, [r3]
 1358              	.LVL117:
 842:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1359              		.loc 1 842 0
 1360 0024 023B     		subs	r3, r3, #2
 1361 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0028 43EA0043 		orr	r3, r3, r0, lsl #16
 1363              	.LVL118:
 843:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1364              		.loc 1 843 0
 1365 002c 0C4A     		ldr	r2, .L93+8
 1366 002e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1367 0030 43EA0020 		orr	r0, r3, r0, lsl #8
 1368              	.LVL119:
 1369 0034 06E0     		b	.L90
 1370              	.LVL120:
 1371              	.L91:
 858:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1372              		.loc 1 858 0
 1373 0036 0B4B     		ldr	r3, .L93+12
 1374              	.LVL121:
 1375 0038 1888     		ldrh	r0, [r3]
 1376 003a 83B2     		uxth	r3, r0
 1377              	.LVL122:
 859:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 1378              		.loc 1 859 0
 1379 003c 074A     		ldr	r2, .L93+4
 1380 003e 1088     		ldrh	r0, [r2]
 1381 0040 43EA0040 		orr	r0, r3, r0, lsl #16
 1382              	.LVL123:
 1383              	.L90:
 863:.\Generated_Source\PSoC5/ADC.c ****     {
 1384              		.loc 1 863 0
 1385 0044 084B     		ldr	r3, .L93+16
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 59


 1386 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1387 0048 13F0FF0F 		tst	r3, #255
 1388 004c 02D0     		beq	.L92
 865:.\Generated_Source\PSoC5/ADC.c ****     }
 1389              		.loc 1 865 0
 1390 004e 0022     		movs	r2, #0
 1391 0050 054B     		ldr	r3, .L93+16
 1392 0052 5A71     		strb	r2, [r3, #5]
 1393              	.L92:
 869:.\Generated_Source\PSoC5/ADC.c **** 
 1394              		.loc 1 869 0
 1395 0054 7047     		bx	lr
 1396              	.L94:
 1397 0056 00BF     		.align	2
 1398              	.L93:
 1399 0058 144E0040 		.word	1073761812
 1400 005c 124E0040 		.word	1073761810
 1401 0060 114E0040 		.word	1073761809
 1402 0064 104E0040 		.word	1073761808
 1403 0068 00000000 		.word	.LANCHOR0
 1404              		.cfi_endproc
 1405              	.LFE13:
 1406              		.size	ADC_GetResult32, .-ADC_GetResult32
 1407              		.section	.text.ADC_SetOffset,"ax",%progbits
 1408              		.align	2
 1409              		.global	ADC_SetOffset
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	ADC_SetOffset, %function
 1413              	ADC_SetOffset:
 1414              	.LFB14:
 899:.\Generated_Source\PSoC5/ADC.c **** 
 1415              		.loc 1 899 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 1420              	.LVL124:
 901:.\Generated_Source\PSoC5/ADC.c **** }
 1421              		.loc 1 901 0
 1422 0000 014B     		ldr	r3, .L96
 1423 0002 1860     		str	r0, [r3]
 1424 0004 7047     		bx	lr
 1425              	.L97:
 1426 0006 00BF     		.align	2
 1427              	.L96:
 1428 0008 00000000 		.word	ADC_Offset
 1429              		.cfi_endproc
 1430              	.LFE14:
 1431              		.size	ADC_SetOffset, .-ADC_SetOffset
 1432              		.section	.text.ADC_SetGain,"ax",%progbits
 1433              		.align	2
 1434              		.global	ADC_SetGain
 1435              		.thumb
 1436              		.thumb_func
 1437              		.type	ADC_SetGain, %function
 1438              	ADC_SetGain:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 60


 1439              	.LFB15:
 934:.\Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1440              		.loc 1 934 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445              	.LVL125:
 935:.\Generated_Source\PSoC5/ADC.c **** }
 1446              		.loc 1 935 0
 1447 0000 014B     		ldr	r3, .L99
 1448 0002 1860     		str	r0, [r3]
 1449 0004 7047     		bx	lr
 1450              	.L100:
 1451 0006 00BF     		.align	2
 1452              	.L99:
 1453 0008 00000000 		.word	ADC_CountsPerVolt
 1454              		.cfi_endproc
 1455              	.LFE15:
 1456              		.size	ADC_SetGain, .-ADC_SetGain
 1457              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1458              		.align	2
 1459              		.global	ADC_CountsTo_mVolts
 1460              		.thumb
 1461              		.thumb_func
 1462              		.type	ADC_CountsTo_mVolts, %function
 1463              	ADC_CountsTo_mVolts:
 1464              	.LFB16:
 961:.\Generated_Source\PSoC5/ADC.c **** 
 1465              		.loc 1 961 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
 1470              	.LVL126:
 992:.\Generated_Source\PSoC5/ADC.c **** 
 1471              		.loc 1 992 0
 1472 0000 064B     		ldr	r3, .L102
 1473 0002 1B68     		ldr	r3, [r3]
 1474 0004 C01A     		subs	r0, r0, r3
 1475              	.LVL127:
 994:.\Generated_Source\PSoC5/ADC.c **** 
 1476              		.loc 1 994 0
 1477 0006 4FF47A73 		mov	r3, #1000
 1478 000a 03FB00F0 		mul	r0, r3, r0
 1479              	.LVL128:
 1480 000e 044B     		ldr	r3, .L102+4
 1481 0010 1B68     		ldr	r3, [r3]
 1482 0012 90FBF3F0 		sdiv	r0, r0, r3
 1483              	.LVL129:
 997:.\Generated_Source\PSoC5/ADC.c **** 
 1484              		.loc 1 997 0
 1485 0016 00B2     		sxth	r0, r0
 1486 0018 7047     		bx	lr
 1487              	.L103:
 1488 001a 00BF     		.align	2
 1489              	.L102:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 61


 1490 001c 00000000 		.word	ADC_Offset
 1491 0020 00000000 		.word	ADC_CountsPerVolt
 1492              		.cfi_endproc
 1493              	.LFE16:
 1494              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1495              		.global	__aeabi_i2f
 1496              		.global	__aeabi_fdiv
 1497              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1498              		.align	2
 1499              		.global	ADC_CountsTo_Volts
 1500              		.thumb
 1501              		.thumb_func
 1502              		.type	ADC_CountsTo_Volts, %function
 1503              	ADC_CountsTo_Volts:
 1504              	.LFB17:
1022:.\Generated_Source\PSoC5/ADC.c **** 
 1505              		.loc 1 1022 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              	.LVL130:
 1510 0000 10B5     		push	{r4, lr}
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 4, -8
 1513              		.cfi_offset 14, -4
1053:.\Generated_Source\PSoC5/ADC.c **** 
 1514              		.loc 1 1053 0
 1515 0002 074B     		ldr	r3, .L106
 1516 0004 1B68     		ldr	r3, [r3]
 1517              	.LVL131:
1055:.\Generated_Source\PSoC5/ADC.c **** 
 1518              		.loc 1 1055 0
 1519 0006 C01A     		subs	r0, r0, r3
 1520              	.LVL132:
 1521 0008 FFF7FEFF 		bl	__aeabi_i2f
 1522              	.LVL133:
 1523 000c 0446     		mov	r4, r0
 1524 000e 054B     		ldr	r3, .L106+4
 1525 0010 1868     		ldr	r0, [r3]
 1526 0012 FFF7FEFF 		bl	__aeabi_i2f
 1527              	.LVL134:
 1528 0016 0146     		mov	r1, r0
 1529 0018 2046     		mov	r0, r4
 1530 001a FFF7FEFF 		bl	__aeabi_fdiv
 1531              	.LVL135:
1058:.\Generated_Source\PSoC5/ADC.c **** 
 1532              		.loc 1 1058 0
 1533 001e 10BD     		pop	{r4, pc}
 1534              	.L107:
 1535              		.align	2
 1536              	.L106:
 1537 0020 00000000 		.word	ADC_Offset
 1538 0024 00000000 		.word	ADC_CountsPerVolt
 1539              		.cfi_endproc
 1540              	.LFE17:
 1541              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1542              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 62


 1543              		.align	2
 1544              		.global	ADC_CountsTo_uVolts
 1545              		.thumb
 1546              		.thumb_func
 1547              		.type	ADC_CountsTo_uVolts, %function
 1548              	ADC_CountsTo_uVolts:
 1549              	.LFB18:
1088:.\Generated_Source\PSoC5/ADC.c **** 
 1550              		.loc 1 1088 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554              		@ link register save eliminated.
 1555              	.LVL136:
1097:.\Generated_Source\PSoC5/ADC.c ****     {
 1556              		.loc 1 1097 0
 1557 0000 0F4B     		ldr	r3, .L111
 1558 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 0004 DBB2     		uxtb	r3, r3
 1560 0006 012B     		cmp	r3, #1
 1561 0008 06D0     		beq	.L109
1104:.\Generated_Source\PSoC5/ADC.c ****     {
 1562              		.loc 1 1104 0
 1563 000a 0D4B     		ldr	r3, .L111
 1564 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 000e DBB2     		uxtb	r3, r3
 1566 0010 022B     		cmp	r3, #2
 1567 0012 01D0     		beq	.L109
1111:.\Generated_Source\PSoC5/ADC.c ****     {
 1568              		.loc 1 1111 0
 1569 0014 0A4B     		ldr	r3, .L111
 1570 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1571              	.L109:
 1572              	.LVL137:
1215:.\Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1573              		.loc 1 1215 0
 1574 0018 0A4B     		ldr	r3, .L111+4
 1575 001a 1B68     		ldr	r3, [r3]
 1576 001c 002B     		cmp	r3, #0
 1577 001e 00DA     		bge	.L110
 1578 0020 1F33     		adds	r3, r3, #31
 1579              	.L110:
 1580 0022 5A11     		asrs	r2, r3, #5
 1581              	.LVL138:
1216:.\Generated_Source\PSoC5/ADC.c **** 
 1582              		.loc 1 1216 0
 1583 0024 47F61223 		movw	r3, #31250
 1584 0028 03FB00F0 		mul	r0, r3, r0
 1585              	.LVL139:
 1586 002c 90FBF2F0 		sdiv	r0, r0, r2
 1587 0030 0549     		ldr	r1, .L111+8
 1588 0032 0968     		ldr	r1, [r1]
 1589 0034 03FB01F3 		mul	r3, r3, r1
 1590 0038 93FBF2F3 		sdiv	r3, r3, r2
 1591              	.LVL140:
1219:.\Generated_Source\PSoC5/ADC.c **** 
 1592              		.loc 1 1219 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 63


 1593 003c C01A     		subs	r0, r0, r3
 1594              	.LVL141:
 1595 003e 7047     		bx	lr
 1596              	.L112:
 1597              		.align	2
 1598              	.L111:
 1599 0040 00000000 		.word	.LANCHOR1
 1600 0044 00000000 		.word	ADC_CountsPerVolt
 1601 0048 00000000 		.word	ADC_Offset
 1602              		.cfi_endproc
 1603              	.LFE18:
 1604              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1605              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 1606              		.align	2
 1607              		.global	ADC_SelectConfiguration
 1608              		.thumb
 1609              		.thumb_func
 1610              		.type	ADC_SelectConfiguration, %function
 1611              	ADC_SelectConfiguration:
 1612              	.LFB20:
1554:.\Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
 1613              		.loc 1 1554 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              	.LVL142:
 1618 0000 38B5     		push	{r3, r4, r5, lr}
 1619              		.cfi_def_cfa_offset 16
 1620              		.cfi_offset 3, -16
 1621              		.cfi_offset 4, -12
 1622              		.cfi_offset 5, -8
 1623              		.cfi_offset 14, -4
 1624 0002 0446     		mov	r4, r0
1556:.\Generated_Source\PSoC5/ADC.c ****     {
 1625              		.loc 1 1556 0
 1626 0004 0128     		cmp	r0, #1
 1627 0006 1FD1     		bne	.L114
 1628 0008 0D46     		mov	r5, r1
1561:.\Generated_Source\PSoC5/ADC.c ****         {
 1629              		.loc 1 1561 0
 1630 000a 114B     		ldr	r3, .L118
 1631 000c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1632 000e 13B9     		cbnz	r3, .L115
1563:.\Generated_Source\PSoC5/ADC.c ****         }
 1633              		.loc 1 1563 0
 1634 0010 0122     		movs	r2, #1
 1635 0012 0F4B     		ldr	r3, .L118
 1636 0014 DA71     		strb	r2, [r3, #7]
 1637              	.L115:
1567:.\Generated_Source\PSoC5/ADC.c **** 
 1638              		.loc 1 1567 0
 1639 0016 0F4B     		ldr	r3, .L118+4
 1640 0018 1C70     		strb	r4, [r3]
1570:.\Generated_Source\PSoC5/ADC.c **** 
 1641              		.loc 1 1570 0
 1642 001a FFF7FEFF 		bl	ADC_Stop
 1643              	.LVL143:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 64


1573:.\Generated_Source\PSoC5/ADC.c **** 
 1644              		.loc 1 1573 0
 1645 001e 2046     		mov	r0, r4
 1646 0020 FFF7FEFF 		bl	ADC_InitConfig
 1647              	.LVL144:
1576:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 1648              		.loc 1 1576 0
 1649 0024 013C     		subs	r4, r4, #1
 1650 0026 0A4B     		ldr	r3, .L118
 1651 0028 03EB8402 		add	r2, r3, r4, lsl #2
 1652 002c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1653 002e 0A4A     		ldr	r2, .L118+8
 1654 0030 1170     		strb	r1, [r2]
1577:.\Generated_Source\PSoC5/ADC.c **** 
 1655              		.loc 1 1577 0
 1656 0032 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 1657 0036 094B     		ldr	r3, .L118+12
 1658 0038 1A80     		strh	r2, [r3]	@ movhi
1579:.\Generated_Source\PSoC5/ADC.c ****         {
 1659              		.loc 1 1579 0
 1660 003a 012D     		cmp	r5, #1
 1661 003c 07D1     		bne	.L113
1582:.\Generated_Source\PSoC5/ADC.c **** 
 1662              		.loc 1 1582 0
 1663 003e FFF7FEFF 		bl	ADC_Start
 1664              	.LVL145:
1585:.\Generated_Source\PSoC5/ADC.c ****         }
 1665              		.loc 1 1585 0
 1666 0042 FFF7FEFF 		bl	ADC_StartConvert
 1667              	.LVL146:
 1668 0046 38BD     		pop	{r3, r4, r5, pc}
 1669              	.LVL147:
 1670              	.L114:
1591:.\Generated_Source\PSoC5/ADC.c ****     }
 1671              		.loc 1 1591 0 discriminator 1
 1672 0048 0020     		movs	r0, #0
 1673              	.LVL148:
 1674 004a FFF7FEFF 		bl	CyHalt
 1675              	.LVL149:
 1676              	.L113:
 1677 004e 38BD     		pop	{r3, r4, r5, pc}
 1678              	.L119:
 1679              		.align	2
 1680              	.L118:
 1681 0050 00000000 		.word	.LANCHOR0
 1682 0054 00000000 		.word	.LANCHOR1
 1683 0058 0E4E0040 		.word	1073761806
 1684 005c 0C4E0040 		.word	1073761804
 1685              		.cfi_endproc
 1686              	.LFE20:
 1687              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 1688              		.section	.text.ADC_Read8,"ax",%progbits
 1689              		.align	2
 1690              		.global	ADC_Read8
 1691              		.thumb
 1692              		.thumb_func
 1693              		.type	ADC_Read8, %function
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 65


 1694              	ADC_Read8:
 1695              	.LFB23:
1741:.\Generated_Source\PSoC5/ADC.c **** }
1742:.\Generated_Source\PSoC5/ADC.c **** 
1743:.\Generated_Source\PSoC5/ADC.c **** 
1744:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1745:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1746:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1747:.\Generated_Source\PSoC5/ADC.c **** *
1748:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1749:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1751:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1754:.\Generated_Source\PSoC5/ADC.c **** *
1755:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1756:.\Generated_Source\PSoC5/ADC.c **** *  None
1757:.\Generated_Source\PSoC5/ADC.c **** *
1758:.\Generated_Source\PSoC5/ADC.c **** * Return:
1759:.\Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1760:.\Generated_Source\PSoC5/ADC.c **** *
1761:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1762:.\Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1763:.\Generated_Source\PSoC5/ADC.c **** {
 1696              		.loc 1 1763 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700 0000 10B5     		push	{r4, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 4, -8
 1703              		.cfi_offset 14, -4
1764:.\Generated_Source\PSoC5/ADC.c ****     int8 result;
1765:.\Generated_Source\PSoC5/ADC.c **** 
1766:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1767:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1704              		.loc 1 1767 0
 1705 0002 084A     		ldr	r2, .L122
 1706 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1707 0006 43F00403 		orr	r3, r3, #4
 1708 000a 1370     		strb	r3, [r2]
1768:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1709              		.loc 1 1768 0
 1710 000c FFF7FEFF 		bl	ADC_StartConvert
 1711              	.LVL150:
1769:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1712              		.loc 1 1769 0
 1713 0010 0020     		movs	r0, #0
 1714 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1715              	.LVL151:
1770:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 1716              		.loc 1 1770 0
 1717 0016 FFF7FEFF 		bl	ADC_GetResult8
 1718              	.LVL152:
 1719 001a 0446     		mov	r4, r0
 1720              	.LVL153:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 66


1771:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1721              		.loc 1 1771 0
 1722 001c FFF7FEFF 		bl	ADC_StopConvert
 1723              	.LVL154:
1772:.\Generated_Source\PSoC5/ADC.c ****     
1773:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1774:.\Generated_Source\PSoC5/ADC.c **** }
 1724              		.loc 1 1774 0
 1725 0020 2046     		mov	r0, r4
 1726 0022 10BD     		pop	{r4, pc}
 1727              	.LVL155:
 1728              	.L123:
 1729              		.align	2
 1730              	.L122:
 1731 0024 014E0040 		.word	1073761793
 1732              		.cfi_endproc
 1733              	.LFE23:
 1734              		.size	ADC_Read8, .-ADC_Read8
 1735              		.section	.text.ADC_Read16,"ax",%progbits
 1736              		.align	2
 1737              		.global	ADC_Read16
 1738              		.thumb
 1739              		.thumb_func
 1740              		.type	ADC_Read16, %function
 1741              	ADC_Read16:
 1742              	.LFB24:
1775:.\Generated_Source\PSoC5/ADC.c **** 
1776:.\Generated_Source\PSoC5/ADC.c **** 
1777:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1778:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1779:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1780:.\Generated_Source\PSoC5/ADC.c **** *
1781:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1782:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1784:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1787:.\Generated_Source\PSoC5/ADC.c **** *
1788:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1789:.\Generated_Source\PSoC5/ADC.c **** *   void
1790:.\Generated_Source\PSoC5/ADC.c **** *
1791:.\Generated_Source\PSoC5/ADC.c **** * Return:
1792:.\Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1793:.\Generated_Source\PSoC5/ADC.c **** *
1794:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1795:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1796:.\Generated_Source\PSoC5/ADC.c **** {
 1743              		.loc 1 1796 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 1747 0000 10B5     		push	{r4, lr}
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 4, -8
 1750              		.cfi_offset 14, -4
1797:.\Generated_Source\PSoC5/ADC.c ****     int16 result;
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 67


1798:.\Generated_Source\PSoC5/ADC.c **** 
1799:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1800:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1751              		.loc 1 1800 0
 1752 0002 084A     		ldr	r2, .L126
 1753 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1754 0006 43F00403 		orr	r3, r3, #4
 1755 000a 1370     		strb	r3, [r2]
1801:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1756              		.loc 1 1801 0
 1757 000c FFF7FEFF 		bl	ADC_StartConvert
 1758              	.LVL156:
1802:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1759              		.loc 1 1802 0
 1760 0010 0020     		movs	r0, #0
 1761 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1762              	.LVL157:
1803:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 1763              		.loc 1 1803 0
 1764 0016 FFF7FEFF 		bl	ADC_GetResult16
 1765              	.LVL158:
 1766 001a 0446     		mov	r4, r0
 1767              	.LVL159:
1804:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1768              		.loc 1 1804 0
 1769 001c FFF7FEFF 		bl	ADC_StopConvert
 1770              	.LVL160:
1805:.\Generated_Source\PSoC5/ADC.c ****     
1806:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1807:.\Generated_Source\PSoC5/ADC.c **** }
 1771              		.loc 1 1807 0
 1772 0020 2046     		mov	r0, r4
 1773 0022 10BD     		pop	{r4, pc}
 1774              	.LVL161:
 1775              	.L127:
 1776              		.align	2
 1777              	.L126:
 1778 0024 014E0040 		.word	1073761793
 1779              		.cfi_endproc
 1780              	.LFE24:
 1781              		.size	ADC_Read16, .-ADC_Read16
 1782              		.section	.text.ADC_Read32,"ax",%progbits
 1783              		.align	2
 1784              		.global	ADC_Read32
 1785              		.thumb
 1786              		.thumb_func
 1787              		.type	ADC_Read32, %function
 1788              	ADC_Read32:
 1789              	.LFB25:
1808:.\Generated_Source\PSoC5/ADC.c **** 
1809:.\Generated_Source\PSoC5/ADC.c **** 
1810:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1811:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1812:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1813:.\Generated_Source\PSoC5/ADC.c **** *
1814:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1815:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 68


1816:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1817:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1820:.\Generated_Source\PSoC5/ADC.c **** *
1821:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1822:.\Generated_Source\PSoC5/ADC.c **** *  None
1823:.\Generated_Source\PSoC5/ADC.c **** *
1824:.\Generated_Source\PSoC5/ADC.c **** * Return:
1825:.\Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1826:.\Generated_Source\PSoC5/ADC.c **** *
1827:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1828:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1829:.\Generated_Source\PSoC5/ADC.c **** {
 1790              		.loc 1 1829 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
 1794 0000 10B5     		push	{r4, lr}
 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 4, -8
 1797              		.cfi_offset 14, -4
1830:.\Generated_Source\PSoC5/ADC.c ****     int32 result;
1831:.\Generated_Source\PSoC5/ADC.c ****     
1832:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1833:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1798              		.loc 1 1833 0
 1799 0002 084A     		ldr	r2, .L130
 1800 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1801 0006 43F00403 		orr	r3, r3, #4
 1802 000a 1370     		strb	r3, [r2]
1834:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1803              		.loc 1 1834 0
 1804 000c FFF7FEFF 		bl	ADC_StartConvert
 1805              	.LVL162:
1835:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1806              		.loc 1 1835 0
 1807 0010 0020     		movs	r0, #0
 1808 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1809              	.LVL163:
1836:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 1810              		.loc 1 1836 0
 1811 0016 FFF7FEFF 		bl	ADC_GetResult32
 1812              	.LVL164:
 1813 001a 0446     		mov	r4, r0
 1814              	.LVL165:
1837:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1815              		.loc 1 1837 0
 1816 001c FFF7FEFF 		bl	ADC_StopConvert
 1817              	.LVL166:
1838:.\Generated_Source\PSoC5/ADC.c ****     
1839:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1840:.\Generated_Source\PSoC5/ADC.c **** }
 1818              		.loc 1 1840 0
 1819 0020 2046     		mov	r0, r4
 1820 0022 10BD     		pop	{r4, pc}
 1821              	.LVL167:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 69


 1822              	.L131:
 1823              		.align	2
 1824              	.L130:
 1825 0024 014E0040 		.word	1073761793
 1826              		.cfi_endproc
 1827              	.LFE25:
 1828              		.size	ADC_Read32, .-ADC_Read32
 1829              		.comm	ADC_CountsPerVolt,4,4
 1830              		.comm	ADC_Offset,4,4
 1831              		.global	ADC_Config
 1832              		.global	ADC_started
 1833              		.global	ADC_initVar
 1834              		.global	ADC_stopConversion
 1835              		.global	ADC_convDone
 1836              		.data
 1837              		.set	.LANCHOR1,. + 0
 1838              		.type	ADC_Config, %object
 1839              		.size	ADC_Config, 1
 1840              	ADC_Config:
 1841 0000 01       		.byte	1
 1842              		.bss
 1843              		.align	2
 1844              		.set	.LANCHOR0,. + 0
 1845              		.type	ADC_gcor, %object
 1846              		.size	ADC_gcor, 4
 1847              	ADC_gcor:
 1848 0000 00000000 		.space	4
 1849              		.type	ADC_stopConversion, %object
 1850              		.size	ADC_stopConversion, 1
 1851              	ADC_stopConversion:
 1852 0004 00       		.space	1
 1853              		.type	ADC_convDone, %object
 1854              		.size	ADC_convDone, 1
 1855              	ADC_convDone:
 1856 0005 00       		.space	1
 1857              		.type	ADC_initVar, %object
 1858              		.size	ADC_initVar, 1
 1859              	ADC_initVar:
 1860 0006 00       		.space	1
 1861              		.type	ADC_started, %object
 1862              		.size	ADC_started, 1
 1863              	ADC_started:
 1864 0007 00       		.space	1
 1865              		.text
 1866              	.Letext0:
 1867              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1868              		.file 3 ".\\Generated_Source\\PSoC5\\ADC.h"
 1869              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1870              		.file 5 ".\\Generated_Source\\PSoC5\\ADC_AMux.h"
 1871              		.file 6 ".\\Generated_Source\\PSoC5\\ADC_Ext_CP_Clk.h"
 1872              		.file 7 ".\\Generated_Source\\PSoC5\\ADC_theACLK.h"
 1873              		.section	.debug_info,"",%progbits
 1874              	.Ldebug_info0:
 1875 0000 670A0000 		.4byte	0xa67
 1876 0004 0400     		.2byte	0x4
 1877 0006 00000000 		.4byte	.Ldebug_abbrev0
 1878 000a 04       		.byte	0x4
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 70


 1879 000b 01       		.uleb128 0x1
 1880 000c FD040000 		.4byte	.LASF98
 1881 0010 01       		.byte	0x1
 1882 0011 F1000000 		.4byte	.LASF99
 1883 0015 84040000 		.4byte	.LASF100
 1884 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1885 001d 00000000 		.4byte	0
 1886 0021 00000000 		.4byte	.Ldebug_line0
 1887 0025 02       		.uleb128 0x2
 1888 0026 04       		.byte	0x4
 1889 0027 04       		.byte	0x4
 1890 0028 29030000 		.4byte	.LASF0
 1891 002c 02       		.uleb128 0x2
 1892 002d 01       		.byte	0x1
 1893 002e 06       		.byte	0x6
 1894 002f CC000000 		.4byte	.LASF1
 1895 0033 02       		.uleb128 0x2
 1896 0034 01       		.byte	0x1
 1897 0035 08       		.byte	0x8
 1898 0036 67030000 		.4byte	.LASF2
 1899 003a 02       		.uleb128 0x2
 1900 003b 02       		.byte	0x2
 1901 003c 05       		.byte	0x5
 1902 003d 8D030000 		.4byte	.LASF3
 1903 0041 02       		.uleb128 0x2
 1904 0042 02       		.byte	0x2
 1905 0043 07       		.byte	0x7
 1906 0044 36020000 		.4byte	.LASF4
 1907 0048 02       		.uleb128 0x2
 1908 0049 04       		.byte	0x4
 1909 004a 05       		.byte	0x5
 1910 004b 2D010000 		.4byte	.LASF5
 1911 004f 02       		.uleb128 0x2
 1912 0050 04       		.byte	0x4
 1913 0051 07       		.byte	0x7
 1914 0052 F2010000 		.4byte	.LASF6
 1915 0056 02       		.uleb128 0x2
 1916 0057 08       		.byte	0x8
 1917 0058 05       		.byte	0x5
 1918 0059 BE000000 		.4byte	.LASF7
 1919 005d 02       		.uleb128 0x2
 1920 005e 08       		.byte	0x8
 1921 005f 07       		.byte	0x7
 1922 0060 7B000000 		.4byte	.LASF8
 1923 0064 03       		.uleb128 0x3
 1924 0065 04       		.byte	0x4
 1925 0066 05       		.byte	0x5
 1926 0067 696E7400 		.ascii	"int\000"
 1927 006b 02       		.uleb128 0x2
 1928 006c 04       		.byte	0x4
 1929 006d 07       		.byte	0x7
 1930 006e DE010000 		.4byte	.LASF9
 1931 0072 04       		.uleb128 0x4
 1932 0073 50010000 		.4byte	.LASF10
 1933 0077 02       		.byte	0x2
 1934 0078 5B       		.byte	0x5b
 1935 0079 33000000 		.4byte	0x33
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 71


 1936 007d 04       		.uleb128 0x4
 1937 007e 00000000 		.4byte	.LASF11
 1938 0082 02       		.byte	0x2
 1939 0083 5C       		.byte	0x5c
 1940 0084 41000000 		.4byte	0x41
 1941 0088 04       		.uleb128 0x4
 1942 0089 7D010000 		.4byte	.LASF12
 1943 008d 02       		.byte	0x2
 1944 008e 5D       		.byte	0x5d
 1945 008f 4F000000 		.4byte	0x4f
 1946 0093 04       		.uleb128 0x4
 1947 0094 49020000 		.4byte	.LASF13
 1948 0098 02       		.byte	0x2
 1949 0099 5E       		.byte	0x5e
 1950 009a 2C000000 		.4byte	0x2c
 1951 009e 04       		.uleb128 0x4
 1952 009f A3050000 		.4byte	.LASF14
 1953 00a3 02       		.byte	0x2
 1954 00a4 5F       		.byte	0x5f
 1955 00a5 3A000000 		.4byte	0x3a
 1956 00a9 04       		.uleb128 0x4
 1957 00aa 10010000 		.4byte	.LASF15
 1958 00ae 02       		.byte	0x2
 1959 00af 60       		.byte	0x60
 1960 00b0 48000000 		.4byte	0x48
 1961 00b4 04       		.uleb128 0x4
 1962 00b5 89020000 		.4byte	.LASF16
 1963 00b9 02       		.byte	0x2
 1964 00ba 61       		.byte	0x61
 1965 00bb 25000000 		.4byte	0x25
 1966 00bf 02       		.uleb128 0x2
 1967 00c0 08       		.byte	0x8
 1968 00c1 04       		.byte	0x4
 1969 00c2 60010000 		.4byte	.LASF17
 1970 00c6 02       		.uleb128 0x2
 1971 00c7 01       		.byte	0x1
 1972 00c8 08       		.byte	0x8
 1973 00c9 22040000 		.4byte	.LASF18
 1974 00cd 04       		.uleb128 0x4
 1975 00ce 43030000 		.4byte	.LASF19
 1976 00d2 02       		.byte	0x2
 1977 00d3 F0       		.byte	0xf0
 1978 00d4 D8000000 		.4byte	0xd8
 1979 00d8 05       		.uleb128 0x5
 1980 00d9 72000000 		.4byte	0x72
 1981 00dd 04       		.uleb128 0x4
 1982 00de 4A010000 		.4byte	.LASF20
 1983 00e2 02       		.byte	0x2
 1984 00e3 F1       		.byte	0xf1
 1985 00e4 E8000000 		.4byte	0xe8
 1986 00e8 05       		.uleb128 0x5
 1987 00e9 7D000000 		.4byte	0x7d
 1988 00ed 04       		.uleb128 0x4
 1989 00ee 83020000 		.4byte	.LASF21
 1990 00f2 02       		.byte	0x2
 1991 00f3 F2       		.byte	0xf2
 1992 00f4 F8000000 		.4byte	0xf8
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 72


 1993 00f8 05       		.uleb128 0x5
 1994 00f9 88000000 		.4byte	0x88
 1995 00fd 06       		.uleb128 0x6
 1996 00fe 2E040000 		.4byte	.LASF22
 1997 0102 02       		.byte	0x2
 1998 0103 0201     		.2byte	0x102
 1999 0105 09010000 		.4byte	0x109
 2000 0109 07       		.uleb128 0x7
 2001 010a 04       		.byte	0x4
 2002 010b 0F010000 		.4byte	0x10f
 2003 010f 08       		.uleb128 0x8
 2004 0110 02       		.uleb128 0x2
 2005 0111 04       		.byte	0x4
 2006 0112 07       		.byte	0x7
 2007 0113 91020000 		.4byte	.LASF23
 2008 0117 09       		.uleb128 0x9
 2009 0118 04       		.byte	0x4
 2010 0119 03       		.byte	0x3
 2011 011a 2F       		.byte	0x2f
 2012 011b 38010000 		.4byte	0x138
 2013 011f 0A       		.uleb128 0xa
 2014 0120 6D000000 		.4byte	.LASF24
 2015 0124 03       		.byte	0x3
 2016 0125 31       		.byte	0x31
 2017 0126 7D000000 		.4byte	0x7d
 2018 012a 00       		.byte	0
 2019 012b 0A       		.uleb128 0xa
 2020 012c 42040000 		.4byte	.LASF25
 2021 0130 03       		.byte	0x3
 2022 0131 32       		.byte	0x32
 2023 0132 72000000 		.4byte	0x72
 2024 0136 02       		.byte	0x2
 2025 0137 00       		.byte	0
 2026 0138 04       		.uleb128 0x4
 2027 0139 1B020000 		.4byte	.LASF26
 2028 013d 03       		.byte	0x3
 2029 013e 33       		.byte	0x33
 2030 013f 17010000 		.4byte	0x117
 2031 0143 0B       		.uleb128 0xb
 2032 0144 68020000 		.4byte	.LASF36
 2033 0148 01       		.byte	0x1
 2034 0149 5106     		.2byte	0x651
 2035 014b 00000000 		.4byte	.LFB21
 2036 014f CC000000 		.4byte	.LFE21-.LFB21
 2037 0153 01       		.uleb128 0x1
 2038 0154 9C       		.byte	0x9c
 2039 0155 F9010000 		.4byte	0x1f9
 2040 0159 0C       		.uleb128 0xc
 2041 015a 25000000 		.4byte	.LASF27
 2042 015e 01       		.byte	0x1
 2043 015f 5106     		.2byte	0x651
 2044 0161 72000000 		.4byte	0x72
 2045 0165 00000000 		.4byte	.LLST0
 2046 0169 0C       		.uleb128 0xc
 2047 016a 48030000 		.4byte	.LASF28
 2048 016e 01       		.byte	0x1
 2049 016f 5106     		.2byte	0x651
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 73


 2050 0171 7D000000 		.4byte	0x7d
 2051 0175 3A000000 		.4byte	.LLST1
 2052 0179 0C       		.uleb128 0xc
 2053 017a AE000000 		.4byte	.LASF29
 2054 017e 01       		.byte	0x1
 2055 017f 5106     		.2byte	0x651
 2056 0181 7D000000 		.4byte	0x7d
 2057 0185 74000000 		.4byte	.LLST2
 2058 0189 0C       		.uleb128 0xc
 2059 018a DE030000 		.4byte	.LASF30
 2060 018e 01       		.byte	0x1
 2061 018f 5206     		.2byte	0x652
 2062 0191 72000000 		.4byte	0x72
 2063 0195 AE000000 		.4byte	.LLST3
 2064 0199 0C       		.uleb128 0xc
 2065 019a 3B040000 		.4byte	.LASF31
 2066 019e 01       		.byte	0x1
 2067 019f 5206     		.2byte	0x652
 2068 01a1 72000000 		.4byte	0x72
 2069 01a5 01010000 		.4byte	.LLST4
 2070 01a9 0D       		.uleb128 0xd
 2071 01aa 7D020000 		.4byte	.LASF32
 2072 01ae 01       		.byte	0x1
 2073 01af 5406     		.2byte	0x654
 2074 01b1 93000000 		.4byte	0x93
 2075 01b5 2D010000 		.4byte	.LLST5
 2076 01b9 0D       		.uleb128 0xd
 2077 01ba 55030000 		.4byte	.LASF33
 2078 01be 01       		.byte	0x1
 2079 01bf 5506     		.2byte	0x655
 2080 01c1 A9000000 		.4byte	0xa9
 2081 01c5 98010000 		.4byte	.LLST6
 2082 01c9 0D       		.uleb128 0xd
 2083 01ca 5E020000 		.4byte	.LASF34
 2084 01ce 01       		.byte	0x1
 2085 01cf 5606     		.2byte	0x656
 2086 01d1 7D000000 		.4byte	0x7d
 2087 01d5 AB010000 		.4byte	.LLST7
 2088 01d9 0D       		.uleb128 0xd
 2089 01da A0030000 		.4byte	.LASF35
 2090 01de 01       		.byte	0x1
 2091 01df 5706     		.2byte	0x657
 2092 01e1 88000000 		.4byte	0x88
 2093 01e5 D4010000 		.4byte	.LLST8
 2094 01e9 0E       		.uleb128 0xe
 2095 01ea A6000000 		.4byte	.LVL31
 2096 01ee A1090000 		.4byte	0x9a1
 2097 01f2 0F       		.uleb128 0xf
 2098 01f3 01       		.uleb128 0x1
 2099 01f4 50       		.byte	0x50
 2100 01f5 01       		.uleb128 0x1
 2101 01f6 30       		.byte	0x30
 2102 01f7 00       		.byte	0
 2103 01f8 00       		.byte	0
 2104 01f9 0B       		.uleb128 0xb
 2105 01fa 9F010000 		.4byte	.LASF37
 2106 01fe 01       		.byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 74


 2107 01ff BC06     		.2byte	0x6bc
 2108 0201 00000000 		.4byte	.LFB22
 2109 0205 4C000000 		.4byte	.LFE22-.LFB22
 2110 0209 01       		.uleb128 0x1
 2111 020a 9C       		.byte	0x9c
 2112 020b 5C020000 		.4byte	0x25c
 2113 020f 0C       		.uleb128 0xc
 2114 0210 B1010000 		.4byte	.LASF38
 2115 0214 01       		.byte	0x1
 2116 0215 BC06     		.2byte	0x6bc
 2117 0217 72000000 		.4byte	0x72
 2118 021b E7010000 		.4byte	.LLST9
 2119 021f 0D       		.uleb128 0xd
 2120 0220 E1040000 		.4byte	.LASF39
 2121 0224 01       		.byte	0x1
 2122 0225 BE06     		.2byte	0x6be
 2123 0227 72000000 		.4byte	0x72
 2124 022b 08020000 		.4byte	.LLST10
 2125 022f 10       		.uleb128 0x10
 2126 0230 08000000 		.4byte	.LVL34
 2127 0234 B2090000 		.4byte	0x9b2
 2128 0238 11       		.uleb128 0x11
 2129 0239 28000000 		.4byte	.LVL36
 2130 023d BD090000 		.4byte	0x9bd
 2131 0241 4B020000 		.4byte	0x24b
 2132 0245 0F       		.uleb128 0xf
 2133 0246 01       		.uleb128 0x1
 2134 0247 50       		.byte	0x50
 2135 0248 01       		.uleb128 0x1
 2136 0249 33       		.byte	0x33
 2137 024a 00       		.byte	0
 2138 024b 0E       		.uleb128 0xe
 2139 024c 3E000000 		.4byte	.LVL37
 2140 0250 CE090000 		.4byte	0x9ce
 2141 0254 0F       		.uleb128 0xf
 2142 0255 01       		.uleb128 0x1
 2143 0256 50       		.byte	0x50
 2144 0257 02       		.uleb128 0x2
 2145 0258 76       		.byte	0x76
 2146 0259 00       		.sleb128 0
 2147 025a 00       		.byte	0
 2148 025b 00       		.byte	0
 2149 025c 0B       		.uleb128 0xb
 2150 025d C3020000 		.4byte	.LASF40
 2151 0261 01       		.byte	0x1
 2152 0262 DA04     		.2byte	0x4da
 2153 0264 00000000 		.4byte	.LFB19
 2154 0268 E0000000 		.4byte	.LFE19-.LFB19
 2155 026c 01       		.uleb128 0x1
 2156 026d 9C       		.byte	0x9c
 2157 026e EE020000 		.4byte	0x2ee
 2158 0272 0C       		.uleb128 0xc
 2159 0273 3B040000 		.4byte	.LASF31
 2160 0277 01       		.byte	0x1
 2161 0278 DA04     		.2byte	0x4da
 2162 027a 72000000 		.4byte	0x72
 2163 027e 1B020000 		.4byte	.LLST11
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 75


 2164 0282 11       		.uleb128 0x11
 2165 0283 86000000 		.4byte	.LVL41
 2166 0287 F9010000 		.4byte	0x1f9
 2167 028b 96020000 		.4byte	0x296
 2168 028f 0F       		.uleb128 0xf
 2169 0290 01       		.uleb128 0x1
 2170 0291 50       		.byte	0x50
 2171 0292 02       		.uleb128 0x2
 2172 0293 08       		.byte	0x8
 2173 0294 52       		.byte	0x52
 2174 0295 00       		.byte	0
 2175 0296 11       		.uleb128 0x11
 2176 0297 A8000000 		.4byte	.LVL42
 2177 029b DF090000 		.4byte	0x9df
 2178 029f AA020000 		.4byte	0x2aa
 2179 02a3 0F       		.uleb128 0xf
 2180 02a4 01       		.uleb128 0x1
 2181 02a5 50       		.byte	0x50
 2182 02a6 02       		.uleb128 0x2
 2183 02a7 74       		.byte	0x74
 2184 02a8 00       		.sleb128 0
 2185 02a9 00       		.byte	0
 2186 02aa 11       		.uleb128 0x11
 2187 02ab B8000000 		.4byte	.LVL43
 2188 02af F0090000 		.4byte	0x9f0
 2189 02b3 C4020000 		.4byte	0x2c4
 2190 02b7 0F       		.uleb128 0xf
 2191 02b8 01       		.uleb128 0x1
 2192 02b9 51       		.byte	0x51
 2193 02ba 02       		.uleb128 0x2
 2194 02bb 75       		.byte	0x75
 2195 02bc 00       		.sleb128 0
 2196 02bd 0F       		.uleb128 0xf
 2197 02be 01       		.uleb128 0x1
 2198 02bf 50       		.byte	0x50
 2199 02c0 02       		.uleb128 0x2
 2200 02c1 75       		.byte	0x75
 2201 02c2 00       		.sleb128 0
 2202 02c3 00       		.byte	0
 2203 02c4 11       		.uleb128 0x11
 2204 02c5 C0000000 		.4byte	.LVL44
 2205 02c9 060A0000 		.4byte	0xa06
 2206 02cd DE020000 		.4byte	0x2de
 2207 02d1 0F       		.uleb128 0xf
 2208 02d2 01       		.uleb128 0x1
 2209 02d3 51       		.byte	0x51
 2210 02d4 02       		.uleb128 0x2
 2211 02d5 75       		.byte	0x75
 2212 02d6 00       		.sleb128 0
 2213 02d7 0F       		.uleb128 0xf
 2214 02d8 01       		.uleb128 0x1
 2215 02d9 50       		.byte	0x50
 2216 02da 02       		.uleb128 0x2
 2217 02db 76       		.byte	0x76
 2218 02dc 00       		.sleb128 0
 2219 02dd 00       		.byte	0
 2220 02de 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 76


 2221 02df C8000000 		.4byte	.LVL45
 2222 02e3 1C0A0000 		.4byte	0xa1c
 2223 02e7 0F       		.uleb128 0xf
 2224 02e8 01       		.uleb128 0x1
 2225 02e9 50       		.byte	0x50
 2226 02ea 01       		.uleb128 0x1
 2227 02eb 4D       		.byte	0x4d
 2228 02ec 00       		.byte	0
 2229 02ed 00       		.byte	0
 2230 02ee 12       		.uleb128 0x12
 2231 02ef 72000000 		.4byte	.LASF41
 2232 02f3 01       		.byte	0x1
 2233 02f4 5B       		.byte	0x5b
 2234 02f5 00000000 		.4byte	.LFB0
 2235 02f9 C4000000 		.4byte	.LFE0-.LFB0
 2236 02fd 01       		.uleb128 0x1
 2237 02fe 9C       		.byte	0x9c
 2238 02ff 78030000 		.4byte	0x378
 2239 0303 11       		.uleb128 0x11
 2240 0304 16000000 		.4byte	.LVL46
 2241 0308 360A0000 		.4byte	0xa36
 2242 030c 16030000 		.4byte	0x316
 2243 0310 0F       		.uleb128 0xf
 2244 0311 01       		.uleb128 0x1
 2245 0312 50       		.byte	0x50
 2246 0313 01       		.uleb128 0x1
 2247 0314 40       		.byte	0x40
 2248 0315 00       		.byte	0
 2249 0316 11       		.uleb128 0x11
 2250 0317 1C000000 		.4byte	.LVL47
 2251 031b 470A0000 		.4byte	0xa47
 2252 031f 29030000 		.4byte	0x329
 2253 0323 0F       		.uleb128 0xf
 2254 0324 01       		.uleb128 0x1
 2255 0325 50       		.byte	0x50
 2256 0326 01       		.uleb128 0x1
 2257 0327 40       		.byte	0x40
 2258 0328 00       		.byte	0
 2259 0329 11       		.uleb128 0x11
 2260 032a 24000000 		.4byte	.LVL48
 2261 032e 580A0000 		.4byte	0xa58
 2262 0332 41030000 		.4byte	0x341
 2263 0336 0F       		.uleb128 0xf
 2264 0337 01       		.uleb128 0x1
 2265 0338 51       		.byte	0x51
 2266 0339 01       		.uleb128 0x1
 2267 033a 37       		.byte	0x37
 2268 033b 0F       		.uleb128 0xf
 2269 033c 01       		.uleb128 0x1
 2270 033d 50       		.byte	0x50
 2271 033e 01       		.uleb128 0x1
 2272 033f 4D       		.byte	0x4d
 2273 0340 00       		.byte	0
 2274 0341 11       		.uleb128 0x11
 2275 0342 84000000 		.4byte	.LVL49
 2276 0346 43010000 		.4byte	0x143
 2277 034a 6E030000 		.4byte	0x36e
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 77


 2278 034e 0F       		.uleb128 0xf
 2279 034f 01       		.uleb128 0x1
 2280 0350 53       		.byte	0x53
 2281 0351 01       		.uleb128 0x1
 2282 0352 40       		.byte	0x40
 2283 0353 0F       		.uleb128 0xf
 2284 0354 01       		.uleb128 0x1
 2285 0355 52       		.byte	0x52
 2286 0356 03       		.uleb128 0x3
 2287 0357 0B       		.byte	0xb
 2288 0358 0080     		.2byte	0x8000
 2289 035a 0F       		.uleb128 0xf
 2290 035b 01       		.uleb128 0x1
 2291 035c 51       		.byte	0x51
 2292 035d 03       		.uleb128 0x3
 2293 035e 0A       		.byte	0xa
 2294 035f 027F     		.2byte	0x7f02
 2295 0361 0F       		.uleb128 0xf
 2296 0362 01       		.uleb128 0x1
 2297 0363 50       		.byte	0x50
 2298 0364 01       		.uleb128 0x1
 2299 0365 33       		.byte	0x33
 2300 0366 0F       		.uleb128 0xf
 2301 0367 02       		.uleb128 0x2
 2302 0368 7D       		.byte	0x7d
 2303 0369 00       		.sleb128 0
 2304 036a 02       		.uleb128 0x2
 2305 036b 77       		.byte	0x77
 2306 036c 00       		.sleb128 0
 2307 036d 00       		.byte	0
 2308 036e 10       		.uleb128 0x10
 2309 036f A4000000 		.4byte	.LVL50
 2310 0373 5C020000 		.4byte	0x25c
 2311 0377 00       		.byte	0
 2312 0378 12       		.uleb128 0x12
 2313 0379 F2040000 		.4byte	.LASF42
 2314 037d 01       		.byte	0x1
 2315 037e B8       		.byte	0xb8
 2316 037f 00000000 		.4byte	.LFB1
 2317 0383 D8000000 		.4byte	.LFE1-.LFB1
 2318 0387 01       		.uleb128 0x1
 2319 0388 9C       		.byte	0x9c
 2320 0389 D4030000 		.4byte	0x3d4
 2321 038d 13       		.uleb128 0x13
 2322 038e 3B040000 		.4byte	.LASF31
 2323 0392 01       		.byte	0x1
 2324 0393 BA       		.byte	0xba
 2325 0394 72000000 		.4byte	0x72
 2326 0398 14       		.uleb128 0x14
 2327 0399 E1040000 		.4byte	.LASF39
 2328 039d 01       		.byte	0x1
 2329 039e BB       		.byte	0xbb
 2330 039f 72000000 		.4byte	0x72
 2331 03a3 3C020000 		.4byte	.LLST12
 2332 03a7 10       		.uleb128 0x10
 2333 03a8 06000000 		.4byte	.LVL51
 2334 03ac B2090000 		.4byte	0x9b2
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 78


 2335 03b0 11       		.uleb128 0x11
 2336 03b1 54000000 		.4byte	.LVL54
 2337 03b5 BD090000 		.4byte	0x9bd
 2338 03b9 C3030000 		.4byte	0x3c3
 2339 03bd 0F       		.uleb128 0xf
 2340 03be 01       		.uleb128 0x1
 2341 03bf 50       		.byte	0x50
 2342 03c0 01       		.uleb128 0x1
 2343 03c1 33       		.byte	0x33
 2344 03c2 00       		.byte	0
 2345 03c3 0E       		.uleb128 0xe
 2346 03c4 B0000000 		.4byte	.LVL55
 2347 03c8 CE090000 		.4byte	0x9ce
 2348 03cc 0F       		.uleb128 0xf
 2349 03cd 01       		.uleb128 0x1
 2350 03ce 50       		.byte	0x50
 2351 03cf 02       		.uleb128 0x2
 2352 03d0 76       		.byte	0x76
 2353 03d1 00       		.sleb128 0
 2354 03d2 00       		.byte	0
 2355 03d3 00       		.byte	0
 2356 03d4 15       		.uleb128 0x15
 2357 03d5 16010000 		.4byte	.LASF43
 2358 03d9 01       		.byte	0x1
 2359 03da 4901     		.2byte	0x149
 2360 03dc 00000000 		.4byte	.LFB2
 2361 03e0 28000000 		.4byte	.LFE2-.LFB2
 2362 03e4 01       		.uleb128 0x1
 2363 03e5 9C       		.byte	0x9c
 2364 03e6 FD030000 		.4byte	0x3fd
 2365 03ea 10       		.uleb128 0x10
 2366 03eb 16000000 		.4byte	.LVL57
 2367 03ef EE020000 		.4byte	0x2ee
 2368 03f3 10       		.uleb128 0x10
 2369 03f4 20000000 		.4byte	.LVL58
 2370 03f8 78030000 		.4byte	0x378
 2371 03fc 00       		.byte	0
 2372 03fd 15       		.uleb128 0x15
 2373 03fe 97030000 		.4byte	.LASF44
 2374 0402 01       		.byte	0x1
 2375 0403 6A01     		.2byte	0x16a
 2376 0405 00000000 		.4byte	.LFB3
 2377 0409 E4000000 		.4byte	.LFE3-.LFB3
 2378 040d 01       		.uleb128 0x1
 2379 040e 9C       		.byte	0x9c
 2380 040f 50040000 		.4byte	0x450
 2381 0413 0D       		.uleb128 0xd
 2382 0414 E1040000 		.4byte	.LASF39
 2383 0418 01       		.byte	0x1
 2384 0419 6C01     		.2byte	0x16c
 2385 041b 72000000 		.4byte	0x72
 2386 041f 4F020000 		.4byte	.LLST13
 2387 0423 10       		.uleb128 0x10
 2388 0424 06000000 		.4byte	.LVL59
 2389 0428 B2090000 		.4byte	0x9b2
 2390 042c 11       		.uleb128 0x11
 2391 042d 4C000000 		.4byte	.LVL61
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 79


 2392 0431 BD090000 		.4byte	0x9bd
 2393 0435 3F040000 		.4byte	0x43f
 2394 0439 0F       		.uleb128 0xf
 2395 043a 01       		.uleb128 0x1
 2396 043b 50       		.byte	0x50
 2397 043c 01       		.uleb128 0x1
 2398 043d 33       		.byte	0x33
 2399 043e 00       		.byte	0
 2400 043f 0E       		.uleb128 0xe
 2401 0440 CC000000 		.4byte	.LVL62
 2402 0444 CE090000 		.4byte	0x9ce
 2403 0448 0F       		.uleb128 0xf
 2404 0449 01       		.uleb128 0x1
 2405 044a 50       		.byte	0x50
 2406 044b 02       		.uleb128 0x2
 2407 044c 76       		.byte	0x76
 2408 044d 00       		.sleb128 0
 2409 044e 00       		.byte	0
 2410 044f 00       		.byte	0
 2411 0450 15       		.uleb128 0x15
 2412 0451 DF000000 		.4byte	.LASF45
 2413 0455 01       		.byte	0x1
 2414 0456 AD01     		.2byte	0x1ad
 2415 0458 00000000 		.4byte	.LFB4
 2416 045c 18000000 		.4byte	.LFE4-.LFB4
 2417 0460 01       		.uleb128 0x1
 2418 0461 9C       		.byte	0x9c
 2419 0462 87040000 		.4byte	0x487
 2420 0466 0C       		.uleb128 0xc
 2421 0467 18030000 		.4byte	.LASF46
 2422 046b 01       		.byte	0x1
 2423 046c AD01     		.2byte	0x1ad
 2424 046e 72000000 		.4byte	0x72
 2425 0472 62020000 		.4byte	.LLST14
 2426 0476 0D       		.uleb128 0xd
 2427 0477 C9050000 		.4byte	.LASF47
 2428 047b 01       		.byte	0x1
 2429 047c AF01     		.2byte	0x1af
 2430 047e 72000000 		.4byte	0x72
 2431 0482 83020000 		.4byte	.LLST15
 2432 0486 00       		.byte	0
 2433 0487 15       		.uleb128 0x15
 2434 0488 5F040000 		.4byte	.LASF48
 2435 048c 01       		.byte	0x1
 2436 048d D101     		.2byte	0x1d1
 2437 048f 00000000 		.4byte	.LFB5
 2438 0493 18000000 		.4byte	.LFE5-.LFB5
 2439 0497 01       		.uleb128 0x1
 2440 0498 9C       		.byte	0x9c
 2441 0499 BE040000 		.4byte	0x4be
 2442 049d 0C       		.uleb128 0xc
 2443 049e FD020000 		.4byte	.LASF49
 2444 04a2 01       		.byte	0x1
 2445 04a3 D101     		.2byte	0x1d1
 2446 04a5 72000000 		.4byte	0x72
 2447 04a9 A1020000 		.4byte	.LLST16
 2448 04ad 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 80


 2449 04ae C9050000 		.4byte	.LASF47
 2450 04b2 01       		.byte	0x1
 2451 04b3 D301     		.2byte	0x1d3
 2452 04b5 72000000 		.4byte	0x72
 2453 04b9 C2020000 		.4byte	.LLST17
 2454 04bd 00       		.byte	0
 2455 04be 16       		.uleb128 0x16
 2456 04bf 9A020000 		.4byte	.LASF53
 2457 04c3 01       		.byte	0x1
 2458 04c4 F901     		.2byte	0x1f9
 2459 04c6 72000000 		.4byte	0x72
 2460 04ca 00000000 		.4byte	.LFB6
 2461 04ce 74000000 		.4byte	.LFE6-.LFB6
 2462 04d2 01       		.uleb128 0x1
 2463 04d3 9C       		.byte	0x9c
 2464 04d4 19050000 		.4byte	0x519
 2465 04d8 0C       		.uleb128 0xc
 2466 04d9 98050000 		.4byte	.LASF50
 2467 04dd 01       		.byte	0x1
 2468 04de F901     		.2byte	0x1f9
 2469 04e0 B4000000 		.4byte	0xb4
 2470 04e4 E0020000 		.4byte	.LLST18
 2471 04e8 0D       		.uleb128 0xd
 2472 04e9 C9050000 		.4byte	.LASF47
 2473 04ed 01       		.byte	0x1
 2474 04ee FB01     		.2byte	0x1fb
 2475 04f0 7D000000 		.4byte	0x7d
 2476 04f4 0E030000 		.4byte	.LLST19
 2477 04f8 0D       		.uleb128 0xd
 2478 04f9 D8000000 		.4byte	.LASF51
 2479 04fd 01       		.byte	0x1
 2480 04fe FC01     		.2byte	0x1fc
 2481 0500 72000000 		.4byte	0x72
 2482 0504 46030000 		.4byte	.LLST20
 2483 0508 0D       		.uleb128 0xd
 2484 0509 4F040000 		.4byte	.LASF52
 2485 050d 01       		.byte	0x1
 2486 050e FD01     		.2byte	0x1fd
 2487 0510 B4000000 		.4byte	0xb4
 2488 0514 65030000 		.4byte	.LLST21
 2489 0518 00       		.byte	0
 2490 0519 17       		.uleb128 0x17
 2491 051a 8B050000 		.4byte	.LASF54
 2492 051e 01       		.byte	0x1
 2493 051f 2802     		.2byte	0x228
 2494 0521 7D000000 		.4byte	0x7d
 2495 0525 00000000 		.4byte	.LFB7
 2496 0529 24000000 		.4byte	.LFE7-.LFB7
 2497 052d 01       		.uleb128 0x1
 2498 052e 9C       		.byte	0x9c
 2499 052f 54050000 		.4byte	0x554
 2500 0533 0D       		.uleb128 0xd
 2501 0534 27040000 		.4byte	.LASF55
 2502 0538 01       		.byte	0x1
 2503 0539 2A02     		.2byte	0x22a
 2504 053b 72000000 		.4byte	0x72
 2505 053f A4030000 		.4byte	.LLST22
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 81


 2506 0543 0D       		.uleb128 0xd
 2507 0544 5E020000 		.4byte	.LASF34
 2508 0548 01       		.byte	0x1
 2509 0549 2B02     		.2byte	0x22b
 2510 054b 7D000000 		.4byte	0x7d
 2511 054f B7030000 		.4byte	.LLST23
 2512 0553 00       		.byte	0
 2513 0554 18       		.uleb128 0x18
 2514 0555 9D000000 		.4byte	.LASF56
 2515 0559 01       		.byte	0x1
 2516 055a 4A02     		.2byte	0x24a
 2517 055c 00000000 		.4byte	.LFB8
 2518 0560 10000000 		.4byte	.LFE8-.LFB8
 2519 0564 01       		.uleb128 0x1
 2520 0565 9C       		.byte	0x9c
 2521 0566 18       		.uleb128 0x18
 2522 0567 4E020000 		.4byte	.LASF57
 2523 056b 01       		.byte	0x1
 2524 056c 6102     		.2byte	0x261
 2525 056e 00000000 		.4byte	.LFB9
 2526 0572 10000000 		.4byte	.LFE9-.LFB9
 2527 0576 01       		.uleb128 0x1
 2528 0577 9C       		.byte	0x9c
 2529 0578 17       		.uleb128 0x17
 2530 0579 A6020000 		.4byte	.LASF58
 2531 057d 01       		.byte	0x1
 2532 057e 8402     		.2byte	0x284
 2533 0580 72000000 		.4byte	0x72
 2534 0584 00000000 		.4byte	.LFB10
 2535 0588 30000000 		.4byte	.LFE10-.LFB10
 2536 058c 01       		.uleb128 0x1
 2537 058d 9C       		.byte	0x9c
 2538 058e B3050000 		.4byte	0x5b3
 2539 0592 0C       		.uleb128 0xc
 2540 0593 B7010000 		.4byte	.LASF59
 2541 0597 01       		.byte	0x1
 2542 0598 8402     		.2byte	0x284
 2543 059a 72000000 		.4byte	0x72
 2544 059e D5030000 		.4byte	.LLST24
 2545 05a2 0D       		.uleb128 0xd
 2546 05a3 D8000000 		.4byte	.LASF51
 2547 05a7 01       		.byte	0x1
 2548 05a8 8602     		.2byte	0x286
 2549 05aa 72000000 		.4byte	0x72
 2550 05ae F6030000 		.4byte	.LLST25
 2551 05b2 00       		.byte	0
 2552 05b3 17       		.uleb128 0x17
 2553 05b4 D2020000 		.4byte	.LASF60
 2554 05b8 01       		.byte	0x1
 2555 05b9 B302     		.2byte	0x2b3
 2556 05bb 93000000 		.4byte	0x93
 2557 05bf 00000000 		.4byte	.LFB11
 2558 05c3 48000000 		.4byte	.LFE11-.LFB11
 2559 05c7 01       		.uleb128 0x1
 2560 05c8 9C       		.byte	0x9c
 2561 05c9 EC050000 		.4byte	0x5ec
 2562 05cd 19       		.uleb128 0x19
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 82


 2563 05ce D0050000 		.4byte	.LASF61
 2564 05d2 01       		.byte	0x1
 2565 05d3 B502     		.2byte	0x2b5
 2566 05d5 93000000 		.4byte	0x93
 2567 05d9 01       		.uleb128 0x1
 2568 05da 50       		.byte	0x50
 2569 05db 0D       		.uleb128 0xd
 2570 05dc FD020000 		.4byte	.LASF49
 2571 05e0 01       		.byte	0x1
 2572 05e1 B602     		.2byte	0x2b6
 2573 05e3 72000000 		.4byte	0x72
 2574 05e7 14040000 		.4byte	.LLST26
 2575 05eb 00       		.byte	0
 2576 05ec 17       		.uleb128 0x17
 2577 05ed D7050000 		.4byte	.LASF62
 2578 05f1 01       		.byte	0x1
 2579 05f2 E902     		.2byte	0x2e9
 2580 05f4 9E000000 		.4byte	0x9e
 2581 05f8 00000000 		.4byte	.LFB12
 2582 05fc 50000000 		.4byte	.LFE12-.LFB12
 2583 0600 01       		.uleb128 0x1
 2584 0601 9C       		.byte	0x9c
 2585 0602 27060000 		.4byte	0x627
 2586 0606 0D       		.uleb128 0xd
 2587 0607 D0050000 		.4byte	.LASF61
 2588 060b 01       		.byte	0x1
 2589 060c EB02     		.2byte	0x2eb
 2590 060e 7D000000 		.4byte	0x7d
 2591 0612 32040000 		.4byte	.LLST27
 2592 0616 0D       		.uleb128 0xd
 2593 0617 FD020000 		.4byte	.LASF49
 2594 061b 01       		.byte	0x1
 2595 061c EC02     		.2byte	0x2ec
 2596 061e 72000000 		.4byte	0x72
 2597 0622 5B040000 		.4byte	.LLST28
 2598 0626 00       		.byte	0
 2599 0627 17       		.uleb128 0x17
 2600 0628 67010000 		.4byte	.LASF63
 2601 062c 01       		.byte	0x1
 2602 062d 2503     		.2byte	0x325
 2603 062f A9000000 		.4byte	0xa9
 2604 0633 00000000 		.4byte	.LFB13
 2605 0637 6C000000 		.4byte	.LFE13-.LFB13
 2606 063b 01       		.uleb128 0x1
 2607 063c 9C       		.byte	0x9c
 2608 063d 62060000 		.4byte	0x662
 2609 0641 0D       		.uleb128 0xd
 2610 0642 D0050000 		.4byte	.LASF61
 2611 0646 01       		.byte	0x1
 2612 0647 2703     		.2byte	0x327
 2613 0649 88000000 		.4byte	0x88
 2614 064d 79040000 		.4byte	.LLST29
 2615 0651 0D       		.uleb128 0xd
 2616 0652 FD020000 		.4byte	.LASF49
 2617 0656 01       		.byte	0x1
 2618 0657 2803     		.2byte	0x328
 2619 0659 72000000 		.4byte	0x72
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 83


 2620 065d DA040000 		.4byte	.LLST30
 2621 0661 00       		.byte	0
 2622 0662 15       		.uleb128 0x15
 2623 0663 A9050000 		.4byte	.LASF64
 2624 0667 01       		.byte	0x1
 2625 0668 8203     		.2byte	0x382
 2626 066a 00000000 		.4byte	.LFB14
 2627 066e 0C000000 		.4byte	.LFE14-.LFB14
 2628 0672 01       		.uleb128 0x1
 2629 0673 9C       		.byte	0x9c
 2630 0674 87060000 		.4byte	0x687
 2631 0678 1A       		.uleb128 0x1a
 2632 0679 58040000 		.4byte	.LASF65
 2633 067d 01       		.byte	0x1
 2634 067e 8203     		.2byte	0x382
 2635 0680 A9000000 		.4byte	0xa9
 2636 0684 01       		.uleb128 0x1
 2637 0685 50       		.byte	0x50
 2638 0686 00       		.byte	0
 2639 0687 15       		.uleb128 0x15
 2640 0688 1D030000 		.4byte	.LASF66
 2641 068c 01       		.byte	0x1
 2642 068d A503     		.2byte	0x3a5
 2643 068f 00000000 		.4byte	.LFB15
 2644 0693 0C000000 		.4byte	.LFE15-.LFB15
 2645 0697 01       		.uleb128 0x1
 2646 0698 9C       		.byte	0x9c
 2647 0699 AC060000 		.4byte	0x6ac
 2648 069d 1A       		.uleb128 0x1a
 2649 069e 07000000 		.4byte	.LASF67
 2650 06a2 01       		.byte	0x1
 2651 06a3 A503     		.2byte	0x3a5
 2652 06a5 A9000000 		.4byte	0xa9
 2653 06a9 01       		.uleb128 0x1
 2654 06aa 50       		.byte	0x50
 2655 06ab 00       		.byte	0
 2656 06ac 17       		.uleb128 0x17
 2657 06ad 2F030000 		.4byte	.LASF68
 2658 06b1 01       		.byte	0x1
 2659 06b2 C003     		.2byte	0x3c0
 2660 06b4 9E000000 		.4byte	0x9e
 2661 06b8 00000000 		.4byte	.LFB16
 2662 06bc 24000000 		.4byte	.LFE16-.LFB16
 2663 06c0 01       		.uleb128 0x1
 2664 06c1 9C       		.byte	0x9c
 2665 06c2 E5060000 		.4byte	0x6e5
 2666 06c6 0C       		.uleb128 0xc
 2667 06c7 7A040000 		.4byte	.LASF69
 2668 06cb 01       		.byte	0x1
 2669 06cc C003     		.2byte	0x3c0
 2670 06ce A9000000 		.4byte	0xa9
 2671 06d2 03050000 		.4byte	.LLST31
 2672 06d6 19       		.uleb128 0x19
 2673 06d7 C7030000 		.4byte	.LASF70
 2674 06db 01       		.byte	0x1
 2675 06dc C303     		.2byte	0x3c3
 2676 06de 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 84


 2677 06e2 01       		.uleb128 0x1
 2678 06e3 50       		.byte	0x50
 2679 06e4 00       		.byte	0
 2680 06e5 16       		.uleb128 0x16
 2681 06e6 30000000 		.4byte	.LASF71
 2682 06ea 01       		.byte	0x1
 2683 06eb FD03     		.2byte	0x3fd
 2684 06ed B4000000 		.4byte	0xb4
 2685 06f1 00000000 		.4byte	.LFB17
 2686 06f5 28000000 		.4byte	.LFE17-.LFB17
 2687 06f9 01       		.uleb128 0x1
 2688 06fa 9C       		.byte	0x9c
 2689 06fb 1E070000 		.4byte	0x71e
 2690 06ff 0C       		.uleb128 0xc
 2691 0700 7A040000 		.4byte	.LASF69
 2692 0704 01       		.byte	0x1
 2693 0705 FD03     		.2byte	0x3fd
 2694 0707 A9000000 		.4byte	0xa9
 2695 070b 21050000 		.4byte	.LLST32
 2696 070f 19       		.uleb128 0x19
 2697 0710 77010000 		.4byte	.LASF72
 2698 0714 01       		.byte	0x1
 2699 0715 0004     		.2byte	0x400
 2700 0717 B4000000 		.4byte	0xb4
 2701 071b 01       		.uleb128 0x1
 2702 071c 50       		.byte	0x50
 2703 071d 00       		.byte	0
 2704 071e 17       		.uleb128 0x17
 2705 071f 36010000 		.4byte	.LASF73
 2706 0723 01       		.byte	0x1
 2707 0724 3F04     		.2byte	0x43f
 2708 0726 A9000000 		.4byte	0xa9
 2709 072a 00000000 		.4byte	.LFB18
 2710 072e 4C000000 		.4byte	.LFE18-.LFB18
 2711 0732 01       		.uleb128 0x1
 2712 0733 9C       		.byte	0x9c
 2713 0734 84070000 		.4byte	0x784
 2714 0738 0C       		.uleb128 0xc
 2715 0739 7A040000 		.4byte	.LASF69
 2716 073d 01       		.byte	0x1
 2717 073e 3F04     		.2byte	0x43f
 2718 0740 A9000000 		.4byte	0xa9
 2719 0744 4F050000 		.4byte	.LLST33
 2720 0748 0D       		.uleb128 0xd
 2721 0749 EB010000 		.4byte	.LASF74
 2722 074d 01       		.byte	0x1
 2723 074e 4204     		.2byte	0x442
 2724 0750 A9000000 		.4byte	0xa9
 2725 0754 70050000 		.4byte	.LLST34
 2726 0758 1B       		.uleb128 0x1b
 2727 0759 F4030000 		.4byte	.LASF75
 2728 075d 01       		.byte	0x1
 2729 075e 4304     		.2byte	0x443
 2730 0760 A9000000 		.4byte	0xa9
 2731 0764 127A     		.2byte	0x7a12
 2732 0766 0D       		.uleb128 0xd
 2733 0767 FA030000 		.4byte	.LASF76
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 85


 2734 076b 01       		.byte	0x1
 2735 076c 4404     		.2byte	0x444
 2736 076e A9000000 		.4byte	0xa9
 2737 0772 93050000 		.4byte	.LLST35
 2738 0776 1C       		.uleb128 0x1c
 2739 0777 DE030000 		.4byte	.LASF30
 2740 077b 01       		.byte	0x1
 2741 077c 4504     		.2byte	0x445
 2742 077e 72000000 		.4byte	0x72
 2743 0782 10       		.byte	0x10
 2744 0783 00       		.byte	0
 2745 0784 15       		.uleb128 0x15
 2746 0785 75030000 		.4byte	.LASF77
 2747 0789 01       		.byte	0x1
 2748 078a 1006     		.2byte	0x610
 2749 078c 00000000 		.4byte	.LFB20
 2750 0790 60000000 		.4byte	.LFE20-.LFB20
 2751 0794 01       		.uleb128 0x1
 2752 0795 9C       		.byte	0x9c
 2753 0796 F9070000 		.4byte	0x7f9
 2754 079a 0C       		.uleb128 0xc
 2755 079b 3B040000 		.4byte	.LASF31
 2756 079f 01       		.byte	0x1
 2757 07a0 1006     		.2byte	0x610
 2758 07a2 72000000 		.4byte	0x72
 2759 07a6 B3050000 		.4byte	.LLST36
 2760 07aa 0C       		.uleb128 0xc
 2761 07ab 47040000 		.4byte	.LASF78
 2762 07af 01       		.byte	0x1
 2763 07b0 1006     		.2byte	0x610
 2764 07b2 72000000 		.4byte	0x72
 2765 07b6 ED050000 		.4byte	.LLST37
 2766 07ba 10       		.uleb128 0x10
 2767 07bb 1E000000 		.4byte	.LVL143
 2768 07bf FD030000 		.4byte	0x3fd
 2769 07c3 11       		.uleb128 0x11
 2770 07c4 24000000 		.4byte	.LVL144
 2771 07c8 5C020000 		.4byte	0x25c
 2772 07cc D7070000 		.4byte	0x7d7
 2773 07d0 0F       		.uleb128 0xf
 2774 07d1 01       		.uleb128 0x1
 2775 07d2 50       		.byte	0x50
 2776 07d3 02       		.uleb128 0x2
 2777 07d4 74       		.byte	0x74
 2778 07d5 00       		.sleb128 0
 2779 07d6 00       		.byte	0
 2780 07d7 10       		.uleb128 0x10
 2781 07d8 42000000 		.4byte	.LVL145
 2782 07dc D4030000 		.4byte	0x3d4
 2783 07e0 10       		.uleb128 0x10
 2784 07e1 46000000 		.4byte	.LVL146
 2785 07e5 54050000 		.4byte	0x554
 2786 07e9 0E       		.uleb128 0xe
 2787 07ea 4E000000 		.4byte	.LVL149
 2788 07ee A1090000 		.4byte	0x9a1
 2789 07f2 0F       		.uleb128 0xf
 2790 07f3 01       		.uleb128 0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 86


 2791 07f4 50       		.byte	0x50
 2792 07f5 01       		.uleb128 0x1
 2793 07f6 30       		.byte	0x30
 2794 07f7 00       		.byte	0
 2795 07f8 00       		.byte	0
 2796 07f9 17       		.uleb128 0x17
 2797 07fa 70040000 		.4byte	.LASF79
 2798 07fe 01       		.byte	0x1
 2799 07ff E206     		.2byte	0x6e2
 2800 0801 93000000 		.4byte	0x93
 2801 0805 00000000 		.4byte	.LFB23
 2802 0809 28000000 		.4byte	.LFE23-.LFB23
 2803 080d 01       		.uleb128 0x1
 2804 080e 9C       		.byte	0x9c
 2805 080f 52080000 		.4byte	0x852
 2806 0813 0D       		.uleb128 0xd
 2807 0814 D0050000 		.4byte	.LASF61
 2808 0818 01       		.byte	0x1
 2809 0819 E406     		.2byte	0x6e4
 2810 081b 93000000 		.4byte	0x93
 2811 081f 27060000 		.4byte	.LLST38
 2812 0823 10       		.uleb128 0x10
 2813 0824 10000000 		.4byte	.LVL150
 2814 0828 54050000 		.4byte	0x554
 2815 082c 11       		.uleb128 0x11
 2816 082d 16000000 		.4byte	.LVL151
 2817 0831 78050000 		.4byte	0x578
 2818 0835 3F080000 		.4byte	0x83f
 2819 0839 0F       		.uleb128 0xf
 2820 083a 01       		.uleb128 0x1
 2821 083b 50       		.byte	0x50
 2822 083c 01       		.uleb128 0x1
 2823 083d 30       		.byte	0x30
 2824 083e 00       		.byte	0
 2825 083f 10       		.uleb128 0x10
 2826 0840 1A000000 		.4byte	.LVL152
 2827 0844 B3050000 		.4byte	0x5b3
 2828 0848 10       		.uleb128 0x10
 2829 0849 20000000 		.4byte	.LVL154
 2830 084d 66050000 		.4byte	0x566
 2831 0851 00       		.byte	0
 2832 0852 17       		.uleb128 0x17
 2833 0853 62000000 		.4byte	.LASF80
 2834 0857 01       		.byte	0x1
 2835 0858 0307     		.2byte	0x703
 2836 085a 9E000000 		.4byte	0x9e
 2837 085e 00000000 		.4byte	.LFB24
 2838 0862 28000000 		.4byte	.LFE24-.LFB24
 2839 0866 01       		.uleb128 0x1
 2840 0867 9C       		.byte	0x9c
 2841 0868 AB080000 		.4byte	0x8ab
 2842 086c 0D       		.uleb128 0xd
 2843 086d D0050000 		.4byte	.LASF61
 2844 0871 01       		.byte	0x1
 2845 0872 0507     		.2byte	0x705
 2846 0874 9E000000 		.4byte	0x9e
 2847 0878 3A060000 		.4byte	.LLST39
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 87


 2848 087c 10       		.uleb128 0x10
 2849 087d 10000000 		.4byte	.LVL156
 2850 0881 54050000 		.4byte	0x554
 2851 0885 11       		.uleb128 0x11
 2852 0886 16000000 		.4byte	.LVL157
 2853 088a 78050000 		.4byte	0x578
 2854 088e 98080000 		.4byte	0x898
 2855 0892 0F       		.uleb128 0xf
 2856 0893 01       		.uleb128 0x1
 2857 0894 50       		.byte	0x50
 2858 0895 01       		.uleb128 0x1
 2859 0896 30       		.byte	0x30
 2860 0897 00       		.byte	0
 2861 0898 10       		.uleb128 0x10
 2862 0899 1A000000 		.4byte	.LVL158
 2863 089d EC050000 		.4byte	0x5ec
 2864 08a1 10       		.uleb128 0x10
 2865 08a2 20000000 		.4byte	.LVL160
 2866 08a6 66050000 		.4byte	0x566
 2867 08aa 00       		.byte	0
 2868 08ab 17       		.uleb128 0x17
 2869 08ac 2B020000 		.4byte	.LASF81
 2870 08b0 01       		.byte	0x1
 2871 08b1 2407     		.2byte	0x724
 2872 08b3 A9000000 		.4byte	0xa9
 2873 08b7 00000000 		.4byte	.LFB25
 2874 08bb 28000000 		.4byte	.LFE25-.LFB25
 2875 08bf 01       		.uleb128 0x1
 2876 08c0 9C       		.byte	0x9c
 2877 08c1 04090000 		.4byte	0x904
 2878 08c5 0D       		.uleb128 0xd
 2879 08c6 D0050000 		.4byte	.LASF61
 2880 08ca 01       		.byte	0x1
 2881 08cb 2607     		.2byte	0x726
 2882 08cd A9000000 		.4byte	0xa9
 2883 08d1 4D060000 		.4byte	.LLST40
 2884 08d5 10       		.uleb128 0x10
 2885 08d6 10000000 		.4byte	.LVL162
 2886 08da 54050000 		.4byte	0x554
 2887 08de 11       		.uleb128 0x11
 2888 08df 16000000 		.4byte	.LVL163
 2889 08e3 78050000 		.4byte	0x578
 2890 08e7 F1080000 		.4byte	0x8f1
 2891 08eb 0F       		.uleb128 0xf
 2892 08ec 01       		.uleb128 0x1
 2893 08ed 50       		.byte	0x50
 2894 08ee 01       		.uleb128 0x1
 2895 08ef 30       		.byte	0x30
 2896 08f0 00       		.byte	0
 2897 08f1 10       		.uleb128 0x10
 2898 08f2 1A000000 		.4byte	.LVL164
 2899 08f6 27060000 		.4byte	0x627
 2900 08fa 10       		.uleb128 0x10
 2901 08fb 20000000 		.4byte	.LVL166
 2902 08ff 66050000 		.4byte	0x566
 2903 0903 00       		.byte	0
 2904 0904 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 88


 2905 0905 38010000 		.4byte	0x138
 2906 0909 14090000 		.4byte	0x914
 2907 090d 1E       		.uleb128 0x1e
 2908 090e 10010000 		.4byte	0x110
 2909 0912 00       		.byte	0
 2910 0913 00       		.byte	0
 2911 0914 1F       		.uleb128 0x1f
 2912 0915 BA020000 		.4byte	.LASF82
 2913 0919 01       		.byte	0x1
 2914 091a 3D       		.byte	0x3d
 2915 091b 04090000 		.4byte	0x904
 2916 091f 05       		.uleb128 0x5
 2917 0920 03       		.byte	0x3
 2918 0921 00000000 		.4byte	ADC_gcor
 2919 0925 20       		.uleb128 0x20
 2920 0926 93010000 		.4byte	.LASF83
 2921 092a 01       		.byte	0x1
 2922 092b 2C       		.byte	0x2c
 2923 092c 72000000 		.4byte	0x72
 2924 0930 05       		.uleb128 0x5
 2925 0931 03       		.byte	0x3
 2926 0932 00000000 		.4byte	ADC_initVar
 2927 0936 20       		.uleb128 0x20
 2928 0937 20010000 		.4byte	.LASF84
 2929 093b 01       		.byte	0x1
 2930 093c 24       		.byte	0x24
 2931 093d D8000000 		.4byte	0xd8
 2932 0941 05       		.uleb128 0x5
 2933 0942 03       		.byte	0x3
 2934 0943 00000000 		.4byte	ADC_convDone
 2935 0947 20       		.uleb128 0x20
 2936 0948 43000000 		.4byte	.LASF85
 2937 094c 01       		.byte	0x1
 2938 094d 29       		.byte	0x29
 2939 094e D8000000 		.4byte	0xd8
 2940 0952 05       		.uleb128 0x5
 2941 0953 03       		.byte	0x3
 2942 0954 00000000 		.4byte	ADC_stopConversion
 2943 0958 20       		.uleb128 0x20
 2944 0959 56000000 		.4byte	.LASF86
 2945 095d 01       		.byte	0x1
 2946 095e 2F       		.byte	0x2f
 2947 095f D8000000 		.4byte	0xd8
 2948 0963 05       		.uleb128 0x5
 2949 0964 03       		.byte	0x3
 2950 0965 00000000 		.4byte	ADC_started
 2951 0969 20       		.uleb128 0x20
 2952 096a 92000000 		.4byte	.LASF87
 2953 096e 01       		.byte	0x1
 2954 096f 32       		.byte	0x32
 2955 0970 D8000000 		.4byte	0xd8
 2956 0974 05       		.uleb128 0x5
 2957 0975 03       		.byte	0x3
 2958 0976 00000000 		.4byte	ADC_Config
 2959 097a 20       		.uleb128 0x20
 2960 097b E9030000 		.4byte	.LASF88
 2961 097f 01       		.byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 89


 2962 0980 34       		.byte	0x34
 2963 0981 8B090000 		.4byte	0x98b
 2964 0985 05       		.uleb128 0x5
 2965 0986 03       		.byte	0x3
 2966 0987 00000000 		.4byte	ADC_Offset
 2967 098b 05       		.uleb128 0x5
 2968 098c A9000000 		.4byte	0xa9
 2969 0990 20       		.uleb128 0x20
 2970 0991 B7050000 		.4byte	.LASF89
 2971 0995 01       		.byte	0x1
 2972 0996 35       		.byte	0x35
 2973 0997 8B090000 		.4byte	0x98b
 2974 099b 05       		.uleb128 0x5
 2975 099c 03       		.byte	0x3
 2976 099d 00000000 		.4byte	ADC_CountsPerVolt
 2977 09a1 21       		.uleb128 0x21
 2978 09a2 60030000 		.4byte	.LASF90
 2979 09a6 04       		.byte	0x4
 2980 09a7 80       		.byte	0x80
 2981 09a8 B2090000 		.4byte	0x9b2
 2982 09ac 22       		.uleb128 0x22
 2983 09ad 72000000 		.4byte	0x72
 2984 09b1 00       		.byte	0
 2985 09b2 23       		.uleb128 0x23
 2986 09b3 04020000 		.4byte	.LASF101
 2987 09b7 04       		.byte	0x4
 2988 09b8 7E       		.byte	0x7e
 2989 09b9 72000000 		.4byte	0x72
 2990 09bd 21       		.uleb128 0x21
 2991 09be 56010000 		.4byte	.LASF91
 2992 09c2 04       		.byte	0x4
 2993 09c3 78       		.byte	0x78
 2994 09c4 CE090000 		.4byte	0x9ce
 2995 09c8 22       		.uleb128 0x22
 2996 09c9 7D000000 		.4byte	0x7d
 2997 09cd 00       		.byte	0
 2998 09ce 21       		.uleb128 0x21
 2999 09cf 0F000000 		.4byte	.LASF92
 3000 09d3 04       		.byte	0x4
 3001 09d4 7F       		.byte	0x7f
 3002 09d5 DF090000 		.4byte	0x9df
 3003 09d9 22       		.uleb128 0x22
 3004 09da 72000000 		.4byte	0x72
 3005 09de 00       		.byte	0
 3006 09df 21       		.uleb128 0x21
 3007 09e0 CE030000 		.4byte	.LASF93
 3008 09e4 05       		.byte	0x5
 3009 09e5 50       		.byte	0x50
 3010 09e6 F0090000 		.4byte	0x9f0
 3011 09ea 22       		.uleb128 0x22
 3012 09eb 72000000 		.4byte	0x72
 3013 09ef 00       		.byte	0
 3014 09f0 21       		.uleb128 0x21
 3015 09f1 00040000 		.4byte	.LASF94
 3016 09f5 06       		.byte	0x6
 3017 09f6 2F       		.byte	0x2f
 3018 09f7 060A0000 		.4byte	0xa06
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 90


 3019 09fb 22       		.uleb128 0x22
 3020 09fc 7D000000 		.4byte	0x7d
 3021 0a00 22       		.uleb128 0x22
 3022 0a01 72000000 		.4byte	0x72
 3023 0a05 00       		.byte	0
 3024 0a06 21       		.uleb128 0x21
 3025 0a07 BF010000 		.4byte	.LASF95
 3026 0a0b 07       		.byte	0x7
 3027 0a0c 2F       		.byte	0x2f
 3028 0a0d 1C0A0000 		.4byte	0xa1c
 3029 0a11 22       		.uleb128 0x22
 3030 0a12 7D000000 		.4byte	0x7d
 3031 0a16 22       		.uleb128 0x22
 3032 0a17 72000000 		.4byte	0x72
 3033 0a1b 00       		.byte	0
 3034 0a1c 24       		.uleb128 0x24
 3035 0a1d 84010000 		.4byte	.LASF102
 3036 0a21 04       		.byte	0x4
 3037 0a22 89       		.byte	0x89
 3038 0a23 FD000000 		.4byte	0xfd
 3039 0a27 360A0000 		.4byte	0xa36
 3040 0a2b 22       		.uleb128 0x22
 3041 0a2c 72000000 		.4byte	0x72
 3042 0a30 22       		.uleb128 0x22
 3043 0a31 FD000000 		.4byte	0xfd
 3044 0a35 00       		.byte	0
 3045 0a36 21       		.uleb128 0x21
 3046 0a37 A8030000 		.4byte	.LASF96
 3047 0a3b 06       		.byte	0x6
 3048 0a3c 32       		.byte	0x32
 3049 0a3d 470A0000 		.4byte	0xa47
 3050 0a41 22       		.uleb128 0x22
 3051 0a42 72000000 		.4byte	0x72
 3052 0a46 00       		.byte	0
 3053 0a47 21       		.uleb128 0x21
 3054 0a48 E1020000 		.4byte	.LASF97
 3055 0a4c 07       		.byte	0x7
 3056 0a4d 32       		.byte	0x32
 3057 0a4e 580A0000 		.4byte	0xa58
 3058 0a52 22       		.uleb128 0x22
 3059 0a53 72000000 		.4byte	0x72
 3060 0a57 00       		.byte	0
 3061 0a58 25       		.uleb128 0x25
 3062 0a59 07030000 		.4byte	.LASF103
 3063 0a5d 04       		.byte	0x4
 3064 0a5e 8C       		.byte	0x8c
 3065 0a5f 22       		.uleb128 0x22
 3066 0a60 72000000 		.4byte	0x72
 3067 0a64 22       		.uleb128 0x22
 3068 0a65 72000000 		.4byte	0x72
 3069 0a69 00       		.byte	0
 3070 0a6a 00       		.byte	0
 3071              		.section	.debug_abbrev,"",%progbits
 3072              	.Ldebug_abbrev0:
 3073 0000 01       		.uleb128 0x1
 3074 0001 11       		.uleb128 0x11
 3075 0002 01       		.byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 91


 3076 0003 25       		.uleb128 0x25
 3077 0004 0E       		.uleb128 0xe
 3078 0005 13       		.uleb128 0x13
 3079 0006 0B       		.uleb128 0xb
 3080 0007 03       		.uleb128 0x3
 3081 0008 0E       		.uleb128 0xe
 3082 0009 1B       		.uleb128 0x1b
 3083 000a 0E       		.uleb128 0xe
 3084 000b 55       		.uleb128 0x55
 3085 000c 17       		.uleb128 0x17
 3086 000d 11       		.uleb128 0x11
 3087 000e 01       		.uleb128 0x1
 3088 000f 10       		.uleb128 0x10
 3089 0010 17       		.uleb128 0x17
 3090 0011 00       		.byte	0
 3091 0012 00       		.byte	0
 3092 0013 02       		.uleb128 0x2
 3093 0014 24       		.uleb128 0x24
 3094 0015 00       		.byte	0
 3095 0016 0B       		.uleb128 0xb
 3096 0017 0B       		.uleb128 0xb
 3097 0018 3E       		.uleb128 0x3e
 3098 0019 0B       		.uleb128 0xb
 3099 001a 03       		.uleb128 0x3
 3100 001b 0E       		.uleb128 0xe
 3101 001c 00       		.byte	0
 3102 001d 00       		.byte	0
 3103 001e 03       		.uleb128 0x3
 3104 001f 24       		.uleb128 0x24
 3105 0020 00       		.byte	0
 3106 0021 0B       		.uleb128 0xb
 3107 0022 0B       		.uleb128 0xb
 3108 0023 3E       		.uleb128 0x3e
 3109 0024 0B       		.uleb128 0xb
 3110 0025 03       		.uleb128 0x3
 3111 0026 08       		.uleb128 0x8
 3112 0027 00       		.byte	0
 3113 0028 00       		.byte	0
 3114 0029 04       		.uleb128 0x4
 3115 002a 16       		.uleb128 0x16
 3116 002b 00       		.byte	0
 3117 002c 03       		.uleb128 0x3
 3118 002d 0E       		.uleb128 0xe
 3119 002e 3A       		.uleb128 0x3a
 3120 002f 0B       		.uleb128 0xb
 3121 0030 3B       		.uleb128 0x3b
 3122 0031 0B       		.uleb128 0xb
 3123 0032 49       		.uleb128 0x49
 3124 0033 13       		.uleb128 0x13
 3125 0034 00       		.byte	0
 3126 0035 00       		.byte	0
 3127 0036 05       		.uleb128 0x5
 3128 0037 35       		.uleb128 0x35
 3129 0038 00       		.byte	0
 3130 0039 49       		.uleb128 0x49
 3131 003a 13       		.uleb128 0x13
 3132 003b 00       		.byte	0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 92


 3133 003c 00       		.byte	0
 3134 003d 06       		.uleb128 0x6
 3135 003e 16       		.uleb128 0x16
 3136 003f 00       		.byte	0
 3137 0040 03       		.uleb128 0x3
 3138 0041 0E       		.uleb128 0xe
 3139 0042 3A       		.uleb128 0x3a
 3140 0043 0B       		.uleb128 0xb
 3141 0044 3B       		.uleb128 0x3b
 3142 0045 05       		.uleb128 0x5
 3143 0046 49       		.uleb128 0x49
 3144 0047 13       		.uleb128 0x13
 3145 0048 00       		.byte	0
 3146 0049 00       		.byte	0
 3147 004a 07       		.uleb128 0x7
 3148 004b 0F       		.uleb128 0xf
 3149 004c 00       		.byte	0
 3150 004d 0B       		.uleb128 0xb
 3151 004e 0B       		.uleb128 0xb
 3152 004f 49       		.uleb128 0x49
 3153 0050 13       		.uleb128 0x13
 3154 0051 00       		.byte	0
 3155 0052 00       		.byte	0
 3156 0053 08       		.uleb128 0x8
 3157 0054 15       		.uleb128 0x15
 3158 0055 00       		.byte	0
 3159 0056 27       		.uleb128 0x27
 3160 0057 19       		.uleb128 0x19
 3161 0058 00       		.byte	0
 3162 0059 00       		.byte	0
 3163 005a 09       		.uleb128 0x9
 3164 005b 13       		.uleb128 0x13
 3165 005c 01       		.byte	0x1
 3166 005d 0B       		.uleb128 0xb
 3167 005e 0B       		.uleb128 0xb
 3168 005f 3A       		.uleb128 0x3a
 3169 0060 0B       		.uleb128 0xb
 3170 0061 3B       		.uleb128 0x3b
 3171 0062 0B       		.uleb128 0xb
 3172 0063 01       		.uleb128 0x1
 3173 0064 13       		.uleb128 0x13
 3174 0065 00       		.byte	0
 3175 0066 00       		.byte	0
 3176 0067 0A       		.uleb128 0xa
 3177 0068 0D       		.uleb128 0xd
 3178 0069 00       		.byte	0
 3179 006a 03       		.uleb128 0x3
 3180 006b 0E       		.uleb128 0xe
 3181 006c 3A       		.uleb128 0x3a
 3182 006d 0B       		.uleb128 0xb
 3183 006e 3B       		.uleb128 0x3b
 3184 006f 0B       		.uleb128 0xb
 3185 0070 49       		.uleb128 0x49
 3186 0071 13       		.uleb128 0x13
 3187 0072 38       		.uleb128 0x38
 3188 0073 0B       		.uleb128 0xb
 3189 0074 00       		.byte	0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 93


 3190 0075 00       		.byte	0
 3191 0076 0B       		.uleb128 0xb
 3192 0077 2E       		.uleb128 0x2e
 3193 0078 01       		.byte	0x1
 3194 0079 03       		.uleb128 0x3
 3195 007a 0E       		.uleb128 0xe
 3196 007b 3A       		.uleb128 0x3a
 3197 007c 0B       		.uleb128 0xb
 3198 007d 3B       		.uleb128 0x3b
 3199 007e 05       		.uleb128 0x5
 3200 007f 27       		.uleb128 0x27
 3201 0080 19       		.uleb128 0x19
 3202 0081 11       		.uleb128 0x11
 3203 0082 01       		.uleb128 0x1
 3204 0083 12       		.uleb128 0x12
 3205 0084 06       		.uleb128 0x6
 3206 0085 40       		.uleb128 0x40
 3207 0086 18       		.uleb128 0x18
 3208 0087 9742     		.uleb128 0x2117
 3209 0089 19       		.uleb128 0x19
 3210 008a 01       		.uleb128 0x1
 3211 008b 13       		.uleb128 0x13
 3212 008c 00       		.byte	0
 3213 008d 00       		.byte	0
 3214 008e 0C       		.uleb128 0xc
 3215 008f 05       		.uleb128 0x5
 3216 0090 00       		.byte	0
 3217 0091 03       		.uleb128 0x3
 3218 0092 0E       		.uleb128 0xe
 3219 0093 3A       		.uleb128 0x3a
 3220 0094 0B       		.uleb128 0xb
 3221 0095 3B       		.uleb128 0x3b
 3222 0096 05       		.uleb128 0x5
 3223 0097 49       		.uleb128 0x49
 3224 0098 13       		.uleb128 0x13
 3225 0099 02       		.uleb128 0x2
 3226 009a 17       		.uleb128 0x17
 3227 009b 00       		.byte	0
 3228 009c 00       		.byte	0
 3229 009d 0D       		.uleb128 0xd
 3230 009e 34       		.uleb128 0x34
 3231 009f 00       		.byte	0
 3232 00a0 03       		.uleb128 0x3
 3233 00a1 0E       		.uleb128 0xe
 3234 00a2 3A       		.uleb128 0x3a
 3235 00a3 0B       		.uleb128 0xb
 3236 00a4 3B       		.uleb128 0x3b
 3237 00a5 05       		.uleb128 0x5
 3238 00a6 49       		.uleb128 0x49
 3239 00a7 13       		.uleb128 0x13
 3240 00a8 02       		.uleb128 0x2
 3241 00a9 17       		.uleb128 0x17
 3242 00aa 00       		.byte	0
 3243 00ab 00       		.byte	0
 3244 00ac 0E       		.uleb128 0xe
 3245 00ad 898201   		.uleb128 0x4109
 3246 00b0 01       		.byte	0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 94


 3247 00b1 11       		.uleb128 0x11
 3248 00b2 01       		.uleb128 0x1
 3249 00b3 31       		.uleb128 0x31
 3250 00b4 13       		.uleb128 0x13
 3251 00b5 00       		.byte	0
 3252 00b6 00       		.byte	0
 3253 00b7 0F       		.uleb128 0xf
 3254 00b8 8A8201   		.uleb128 0x410a
 3255 00bb 00       		.byte	0
 3256 00bc 02       		.uleb128 0x2
 3257 00bd 18       		.uleb128 0x18
 3258 00be 9142     		.uleb128 0x2111
 3259 00c0 18       		.uleb128 0x18
 3260 00c1 00       		.byte	0
 3261 00c2 00       		.byte	0
 3262 00c3 10       		.uleb128 0x10
 3263 00c4 898201   		.uleb128 0x4109
 3264 00c7 00       		.byte	0
 3265 00c8 11       		.uleb128 0x11
 3266 00c9 01       		.uleb128 0x1
 3267 00ca 31       		.uleb128 0x31
 3268 00cb 13       		.uleb128 0x13
 3269 00cc 00       		.byte	0
 3270 00cd 00       		.byte	0
 3271 00ce 11       		.uleb128 0x11
 3272 00cf 898201   		.uleb128 0x4109
 3273 00d2 01       		.byte	0x1
 3274 00d3 11       		.uleb128 0x11
 3275 00d4 01       		.uleb128 0x1
 3276 00d5 31       		.uleb128 0x31
 3277 00d6 13       		.uleb128 0x13
 3278 00d7 01       		.uleb128 0x1
 3279 00d8 13       		.uleb128 0x13
 3280 00d9 00       		.byte	0
 3281 00da 00       		.byte	0
 3282 00db 12       		.uleb128 0x12
 3283 00dc 2E       		.uleb128 0x2e
 3284 00dd 01       		.byte	0x1
 3285 00de 3F       		.uleb128 0x3f
 3286 00df 19       		.uleb128 0x19
 3287 00e0 03       		.uleb128 0x3
 3288 00e1 0E       		.uleb128 0xe
 3289 00e2 3A       		.uleb128 0x3a
 3290 00e3 0B       		.uleb128 0xb
 3291 00e4 3B       		.uleb128 0x3b
 3292 00e5 0B       		.uleb128 0xb
 3293 00e6 27       		.uleb128 0x27
 3294 00e7 19       		.uleb128 0x19
 3295 00e8 11       		.uleb128 0x11
 3296 00e9 01       		.uleb128 0x1
 3297 00ea 12       		.uleb128 0x12
 3298 00eb 06       		.uleb128 0x6
 3299 00ec 40       		.uleb128 0x40
 3300 00ed 18       		.uleb128 0x18
 3301 00ee 9742     		.uleb128 0x2117
 3302 00f0 19       		.uleb128 0x19
 3303 00f1 01       		.uleb128 0x1
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 95


 3304 00f2 13       		.uleb128 0x13
 3305 00f3 00       		.byte	0
 3306 00f4 00       		.byte	0
 3307 00f5 13       		.uleb128 0x13
 3308 00f6 34       		.uleb128 0x34
 3309 00f7 00       		.byte	0
 3310 00f8 03       		.uleb128 0x3
 3311 00f9 0E       		.uleb128 0xe
 3312 00fa 3A       		.uleb128 0x3a
 3313 00fb 0B       		.uleb128 0xb
 3314 00fc 3B       		.uleb128 0x3b
 3315 00fd 0B       		.uleb128 0xb
 3316 00fe 49       		.uleb128 0x49
 3317 00ff 13       		.uleb128 0x13
 3318 0100 00       		.byte	0
 3319 0101 00       		.byte	0
 3320 0102 14       		.uleb128 0x14
 3321 0103 34       		.uleb128 0x34
 3322 0104 00       		.byte	0
 3323 0105 03       		.uleb128 0x3
 3324 0106 0E       		.uleb128 0xe
 3325 0107 3A       		.uleb128 0x3a
 3326 0108 0B       		.uleb128 0xb
 3327 0109 3B       		.uleb128 0x3b
 3328 010a 0B       		.uleb128 0xb
 3329 010b 49       		.uleb128 0x49
 3330 010c 13       		.uleb128 0x13
 3331 010d 02       		.uleb128 0x2
 3332 010e 17       		.uleb128 0x17
 3333 010f 00       		.byte	0
 3334 0110 00       		.byte	0
 3335 0111 15       		.uleb128 0x15
 3336 0112 2E       		.uleb128 0x2e
 3337 0113 01       		.byte	0x1
 3338 0114 3F       		.uleb128 0x3f
 3339 0115 19       		.uleb128 0x19
 3340 0116 03       		.uleb128 0x3
 3341 0117 0E       		.uleb128 0xe
 3342 0118 3A       		.uleb128 0x3a
 3343 0119 0B       		.uleb128 0xb
 3344 011a 3B       		.uleb128 0x3b
 3345 011b 05       		.uleb128 0x5
 3346 011c 27       		.uleb128 0x27
 3347 011d 19       		.uleb128 0x19
 3348 011e 11       		.uleb128 0x11
 3349 011f 01       		.uleb128 0x1
 3350 0120 12       		.uleb128 0x12
 3351 0121 06       		.uleb128 0x6
 3352 0122 40       		.uleb128 0x40
 3353 0123 18       		.uleb128 0x18
 3354 0124 9742     		.uleb128 0x2117
 3355 0126 19       		.uleb128 0x19
 3356 0127 01       		.uleb128 0x1
 3357 0128 13       		.uleb128 0x13
 3358 0129 00       		.byte	0
 3359 012a 00       		.byte	0
 3360 012b 16       		.uleb128 0x16
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 96


 3361 012c 2E       		.uleb128 0x2e
 3362 012d 01       		.byte	0x1
 3363 012e 3F       		.uleb128 0x3f
 3364 012f 19       		.uleb128 0x19
 3365 0130 03       		.uleb128 0x3
 3366 0131 0E       		.uleb128 0xe
 3367 0132 3A       		.uleb128 0x3a
 3368 0133 0B       		.uleb128 0xb
 3369 0134 3B       		.uleb128 0x3b
 3370 0135 05       		.uleb128 0x5
 3371 0136 27       		.uleb128 0x27
 3372 0137 19       		.uleb128 0x19
 3373 0138 49       		.uleb128 0x49
 3374 0139 13       		.uleb128 0x13
 3375 013a 11       		.uleb128 0x11
 3376 013b 01       		.uleb128 0x1
 3377 013c 12       		.uleb128 0x12
 3378 013d 06       		.uleb128 0x6
 3379 013e 40       		.uleb128 0x40
 3380 013f 18       		.uleb128 0x18
 3381 0140 9642     		.uleb128 0x2116
 3382 0142 19       		.uleb128 0x19
 3383 0143 01       		.uleb128 0x1
 3384 0144 13       		.uleb128 0x13
 3385 0145 00       		.byte	0
 3386 0146 00       		.byte	0
 3387 0147 17       		.uleb128 0x17
 3388 0148 2E       		.uleb128 0x2e
 3389 0149 01       		.byte	0x1
 3390 014a 3F       		.uleb128 0x3f
 3391 014b 19       		.uleb128 0x19
 3392 014c 03       		.uleb128 0x3
 3393 014d 0E       		.uleb128 0xe
 3394 014e 3A       		.uleb128 0x3a
 3395 014f 0B       		.uleb128 0xb
 3396 0150 3B       		.uleb128 0x3b
 3397 0151 05       		.uleb128 0x5
 3398 0152 27       		.uleb128 0x27
 3399 0153 19       		.uleb128 0x19
 3400 0154 49       		.uleb128 0x49
 3401 0155 13       		.uleb128 0x13
 3402 0156 11       		.uleb128 0x11
 3403 0157 01       		.uleb128 0x1
 3404 0158 12       		.uleb128 0x12
 3405 0159 06       		.uleb128 0x6
 3406 015a 40       		.uleb128 0x40
 3407 015b 18       		.uleb128 0x18
 3408 015c 9742     		.uleb128 0x2117
 3409 015e 19       		.uleb128 0x19
 3410 015f 01       		.uleb128 0x1
 3411 0160 13       		.uleb128 0x13
 3412 0161 00       		.byte	0
 3413 0162 00       		.byte	0
 3414 0163 18       		.uleb128 0x18
 3415 0164 2E       		.uleb128 0x2e
 3416 0165 00       		.byte	0
 3417 0166 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 97


 3418 0167 19       		.uleb128 0x19
 3419 0168 03       		.uleb128 0x3
 3420 0169 0E       		.uleb128 0xe
 3421 016a 3A       		.uleb128 0x3a
 3422 016b 0B       		.uleb128 0xb
 3423 016c 3B       		.uleb128 0x3b
 3424 016d 05       		.uleb128 0x5
 3425 016e 27       		.uleb128 0x27
 3426 016f 19       		.uleb128 0x19
 3427 0170 11       		.uleb128 0x11
 3428 0171 01       		.uleb128 0x1
 3429 0172 12       		.uleb128 0x12
 3430 0173 06       		.uleb128 0x6
 3431 0174 40       		.uleb128 0x40
 3432 0175 18       		.uleb128 0x18
 3433 0176 9742     		.uleb128 0x2117
 3434 0178 19       		.uleb128 0x19
 3435 0179 00       		.byte	0
 3436 017a 00       		.byte	0
 3437 017b 19       		.uleb128 0x19
 3438 017c 34       		.uleb128 0x34
 3439 017d 00       		.byte	0
 3440 017e 03       		.uleb128 0x3
 3441 017f 0E       		.uleb128 0xe
 3442 0180 3A       		.uleb128 0x3a
 3443 0181 0B       		.uleb128 0xb
 3444 0182 3B       		.uleb128 0x3b
 3445 0183 05       		.uleb128 0x5
 3446 0184 49       		.uleb128 0x49
 3447 0185 13       		.uleb128 0x13
 3448 0186 02       		.uleb128 0x2
 3449 0187 18       		.uleb128 0x18
 3450 0188 00       		.byte	0
 3451 0189 00       		.byte	0
 3452 018a 1A       		.uleb128 0x1a
 3453 018b 05       		.uleb128 0x5
 3454 018c 00       		.byte	0
 3455 018d 03       		.uleb128 0x3
 3456 018e 0E       		.uleb128 0xe
 3457 018f 3A       		.uleb128 0x3a
 3458 0190 0B       		.uleb128 0xb
 3459 0191 3B       		.uleb128 0x3b
 3460 0192 05       		.uleb128 0x5
 3461 0193 49       		.uleb128 0x49
 3462 0194 13       		.uleb128 0x13
 3463 0195 02       		.uleb128 0x2
 3464 0196 18       		.uleb128 0x18
 3465 0197 00       		.byte	0
 3466 0198 00       		.byte	0
 3467 0199 1B       		.uleb128 0x1b
 3468 019a 34       		.uleb128 0x34
 3469 019b 00       		.byte	0
 3470 019c 03       		.uleb128 0x3
 3471 019d 0E       		.uleb128 0xe
 3472 019e 3A       		.uleb128 0x3a
 3473 019f 0B       		.uleb128 0xb
 3474 01a0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 98


 3475 01a1 05       		.uleb128 0x5
 3476 01a2 49       		.uleb128 0x49
 3477 01a3 13       		.uleb128 0x13
 3478 01a4 1C       		.uleb128 0x1c
 3479 01a5 05       		.uleb128 0x5
 3480 01a6 00       		.byte	0
 3481 01a7 00       		.byte	0
 3482 01a8 1C       		.uleb128 0x1c
 3483 01a9 34       		.uleb128 0x34
 3484 01aa 00       		.byte	0
 3485 01ab 03       		.uleb128 0x3
 3486 01ac 0E       		.uleb128 0xe
 3487 01ad 3A       		.uleb128 0x3a
 3488 01ae 0B       		.uleb128 0xb
 3489 01af 3B       		.uleb128 0x3b
 3490 01b0 05       		.uleb128 0x5
 3491 01b1 49       		.uleb128 0x49
 3492 01b2 13       		.uleb128 0x13
 3493 01b3 1C       		.uleb128 0x1c
 3494 01b4 0B       		.uleb128 0xb
 3495 01b5 00       		.byte	0
 3496 01b6 00       		.byte	0
 3497 01b7 1D       		.uleb128 0x1d
 3498 01b8 01       		.uleb128 0x1
 3499 01b9 01       		.byte	0x1
 3500 01ba 49       		.uleb128 0x49
 3501 01bb 13       		.uleb128 0x13
 3502 01bc 01       		.uleb128 0x1
 3503 01bd 13       		.uleb128 0x13
 3504 01be 00       		.byte	0
 3505 01bf 00       		.byte	0
 3506 01c0 1E       		.uleb128 0x1e
 3507 01c1 21       		.uleb128 0x21
 3508 01c2 00       		.byte	0
 3509 01c3 49       		.uleb128 0x49
 3510 01c4 13       		.uleb128 0x13
 3511 01c5 2F       		.uleb128 0x2f
 3512 01c6 0B       		.uleb128 0xb
 3513 01c7 00       		.byte	0
 3514 01c8 00       		.byte	0
 3515 01c9 1F       		.uleb128 0x1f
 3516 01ca 34       		.uleb128 0x34
 3517 01cb 00       		.byte	0
 3518 01cc 03       		.uleb128 0x3
 3519 01cd 0E       		.uleb128 0xe
 3520 01ce 3A       		.uleb128 0x3a
 3521 01cf 0B       		.uleb128 0xb
 3522 01d0 3B       		.uleb128 0x3b
 3523 01d1 0B       		.uleb128 0xb
 3524 01d2 49       		.uleb128 0x49
 3525 01d3 13       		.uleb128 0x13
 3526 01d4 02       		.uleb128 0x2
 3527 01d5 18       		.uleb128 0x18
 3528 01d6 00       		.byte	0
 3529 01d7 00       		.byte	0
 3530 01d8 20       		.uleb128 0x20
 3531 01d9 34       		.uleb128 0x34
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 99


 3532 01da 00       		.byte	0
 3533 01db 03       		.uleb128 0x3
 3534 01dc 0E       		.uleb128 0xe
 3535 01dd 3A       		.uleb128 0x3a
 3536 01de 0B       		.uleb128 0xb
 3537 01df 3B       		.uleb128 0x3b
 3538 01e0 0B       		.uleb128 0xb
 3539 01e1 49       		.uleb128 0x49
 3540 01e2 13       		.uleb128 0x13
 3541 01e3 3F       		.uleb128 0x3f
 3542 01e4 19       		.uleb128 0x19
 3543 01e5 02       		.uleb128 0x2
 3544 01e6 18       		.uleb128 0x18
 3545 01e7 00       		.byte	0
 3546 01e8 00       		.byte	0
 3547 01e9 21       		.uleb128 0x21
 3548 01ea 2E       		.uleb128 0x2e
 3549 01eb 01       		.byte	0x1
 3550 01ec 3F       		.uleb128 0x3f
 3551 01ed 19       		.uleb128 0x19
 3552 01ee 03       		.uleb128 0x3
 3553 01ef 0E       		.uleb128 0xe
 3554 01f0 3A       		.uleb128 0x3a
 3555 01f1 0B       		.uleb128 0xb
 3556 01f2 3B       		.uleb128 0x3b
 3557 01f3 0B       		.uleb128 0xb
 3558 01f4 27       		.uleb128 0x27
 3559 01f5 19       		.uleb128 0x19
 3560 01f6 3C       		.uleb128 0x3c
 3561 01f7 19       		.uleb128 0x19
 3562 01f8 01       		.uleb128 0x1
 3563 01f9 13       		.uleb128 0x13
 3564 01fa 00       		.byte	0
 3565 01fb 00       		.byte	0
 3566 01fc 22       		.uleb128 0x22
 3567 01fd 05       		.uleb128 0x5
 3568 01fe 00       		.byte	0
 3569 01ff 49       		.uleb128 0x49
 3570 0200 13       		.uleb128 0x13
 3571 0201 00       		.byte	0
 3572 0202 00       		.byte	0
 3573 0203 23       		.uleb128 0x23
 3574 0204 2E       		.uleb128 0x2e
 3575 0205 00       		.byte	0
 3576 0206 3F       		.uleb128 0x3f
 3577 0207 19       		.uleb128 0x19
 3578 0208 03       		.uleb128 0x3
 3579 0209 0E       		.uleb128 0xe
 3580 020a 3A       		.uleb128 0x3a
 3581 020b 0B       		.uleb128 0xb
 3582 020c 3B       		.uleb128 0x3b
 3583 020d 0B       		.uleb128 0xb
 3584 020e 27       		.uleb128 0x27
 3585 020f 19       		.uleb128 0x19
 3586 0210 49       		.uleb128 0x49
 3587 0211 13       		.uleb128 0x13
 3588 0212 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 100


 3589 0213 19       		.uleb128 0x19
 3590 0214 00       		.byte	0
 3591 0215 00       		.byte	0
 3592 0216 24       		.uleb128 0x24
 3593 0217 2E       		.uleb128 0x2e
 3594 0218 01       		.byte	0x1
 3595 0219 3F       		.uleb128 0x3f
 3596 021a 19       		.uleb128 0x19
 3597 021b 03       		.uleb128 0x3
 3598 021c 0E       		.uleb128 0xe
 3599 021d 3A       		.uleb128 0x3a
 3600 021e 0B       		.uleb128 0xb
 3601 021f 3B       		.uleb128 0x3b
 3602 0220 0B       		.uleb128 0xb
 3603 0221 27       		.uleb128 0x27
 3604 0222 19       		.uleb128 0x19
 3605 0223 49       		.uleb128 0x49
 3606 0224 13       		.uleb128 0x13
 3607 0225 3C       		.uleb128 0x3c
 3608 0226 19       		.uleb128 0x19
 3609 0227 01       		.uleb128 0x1
 3610 0228 13       		.uleb128 0x13
 3611 0229 00       		.byte	0
 3612 022a 00       		.byte	0
 3613 022b 25       		.uleb128 0x25
 3614 022c 2E       		.uleb128 0x2e
 3615 022d 01       		.byte	0x1
 3616 022e 3F       		.uleb128 0x3f
 3617 022f 19       		.uleb128 0x19
 3618 0230 03       		.uleb128 0x3
 3619 0231 0E       		.uleb128 0xe
 3620 0232 3A       		.uleb128 0x3a
 3621 0233 0B       		.uleb128 0xb
 3622 0234 3B       		.uleb128 0x3b
 3623 0235 0B       		.uleb128 0xb
 3624 0236 27       		.uleb128 0x27
 3625 0237 19       		.uleb128 0x19
 3626 0238 3C       		.uleb128 0x3c
 3627 0239 19       		.uleb128 0x19
 3628 023a 00       		.byte	0
 3629 023b 00       		.byte	0
 3630 023c 00       		.byte	0
 3631              		.section	.debug_loc,"",%progbits
 3632              	.Ldebug_loc0:
 3633              	.LLST0:
 3634 0000 00000000 		.4byte	.LVL0
 3635 0004 0C000000 		.4byte	.LVL1
 3636 0008 0100     		.2byte	0x1
 3637 000a 50       		.byte	0x50
 3638 000b 0C000000 		.4byte	.LVL1
 3639 000f A0000000 		.4byte	.LVL29
 3640 0013 0400     		.2byte	0x4
 3641 0015 F3       		.byte	0xf3
 3642 0016 01       		.uleb128 0x1
 3643 0017 50       		.byte	0x50
 3644 0018 9F       		.byte	0x9f
 3645 0019 A0000000 		.4byte	.LVL29
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 101


 3646 001d A2000000 		.4byte	.LVL30
 3647 0021 0100     		.2byte	0x1
 3648 0023 50       		.byte	0x50
 3649 0024 A2000000 		.4byte	.LVL30
 3650 0028 CC000000 		.4byte	.LFE21
 3651 002c 0400     		.2byte	0x4
 3652 002e F3       		.byte	0xf3
 3653 002f 01       		.uleb128 0x1
 3654 0030 50       		.byte	0x50
 3655 0031 9F       		.byte	0x9f
 3656 0032 00000000 		.4byte	0
 3657 0036 00000000 		.4byte	0
 3658              	.LLST1:
 3659 003a 00000000 		.4byte	.LVL0
 3660 003e 66000000 		.4byte	.LVL19
 3661 0042 0100     		.2byte	0x1
 3662 0044 51       		.byte	0x51
 3663 0045 66000000 		.4byte	.LVL19
 3664 0049 A0000000 		.4byte	.LVL29
 3665 004d 0400     		.2byte	0x4
 3666 004f F3       		.byte	0xf3
 3667 0050 01       		.uleb128 0x1
 3668 0051 51       		.byte	0x51
 3669 0052 9F       		.byte	0x9f
 3670 0053 A0000000 		.4byte	.LVL29
 3671 0057 A5000000 		.4byte	.LVL31-1
 3672 005b 0100     		.2byte	0x1
 3673 005d 51       		.byte	0x51
 3674 005e A5000000 		.4byte	.LVL31-1
 3675 0062 CC000000 		.4byte	.LFE21
 3676 0066 0400     		.2byte	0x4
 3677 0068 F3       		.byte	0xf3
 3678 0069 01       		.uleb128 0x1
 3679 006a 51       		.byte	0x51
 3680 006b 9F       		.byte	0x9f
 3681 006c 00000000 		.4byte	0
 3682 0070 00000000 		.4byte	0
 3683              	.LLST2:
 3684 0074 00000000 		.4byte	.LVL0
 3685 0078 6E000000 		.4byte	.LVL22
 3686 007c 0100     		.2byte	0x1
 3687 007e 52       		.byte	0x52
 3688 007f 6E000000 		.4byte	.LVL22
 3689 0083 A0000000 		.4byte	.LVL29
 3690 0087 0400     		.2byte	0x4
 3691 0089 F3       		.byte	0xf3
 3692 008a 01       		.uleb128 0x1
 3693 008b 52       		.byte	0x52
 3694 008c 9F       		.byte	0x9f
 3695 008d A0000000 		.4byte	.LVL29
 3696 0091 A5000000 		.4byte	.LVL31-1
 3697 0095 0100     		.2byte	0x1
 3698 0097 52       		.byte	0x52
 3699 0098 A5000000 		.4byte	.LVL31-1
 3700 009c CC000000 		.4byte	.LFE21
 3701 00a0 0400     		.2byte	0x4
 3702 00a2 F3       		.byte	0xf3
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 102


 3703 00a3 01       		.uleb128 0x1
 3704 00a4 52       		.byte	0x52
 3705 00a5 9F       		.byte	0x9f
 3706 00a6 00000000 		.4byte	0
 3707 00aa 00000000 		.4byte	0
 3708              	.LLST3:
 3709 00ae 00000000 		.4byte	.LVL0
 3710 00b2 84000000 		.4byte	.LVL26
 3711 00b6 0100     		.2byte	0x1
 3712 00b8 53       		.byte	0x53
 3713 00b9 84000000 		.4byte	.LVL26
 3714 00bd 8A000000 		.4byte	.LVL27
 3715 00c1 0400     		.2byte	0x4
 3716 00c3 F3       		.byte	0xf3
 3717 00c4 01       		.uleb128 0x1
 3718 00c5 53       		.byte	0x53
 3719 00c6 9F       		.byte	0x9f
 3720 00c7 8A000000 		.4byte	.LVL27
 3721 00cb 8C000000 		.4byte	.LVL28
 3722 00cf 0100     		.2byte	0x1
 3723 00d1 53       		.byte	0x53
 3724 00d2 8C000000 		.4byte	.LVL28
 3725 00d6 A0000000 		.4byte	.LVL29
 3726 00da 0400     		.2byte	0x4
 3727 00dc F3       		.byte	0xf3
 3728 00dd 01       		.uleb128 0x1
 3729 00de 53       		.byte	0x53
 3730 00df 9F       		.byte	0x9f
 3731 00e0 A0000000 		.4byte	.LVL29
 3732 00e4 A5000000 		.4byte	.LVL31-1
 3733 00e8 0100     		.2byte	0x1
 3734 00ea 53       		.byte	0x53
 3735 00eb A5000000 		.4byte	.LVL31-1
 3736 00ef CC000000 		.4byte	.LFE21
 3737 00f3 0400     		.2byte	0x4
 3738 00f5 F3       		.byte	0xf3
 3739 00f6 01       		.uleb128 0x1
 3740 00f7 53       		.byte	0x53
 3741 00f8 9F       		.byte	0x9f
 3742 00f9 00000000 		.4byte	0
 3743 00fd 00000000 		.4byte	0
 3744              	.LLST4:
 3745 0101 00000000 		.4byte	.LVL0
 3746 0105 A0000000 		.4byte	.LVL29
 3747 0109 0200     		.2byte	0x2
 3748 010b 91       		.byte	0x91
 3749 010c 00       		.sleb128 0
 3750 010d A0000000 		.4byte	.LVL29
 3751 0111 A8000000 		.4byte	.LVL32
 3752 0115 0200     		.2byte	0x2
 3753 0117 91       		.byte	0x91
 3754 0118 00       		.sleb128 0
 3755 0119 A8000000 		.4byte	.LVL32
 3756 011d CC000000 		.4byte	.LFE21
 3757 0121 0200     		.2byte	0x2
 3758 0123 7D       		.byte	0x7d
 3759 0124 00       		.sleb128 0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 103


 3760 0125 00000000 		.4byte	0
 3761 0129 00000000 		.4byte	0
 3762              	.LLST5:
 3763 012d 26000000 		.4byte	.LVL2
 3764 0131 28000000 		.4byte	.LVL3
 3765 0135 0100     		.2byte	0x1
 3766 0137 50       		.byte	0x50
 3767 0138 2C000000 		.4byte	.LVL4
 3768 013c 2E000000 		.4byte	.LVL5
 3769 0140 0100     		.2byte	0x1
 3770 0142 50       		.byte	0x50
 3771 0143 36000000 		.4byte	.LVL6
 3772 0147 38000000 		.4byte	.LVL7
 3773 014b 0100     		.2byte	0x1
 3774 014d 50       		.byte	0x50
 3775 014e 3C000000 		.4byte	.LVL8
 3776 0152 3E000000 		.4byte	.LVL9
 3777 0156 0100     		.2byte	0x1
 3778 0158 50       		.byte	0x50
 3779 0159 46000000 		.4byte	.LVL10
 3780 015d 48000000 		.4byte	.LVL11
 3781 0161 0100     		.2byte	0x1
 3782 0163 50       		.byte	0x50
 3783 0164 4C000000 		.4byte	.LVL12
 3784 0168 4E000000 		.4byte	.LVL13
 3785 016c 0100     		.2byte	0x1
 3786 016e 50       		.byte	0x50
 3787 016f 56000000 		.4byte	.LVL14
 3788 0173 58000000 		.4byte	.LVL15
 3789 0177 0100     		.2byte	0x1
 3790 0179 50       		.byte	0x50
 3791 017a 5C000000 		.4byte	.LVL16
 3792 017e 5E000000 		.4byte	.LVL17
 3793 0182 0100     		.2byte	0x1
 3794 0184 50       		.byte	0x50
 3795 0185 60000000 		.4byte	.LVL18
 3796 0189 A0000000 		.4byte	.LVL29
 3797 018d 0100     		.2byte	0x1
 3798 018f 50       		.byte	0x50
 3799 0190 00000000 		.4byte	0
 3800 0194 00000000 		.4byte	0
 3801              	.LLST6:
 3802 0198 66000000 		.4byte	.LVL19
 3803 019c 6A000000 		.4byte	.LVL20
 3804 01a0 0100     		.2byte	0x1
 3805 01a2 51       		.byte	0x51
 3806 01a3 00000000 		.4byte	0
 3807 01a7 00000000 		.4byte	0
 3808              	.LLST7:
 3809 01ab 6E000000 		.4byte	.LVL22
 3810 01af 76000000 		.4byte	.LVL23
 3811 01b3 0100     		.2byte	0x1
 3812 01b5 52       		.byte	0x52
 3813 01b6 76000000 		.4byte	.LVL23
 3814 01ba 7A000000 		.4byte	.LVL24
 3815 01be 0100     		.2byte	0x1
 3816 01c0 51       		.byte	0x51
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 104


 3817 01c1 7C000000 		.4byte	.LVL25
 3818 01c5 A0000000 		.4byte	.LVL29
 3819 01c9 0100     		.2byte	0x1
 3820 01cb 52       		.byte	0x52
 3821 01cc 00000000 		.4byte	0
 3822 01d0 00000000 		.4byte	0
 3823              	.LLST8:
 3824 01d4 6A000000 		.4byte	.LVL20
 3825 01d8 6C000000 		.4byte	.LVL21
 3826 01dc 0100     		.2byte	0x1
 3827 01de 51       		.byte	0x51
 3828 01df 00000000 		.4byte	0
 3829 01e3 00000000 		.4byte	0
 3830              	.LLST9:
 3831 01e7 00000000 		.4byte	.LVL33
 3832 01eb 07000000 		.4byte	.LVL34-1
 3833 01ef 0100     		.2byte	0x1
 3834 01f1 50       		.byte	0x50
 3835 01f2 07000000 		.4byte	.LVL34-1
 3836 01f6 4C000000 		.4byte	.LFE22
 3837 01fa 0400     		.2byte	0x4
 3838 01fc F3       		.byte	0xf3
 3839 01fd 01       		.uleb128 0x1
 3840 01fe 50       		.byte	0x50
 3841 01ff 9F       		.byte	0x9f
 3842 0200 00000000 		.4byte	0
 3843 0204 00000000 		.4byte	0
 3844              	.LLST10:
 3845 0208 0A000000 		.4byte	.LVL35
 3846 020c 40000000 		.4byte	.LVL38
 3847 0210 0100     		.2byte	0x1
 3848 0212 56       		.byte	0x56
 3849 0213 00000000 		.4byte	0
 3850 0217 00000000 		.4byte	0
 3851              	.LLST11:
 3852 021b 00000000 		.4byte	.LVL39
 3853 021f 82000000 		.4byte	.LVL40
 3854 0223 0100     		.2byte	0x1
 3855 0225 50       		.byte	0x50
 3856 0226 82000000 		.4byte	.LVL40
 3857 022a E0000000 		.4byte	.LFE19
 3858 022e 0400     		.2byte	0x4
 3859 0230 F3       		.byte	0xf3
 3860 0231 01       		.uleb128 0x1
 3861 0232 50       		.byte	0x50
 3862 0233 9F       		.byte	0x9f
 3863 0234 00000000 		.4byte	0
 3864 0238 00000000 		.4byte	0
 3865              	.LLST12:
 3866 023c 08000000 		.4byte	.LVL52
 3867 0240 B2000000 		.4byte	.LVL56
 3868 0244 0100     		.2byte	0x1
 3869 0246 56       		.byte	0x56
 3870 0247 00000000 		.4byte	0
 3871 024b 00000000 		.4byte	0
 3872              	.LLST13:
 3873 024f 08000000 		.4byte	.LVL60
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 105


 3874 0253 CE000000 		.4byte	.LVL63
 3875 0257 0100     		.2byte	0x1
 3876 0259 56       		.byte	0x56
 3877 025a 00000000 		.4byte	0
 3878 025e 00000000 		.4byte	0
 3879              	.LLST14:
 3880 0262 00000000 		.4byte	.LVL64
 3881 0266 0A000000 		.4byte	.LVL66
 3882 026a 0100     		.2byte	0x1
 3883 026c 50       		.byte	0x50
 3884 026d 0A000000 		.4byte	.LVL66
 3885 0271 18000000 		.4byte	.LFE4
 3886 0275 0400     		.2byte	0x4
 3887 0277 F3       		.byte	0xf3
 3888 0278 01       		.uleb128 0x1
 3889 0279 50       		.byte	0x50
 3890 027a 9F       		.byte	0x9f
 3891 027b 00000000 		.4byte	0
 3892 027f 00000000 		.4byte	0
 3893              	.LLST15:
 3894 0283 08000000 		.4byte	.LVL65
 3895 0287 10000000 		.4byte	.LVL67
 3896 028b 0100     		.2byte	0x1
 3897 028d 53       		.byte	0x53
 3898 028e 10000000 		.4byte	.LVL67
 3899 0292 18000000 		.4byte	.LFE4
 3900 0296 0100     		.2byte	0x1
 3901 0298 50       		.byte	0x50
 3902 0299 00000000 		.4byte	0
 3903 029d 00000000 		.4byte	0
 3904              	.LLST16:
 3905 02a1 00000000 		.4byte	.LVL68
 3906 02a5 0C000000 		.4byte	.LVL70
 3907 02a9 0100     		.2byte	0x1
 3908 02ab 50       		.byte	0x50
 3909 02ac 0C000000 		.4byte	.LVL70
 3910 02b0 18000000 		.4byte	.LFE5
 3911 02b4 0400     		.2byte	0x4
 3912 02b6 F3       		.byte	0xf3
 3913 02b7 01       		.uleb128 0x1
 3914 02b8 50       		.byte	0x50
 3915 02b9 9F       		.byte	0x9f
 3916 02ba 00000000 		.4byte	0
 3917 02be 00000000 		.4byte	0
 3918              	.LLST17:
 3919 02c2 08000000 		.4byte	.LVL69
 3920 02c6 0E000000 		.4byte	.LVL71
 3921 02ca 0100     		.2byte	0x1
 3922 02cc 53       		.byte	0x53
 3923 02cd 0E000000 		.4byte	.LVL71
 3924 02d1 18000000 		.4byte	.LFE5
 3925 02d5 0100     		.2byte	0x1
 3926 02d7 50       		.byte	0x50
 3927 02d8 00000000 		.4byte	0
 3928 02dc 00000000 		.4byte	0
 3929              	.LLST18:
 3930 02e0 00000000 		.4byte	.LVL72
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 106


 3931 02e4 10000000 		.4byte	.LVL74
 3932 02e8 0100     		.2byte	0x1
 3933 02ea 50       		.byte	0x50
 3934 02eb 10000000 		.4byte	.LVL74
 3935 02ef 24000000 		.4byte	.LVL78
 3936 02f3 0100     		.2byte	0x1
 3937 02f5 54       		.byte	0x54
 3938 02f6 24000000 		.4byte	.LVL78
 3939 02fa 74000000 		.4byte	.LFE6
 3940 02fe 0600     		.2byte	0x6
 3941 0300 F3       		.byte	0xf3
 3942 0301 03       		.uleb128 0x3
 3943 0302 F5       		.byte	0xf5
 3944 0303 00       		.uleb128 0
 3945 0304 25       		.uleb128 0x25
 3946 0305 9F       		.byte	0x9f
 3947 0306 00000000 		.4byte	0
 3948 030a 00000000 		.4byte	0
 3949              	.LLST19:
 3950 030e 0A000000 		.4byte	.LVL73
 3951 0312 13000000 		.4byte	.LVL75-1
 3952 0316 0A00     		.2byte	0xa
 3953 0318 73       		.byte	0x73
 3954 0319 00       		.sleb128 0
 3955 031a 32       		.byte	0x32
 3956 031b 24       		.byte	0x24
 3957 031c 03       		.byte	0x3
 3958 031d 00000000 		.4byte	.LANCHOR0
 3959 0321 22       		.byte	0x22
 3960 0322 44000000 		.4byte	.LVL83
 3961 0326 56000000 		.4byte	.LVL85
 3962 032a 0100     		.2byte	0x1
 3963 032c 50       		.byte	0x50
 3964 032d 56000000 		.4byte	.LVL85
 3965 0331 58000000 		.4byte	.LVL86
 3966 0335 0700     		.2byte	0x7
 3967 0337 73       		.byte	0x73
 3968 0338 00       		.sleb128 0
 3969 0339 32       		.byte	0x32
 3970 033a 24       		.byte	0x24
 3971 033b 72       		.byte	0x72
 3972 033c 00       		.sleb128 0
 3973 033d 22       		.byte	0x22
 3974 033e 00000000 		.4byte	0
 3975 0342 00000000 		.4byte	0
 3976              	.LLST20:
 3977 0346 54000000 		.4byte	.LVL84
 3978 034a 58000000 		.4byte	.LVL86
 3979 034e 0200     		.2byte	0x2
 3980 0350 30       		.byte	0x30
 3981 0351 9F       		.byte	0x9f
 3982 0352 5A000000 		.4byte	.LVL87
 3983 0356 74000000 		.4byte	.LFE6
 3984 035a 0100     		.2byte	0x1
 3985 035c 50       		.byte	0x50
 3986 035d 00000000 		.4byte	0
 3987 0361 00000000 		.4byte	0
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 107


 3988              	.LLST21:
 3989 0365 1C000000 		.4byte	.LVL76
 3990 0369 21000000 		.4byte	.LVL77-1
 3991 036d 0100     		.2byte	0x1
 3992 036f 50       		.byte	0x50
 3993 0370 24000000 		.4byte	.LVL78
 3994 0374 27000000 		.4byte	.LVL79-1
 3995 0378 0100     		.2byte	0x1
 3996 037a 50       		.byte	0x50
 3997 037b 27000000 		.4byte	.LVL79-1
 3998 037f 3E000000 		.4byte	.LVL81
 3999 0383 0100     		.2byte	0x1
 4000 0385 54       		.byte	0x54
 4001 0386 3E000000 		.4byte	.LVL81
 4002 038a 41000000 		.4byte	.LVL82-1
 4003 038e 0100     		.2byte	0x1
 4004 0390 50       		.byte	0x50
 4005 0391 58000000 		.4byte	.LVL86
 4006 0395 5C000000 		.4byte	.LVL88
 4007 0399 0100     		.2byte	0x1
 4008 039b 54       		.byte	0x54
 4009 039c 00000000 		.4byte	0
 4010 03a0 00000000 		.4byte	0
 4011              	.LLST22:
 4012 03a4 06000000 		.4byte	.LVL89
 4013 03a8 14000000 		.4byte	.LVL91
 4014 03ac 0100     		.2byte	0x1
 4015 03ae 53       		.byte	0x53
 4016 03af 00000000 		.4byte	0
 4017 03b3 00000000 		.4byte	0
 4018              	.LLST23:
 4019 03b7 0C000000 		.4byte	.LVL90
 4020 03bb 16000000 		.4byte	.LVL92
 4021 03bf 0100     		.2byte	0x1
 4022 03c1 50       		.byte	0x50
 4023 03c2 18000000 		.4byte	.LVL93
 4024 03c6 24000000 		.4byte	.LFE7
 4025 03ca 0100     		.2byte	0x1
 4026 03cc 50       		.byte	0x50
 4027 03cd 00000000 		.4byte	0
 4028 03d1 00000000 		.4byte	0
 4029              	.LLST24:
 4030 03d5 00000000 		.4byte	.LVL94
 4031 03d9 24000000 		.4byte	.LVL98
 4032 03dd 0100     		.2byte	0x1
 4033 03df 50       		.byte	0x50
 4034 03e0 24000000 		.4byte	.LVL98
 4035 03e4 30000000 		.4byte	.LFE10
 4036 03e8 0400     		.2byte	0x4
 4037 03ea F3       		.byte	0xf3
 4038 03eb 01       		.uleb128 0x1
 4039 03ec 50       		.byte	0x50
 4040 03ed 9F       		.byte	0x9f
 4041 03ee 00000000 		.4byte	0
 4042 03f2 00000000 		.4byte	0
 4043              	.LLST25:
 4044 03f6 10000000 		.4byte	.LVL95
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 108


 4045 03fa 12000000 		.4byte	.LVL96
 4046 03fe 0100     		.2byte	0x1
 4047 0400 53       		.byte	0x53
 4048 0401 1A000000 		.4byte	.LVL97
 4049 0405 30000000 		.4byte	.LFE10
 4050 0409 0100     		.2byte	0x1
 4051 040b 53       		.byte	0x53
 4052 040c 00000000 		.4byte	0
 4053 0410 00000000 		.4byte	0
 4054              	.LLST26:
 4055 0414 08000000 		.4byte	.LVL99
 4056 0418 12000000 		.4byte	.LVL101
 4057 041c 0100     		.2byte	0x1
 4058 041e 53       		.byte	0x53
 4059 041f 16000000 		.4byte	.LVL102
 4060 0423 1C000000 		.4byte	.LVL103
 4061 0427 0100     		.2byte	0x1
 4062 0429 53       		.byte	0x53
 4063 042a 00000000 		.4byte	0
 4064 042e 00000000 		.4byte	0
 4065              	.LLST27:
 4066 0432 12000000 		.4byte	.LVL106
 4067 0436 14000000 		.4byte	.LVL107
 4068 043a 0100     		.2byte	0x1
 4069 043c 50       		.byte	0x50
 4070 043d 18000000 		.4byte	.LVL108
 4071 0441 20000000 		.4byte	.LVL109
 4072 0445 0100     		.2byte	0x1
 4073 0447 52       		.byte	0x52
 4074 0448 20000000 		.4byte	.LVL109
 4075 044c 50000000 		.4byte	.LFE12
 4076 0450 0100     		.2byte	0x1
 4077 0452 50       		.byte	0x50
 4078 0453 00000000 		.4byte	0
 4079 0457 00000000 		.4byte	0
 4080              	.LLST28:
 4081 045b 08000000 		.4byte	.LVL104
 4082 045f 0E000000 		.4byte	.LVL105
 4083 0463 0100     		.2byte	0x1
 4084 0465 53       		.byte	0x53
 4085 0466 14000000 		.4byte	.LVL107
 4086 046a 26000000 		.4byte	.LVL110
 4087 046e 0100     		.2byte	0x1
 4088 0470 53       		.byte	0x53
 4089 0471 00000000 		.4byte	0
 4090 0475 00000000 		.4byte	0
 4091              	.LLST29:
 4092 0479 10000000 		.4byte	.LVL113
 4093 047d 1A000000 		.4byte	.LVL114
 4094 0481 0700     		.2byte	0x7
 4095 0483 70       		.byte	0x70
 4096 0484 00       		.sleb128 0
 4097 0485 0A       		.byte	0xa
 4098 0486 FFFF     		.2byte	0xffff
 4099 0488 1A       		.byte	0x1a
 4100 0489 9F       		.byte	0x9f
 4101 048a 1A000000 		.4byte	.LVL114
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 109


 4102 048e 1C000000 		.4byte	.LVL115
 4103 0492 0100     		.2byte	0x1
 4104 0494 50       		.byte	0x50
 4105 0495 24000000 		.4byte	.LVL117
 4106 0499 2C000000 		.4byte	.LVL118
 4107 049d 0700     		.2byte	0x7
 4108 049f 70       		.byte	0x70
 4109 04a0 00       		.sleb128 0
 4110 04a1 0A       		.byte	0xa
 4111 04a2 FFFF     		.2byte	0xffff
 4112 04a4 1A       		.byte	0x1a
 4113 04a5 9F       		.byte	0x9f
 4114 04a6 2C000000 		.4byte	.LVL118
 4115 04aa 34000000 		.4byte	.LVL119
 4116 04ae 0100     		.2byte	0x1
 4117 04b0 53       		.byte	0x53
 4118 04b1 34000000 		.4byte	.LVL119
 4119 04b5 36000000 		.4byte	.LVL120
 4120 04b9 0100     		.2byte	0x1
 4121 04bb 50       		.byte	0x50
 4122 04bc 3C000000 		.4byte	.LVL122
 4123 04c0 44000000 		.4byte	.LVL123
 4124 04c4 0100     		.2byte	0x1
 4125 04c6 53       		.byte	0x53
 4126 04c7 44000000 		.4byte	.LVL123
 4127 04cb 6C000000 		.4byte	.LFE13
 4128 04cf 0100     		.2byte	0x1
 4129 04d1 50       		.byte	0x50
 4130 04d2 00000000 		.4byte	0
 4131 04d6 00000000 		.4byte	0
 4132              	.LLST30:
 4133 04da 08000000 		.4byte	.LVL111
 4134 04de 0E000000 		.4byte	.LVL112
 4135 04e2 0100     		.2byte	0x1
 4136 04e4 53       		.byte	0x53
 4137 04e5 1C000000 		.4byte	.LVL115
 4138 04e9 22000000 		.4byte	.LVL116
 4139 04ed 0100     		.2byte	0x1
 4140 04ef 53       		.byte	0x53
 4141 04f0 36000000 		.4byte	.LVL120
 4142 04f4 38000000 		.4byte	.LVL121
 4143 04f8 0100     		.2byte	0x1
 4144 04fa 53       		.byte	0x53
 4145 04fb 00000000 		.4byte	0
 4146 04ff 00000000 		.4byte	0
 4147              	.LLST31:
 4148 0503 00000000 		.4byte	.LVL126
 4149 0507 06000000 		.4byte	.LVL127
 4150 050b 0100     		.2byte	0x1
 4151 050d 50       		.byte	0x50
 4152 050e 06000000 		.4byte	.LVL127
 4153 0512 0E000000 		.4byte	.LVL128
 4154 0516 0100     		.2byte	0x1
 4155 0518 50       		.byte	0x50
 4156 0519 00000000 		.4byte	0
 4157 051d 00000000 		.4byte	0
 4158              	.LLST32:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 110


 4159 0521 00000000 		.4byte	.LVL130
 4160 0525 06000000 		.4byte	.LVL131
 4161 0529 0100     		.2byte	0x1
 4162 052b 50       		.byte	0x50
 4163 052c 06000000 		.4byte	.LVL131
 4164 0530 08000000 		.4byte	.LVL132
 4165 0534 0600     		.2byte	0x6
 4166 0536 70       		.byte	0x70
 4167 0537 00       		.sleb128 0
 4168 0538 73       		.byte	0x73
 4169 0539 00       		.sleb128 0
 4170 053a 1C       		.byte	0x1c
 4171 053b 9F       		.byte	0x9f
 4172 053c 08000000 		.4byte	.LVL132
 4173 0540 0B000000 		.4byte	.LVL133-1
 4174 0544 0100     		.2byte	0x1
 4175 0546 50       		.byte	0x50
 4176 0547 00000000 		.4byte	0
 4177 054b 00000000 		.4byte	0
 4178              	.LLST33:
 4179 054f 00000000 		.4byte	.LVL136
 4180 0553 2C000000 		.4byte	.LVL139
 4181 0557 0100     		.2byte	0x1
 4182 0559 50       		.byte	0x50
 4183 055a 2C000000 		.4byte	.LVL139
 4184 055e 4C000000 		.4byte	.LFE18
 4185 0562 0400     		.2byte	0x4
 4186 0564 F3       		.byte	0xf3
 4187 0565 01       		.uleb128 0x1
 4188 0566 50       		.byte	0x50
 4189 0567 9F       		.byte	0x9f
 4190 0568 00000000 		.4byte	0
 4191 056c 00000000 		.4byte	0
 4192              	.LLST34:
 4193 0570 3C000000 		.4byte	.LVL140
 4194 0574 3E000000 		.4byte	.LVL141
 4195 0578 0600     		.2byte	0x6
 4196 057a 70       		.byte	0x70
 4197 057b 00       		.sleb128 0
 4198 057c 73       		.byte	0x73
 4199 057d 00       		.sleb128 0
 4200 057e 1C       		.byte	0x1c
 4201 057f 9F       		.byte	0x9f
 4202 0580 3E000000 		.4byte	.LVL141
 4203 0584 4C000000 		.4byte	.LFE18
 4204 0588 0100     		.2byte	0x1
 4205 058a 50       		.byte	0x50
 4206 058b 00000000 		.4byte	0
 4207 058f 00000000 		.4byte	0
 4208              	.LLST35:
 4209 0593 18000000 		.4byte	.LVL137
 4210 0597 24000000 		.4byte	.LVL138
 4211 059b 0300     		.2byte	0x3
 4212 059d 08       		.byte	0x8
 4213 059e 20       		.byte	0x20
 4214 059f 9F       		.byte	0x9f
 4215 05a0 24000000 		.4byte	.LVL138
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 111


 4216 05a4 4C000000 		.4byte	.LFE18
 4217 05a8 0100     		.2byte	0x1
 4218 05aa 52       		.byte	0x52
 4219 05ab 00000000 		.4byte	0
 4220 05af 00000000 		.4byte	0
 4221              	.LLST36:
 4222 05b3 00000000 		.4byte	.LVL142
 4223 05b7 1D000000 		.4byte	.LVL143-1
 4224 05bb 0100     		.2byte	0x1
 4225 05bd 50       		.byte	0x50
 4226 05be 1D000000 		.4byte	.LVL143-1
 4227 05c2 48000000 		.4byte	.LVL147
 4228 05c6 0400     		.2byte	0x4
 4229 05c8 F3       		.byte	0xf3
 4230 05c9 01       		.uleb128 0x1
 4231 05ca 50       		.byte	0x50
 4232 05cb 9F       		.byte	0x9f
 4233 05cc 48000000 		.4byte	.LVL147
 4234 05d0 4A000000 		.4byte	.LVL148
 4235 05d4 0100     		.2byte	0x1
 4236 05d6 50       		.byte	0x50
 4237 05d7 4A000000 		.4byte	.LVL148
 4238 05db 60000000 		.4byte	.LFE20
 4239 05df 0400     		.2byte	0x4
 4240 05e1 F3       		.byte	0xf3
 4241 05e2 01       		.uleb128 0x1
 4242 05e3 50       		.byte	0x50
 4243 05e4 9F       		.byte	0x9f
 4244 05e5 00000000 		.4byte	0
 4245 05e9 00000000 		.4byte	0
 4246              	.LLST37:
 4247 05ed 00000000 		.4byte	.LVL142
 4248 05f1 1D000000 		.4byte	.LVL143-1
 4249 05f5 0100     		.2byte	0x1
 4250 05f7 51       		.byte	0x51
 4251 05f8 1D000000 		.4byte	.LVL143-1
 4252 05fc 48000000 		.4byte	.LVL147
 4253 0600 0400     		.2byte	0x4
 4254 0602 F3       		.byte	0xf3
 4255 0603 01       		.uleb128 0x1
 4256 0604 51       		.byte	0x51
 4257 0605 9F       		.byte	0x9f
 4258 0606 48000000 		.4byte	.LVL147
 4259 060a 4D000000 		.4byte	.LVL149-1
 4260 060e 0100     		.2byte	0x1
 4261 0610 51       		.byte	0x51
 4262 0611 4D000000 		.4byte	.LVL149-1
 4263 0615 60000000 		.4byte	.LFE20
 4264 0619 0400     		.2byte	0x4
 4265 061b F3       		.byte	0xf3
 4266 061c 01       		.uleb128 0x1
 4267 061d 51       		.byte	0x51
 4268 061e 9F       		.byte	0x9f
 4269 061f 00000000 		.4byte	0
 4270 0623 00000000 		.4byte	0
 4271              	.LLST38:
 4272 0627 1C000000 		.4byte	.LVL153
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 112


 4273 062b 24000000 		.4byte	.LVL155
 4274 062f 0100     		.2byte	0x1
 4275 0631 54       		.byte	0x54
 4276 0632 00000000 		.4byte	0
 4277 0636 00000000 		.4byte	0
 4278              	.LLST39:
 4279 063a 1C000000 		.4byte	.LVL159
 4280 063e 24000000 		.4byte	.LVL161
 4281 0642 0100     		.2byte	0x1
 4282 0644 54       		.byte	0x54
 4283 0645 00000000 		.4byte	0
 4284 0649 00000000 		.4byte	0
 4285              	.LLST40:
 4286 064d 1C000000 		.4byte	.LVL165
 4287 0651 1F000000 		.4byte	.LVL166-1
 4288 0655 0100     		.2byte	0x1
 4289 0657 50       		.byte	0x50
 4290 0658 1F000000 		.4byte	.LVL166-1
 4291 065c 24000000 		.4byte	.LVL167
 4292 0660 0100     		.2byte	0x1
 4293 0662 54       		.byte	0x54
 4294 0663 24000000 		.4byte	.LVL167
 4295 0667 28000000 		.4byte	.LFE25
 4296 066b 0100     		.2byte	0x1
 4297 066d 50       		.byte	0x50
 4298 066e 00000000 		.4byte	0
 4299 0672 00000000 		.4byte	0
 4300              		.section	.debug_aranges,"",%progbits
 4301 0000 E4000000 		.4byte	0xe4
 4302 0004 0200     		.2byte	0x2
 4303 0006 00000000 		.4byte	.Ldebug_info0
 4304 000a 04       		.byte	0x4
 4305 000b 00       		.byte	0
 4306 000c 0000     		.2byte	0
 4307 000e 0000     		.2byte	0
 4308 0010 00000000 		.4byte	.LFB21
 4309 0014 CC000000 		.4byte	.LFE21-.LFB21
 4310 0018 00000000 		.4byte	.LFB22
 4311 001c 4C000000 		.4byte	.LFE22-.LFB22
 4312 0020 00000000 		.4byte	.LFB19
 4313 0024 E0000000 		.4byte	.LFE19-.LFB19
 4314 0028 00000000 		.4byte	.LFB0
 4315 002c C4000000 		.4byte	.LFE0-.LFB0
 4316 0030 00000000 		.4byte	.LFB1
 4317 0034 D8000000 		.4byte	.LFE1-.LFB1
 4318 0038 00000000 		.4byte	.LFB2
 4319 003c 28000000 		.4byte	.LFE2-.LFB2
 4320 0040 00000000 		.4byte	.LFB3
 4321 0044 E4000000 		.4byte	.LFE3-.LFB3
 4322 0048 00000000 		.4byte	.LFB4
 4323 004c 18000000 		.4byte	.LFE4-.LFB4
 4324 0050 00000000 		.4byte	.LFB5
 4325 0054 18000000 		.4byte	.LFE5-.LFB5
 4326 0058 00000000 		.4byte	.LFB6
 4327 005c 74000000 		.4byte	.LFE6-.LFB6
 4328 0060 00000000 		.4byte	.LFB7
 4329 0064 24000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 113


 4330 0068 00000000 		.4byte	.LFB8
 4331 006c 10000000 		.4byte	.LFE8-.LFB8
 4332 0070 00000000 		.4byte	.LFB9
 4333 0074 10000000 		.4byte	.LFE9-.LFB9
 4334 0078 00000000 		.4byte	.LFB10
 4335 007c 30000000 		.4byte	.LFE10-.LFB10
 4336 0080 00000000 		.4byte	.LFB11
 4337 0084 48000000 		.4byte	.LFE11-.LFB11
 4338 0088 00000000 		.4byte	.LFB12
 4339 008c 50000000 		.4byte	.LFE12-.LFB12
 4340 0090 00000000 		.4byte	.LFB13
 4341 0094 6C000000 		.4byte	.LFE13-.LFB13
 4342 0098 00000000 		.4byte	.LFB14
 4343 009c 0C000000 		.4byte	.LFE14-.LFB14
 4344 00a0 00000000 		.4byte	.LFB15
 4345 00a4 0C000000 		.4byte	.LFE15-.LFB15
 4346 00a8 00000000 		.4byte	.LFB16
 4347 00ac 24000000 		.4byte	.LFE16-.LFB16
 4348 00b0 00000000 		.4byte	.LFB17
 4349 00b4 28000000 		.4byte	.LFE17-.LFB17
 4350 00b8 00000000 		.4byte	.LFB18
 4351 00bc 4C000000 		.4byte	.LFE18-.LFB18
 4352 00c0 00000000 		.4byte	.LFB20
 4353 00c4 60000000 		.4byte	.LFE20-.LFB20
 4354 00c8 00000000 		.4byte	.LFB23
 4355 00cc 28000000 		.4byte	.LFE23-.LFB23
 4356 00d0 00000000 		.4byte	.LFB24
 4357 00d4 28000000 		.4byte	.LFE24-.LFB24
 4358 00d8 00000000 		.4byte	.LFB25
 4359 00dc 28000000 		.4byte	.LFE25-.LFB25
 4360 00e0 00000000 		.4byte	0
 4361 00e4 00000000 		.4byte	0
 4362              		.section	.debug_ranges,"",%progbits
 4363              	.Ldebug_ranges0:
 4364 0000 00000000 		.4byte	.LFB21
 4365 0004 CC000000 		.4byte	.LFE21
 4366 0008 00000000 		.4byte	.LFB22
 4367 000c 4C000000 		.4byte	.LFE22
 4368 0010 00000000 		.4byte	.LFB19
 4369 0014 E0000000 		.4byte	.LFE19
 4370 0018 00000000 		.4byte	.LFB0
 4371 001c C4000000 		.4byte	.LFE0
 4372 0020 00000000 		.4byte	.LFB1
 4373 0024 D8000000 		.4byte	.LFE1
 4374 0028 00000000 		.4byte	.LFB2
 4375 002c 28000000 		.4byte	.LFE2
 4376 0030 00000000 		.4byte	.LFB3
 4377 0034 E4000000 		.4byte	.LFE3
 4378 0038 00000000 		.4byte	.LFB4
 4379 003c 18000000 		.4byte	.LFE4
 4380 0040 00000000 		.4byte	.LFB5
 4381 0044 18000000 		.4byte	.LFE5
 4382 0048 00000000 		.4byte	.LFB6
 4383 004c 74000000 		.4byte	.LFE6
 4384 0050 00000000 		.4byte	.LFB7
 4385 0054 24000000 		.4byte	.LFE7
 4386 0058 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 114


 4387 005c 10000000 		.4byte	.LFE8
 4388 0060 00000000 		.4byte	.LFB9
 4389 0064 10000000 		.4byte	.LFE9
 4390 0068 00000000 		.4byte	.LFB10
 4391 006c 30000000 		.4byte	.LFE10
 4392 0070 00000000 		.4byte	.LFB11
 4393 0074 48000000 		.4byte	.LFE11
 4394 0078 00000000 		.4byte	.LFB12
 4395 007c 50000000 		.4byte	.LFE12
 4396 0080 00000000 		.4byte	.LFB13
 4397 0084 6C000000 		.4byte	.LFE13
 4398 0088 00000000 		.4byte	.LFB14
 4399 008c 0C000000 		.4byte	.LFE14
 4400 0090 00000000 		.4byte	.LFB15
 4401 0094 0C000000 		.4byte	.LFE15
 4402 0098 00000000 		.4byte	.LFB16
 4403 009c 24000000 		.4byte	.LFE16
 4404 00a0 00000000 		.4byte	.LFB17
 4405 00a4 28000000 		.4byte	.LFE17
 4406 00a8 00000000 		.4byte	.LFB18
 4407 00ac 4C000000 		.4byte	.LFE18
 4408 00b0 00000000 		.4byte	.LFB20
 4409 00b4 60000000 		.4byte	.LFE20
 4410 00b8 00000000 		.4byte	.LFB23
 4411 00bc 28000000 		.4byte	.LFE23
 4412 00c0 00000000 		.4byte	.LFB24
 4413 00c4 28000000 		.4byte	.LFE24
 4414 00c8 00000000 		.4byte	.LFB25
 4415 00cc 28000000 		.4byte	.LFE25
 4416 00d0 00000000 		.4byte	0
 4417 00d4 00000000 		.4byte	0
 4418              		.section	.debug_line,"",%progbits
 4419              	.Ldebug_line0:
 4420 0000 4D030000 		.section	.debug_str,"MS",%progbits,1
 4420      02008900 
 4420      00000201 
 4420      FB0E0D00 
 4420      01010101 
 4421              	.LASF11:
 4422 0000 75696E74 		.ascii	"uint16\000"
 4422      313600
 4423              	.LASF67:
 4424 0007 61646347 		.ascii	"adcGain\000"
 4424      61696E00 
 4425              	.LASF92:
 4426 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 4426      69744372 
 4426      69746963 
 4426      616C5365 
 4426      6374696F 
 4427              	.LASF27:
 4428 0025 696E7075 		.ascii	"inputRange\000"
 4428      7452616E 
 4428      676500
 4429              	.LASF71:
 4430 0030 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4430      436F756E 
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 115


 4430      7473546F 
 4430      5F566F6C 
 4430      747300
 4431              	.LASF85:
 4432 0043 4144435F 		.ascii	"ADC_stopConversion\000"
 4432      73746F70 
 4432      436F6E76 
 4432      65727369 
 4432      6F6E00
 4433              	.LASF86:
 4434 0056 4144435F 		.ascii	"ADC_started\000"
 4434      73746172 
 4434      74656400 
 4435              	.LASF80:
 4436 0062 4144435F 		.ascii	"ADC_Read16\000"
 4436      52656164 
 4436      313600
 4437              	.LASF24:
 4438 006d 67636F72 		.ascii	"gcor\000"
 4438      00
 4439              	.LASF41:
 4440 0072 4144435F 		.ascii	"ADC_Init\000"
 4440      496E6974 
 4440      00
 4441              	.LASF8:
 4442 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4442      206C6F6E 
 4442      6720756E 
 4442      7369676E 
 4442      65642069 
 4443              	.LASF87:
 4444 0092 4144435F 		.ascii	"ADC_Config\000"
 4444      436F6E66 
 4444      696700
 4445              	.LASF56:
 4446 009d 4144435F 		.ascii	"ADC_StartConvert\000"
 4446      53746172 
 4446      74436F6E 
 4446      76657274 
 4446      00
 4447              	.LASF29:
 4448 00ae 69646561 		.ascii	"idealOddDecGain\000"
 4448      6C4F6464 
 4448      44656347 
 4448      61696E00 
 4449              	.LASF7:
 4450 00be 6C6F6E67 		.ascii	"long long int\000"
 4450      206C6F6E 
 4450      6720696E 
 4450      7400
 4451              	.LASF1:
 4452 00cc 7369676E 		.ascii	"signed char\000"
 4452      65642063 
 4452      68617200 
 4453              	.LASF51:
 4454 00d8 73746174 		.ascii	"status\000"
 4454      757300
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 116


 4455              	.LASF45:
 4456 00df 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4456      53657442 
 4456      75666665 
 4456      72476169 
 4456      6E00
 4457              	.LASF99:
 4458 00f1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC.c\000"
 4458      6E657261 
 4458      7465645F 
 4458      536F7572 
 4458      63655C50 
 4459              	.LASF15:
 4460 0110 696E7433 		.ascii	"int32\000"
 4460      3200
 4461              	.LASF43:
 4462 0116 4144435F 		.ascii	"ADC_Start\000"
 4462      53746172 
 4462      7400
 4463              	.LASF84:
 4464 0120 4144435F 		.ascii	"ADC_convDone\000"
 4464      636F6E76 
 4464      446F6E65 
 4464      00
 4465              	.LASF5:
 4466 012d 6C6F6E67 		.ascii	"long int\000"
 4466      20696E74 
 4466      00
 4467              	.LASF73:
 4468 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4468      436F756E 
 4468      7473546F 
 4468      5F75566F 
 4468      6C747300 
 4469              	.LASF20:
 4470 014a 72656731 		.ascii	"reg16\000"
 4470      3600
 4471              	.LASF10:
 4472 0150 75696E74 		.ascii	"uint8\000"
 4472      3800
 4473              	.LASF91:
 4474 0156 43794465 		.ascii	"CyDelayUs\000"
 4474      6C617955 
 4474      7300
 4475              	.LASF17:
 4476 0160 646F7562 		.ascii	"double\000"
 4476      6C6500
 4477              	.LASF63:
 4478 0167 4144435F 		.ascii	"ADC_GetResult32\000"
 4478      47657452 
 4478      6573756C 
 4478      74333200 
 4479              	.LASF72:
 4480 0177 566F6C74 		.ascii	"Volts\000"
 4480      7300
 4481              	.LASF12:
 4482 017d 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 117


 4482      333200
 4483              	.LASF102:
 4484 0184 4379496E 		.ascii	"CyIntSetVector\000"
 4484      74536574 
 4484      56656374 
 4484      6F7200
 4485              	.LASF83:
 4486 0193 4144435F 		.ascii	"ADC_initVar\000"
 4486      696E6974 
 4486      56617200 
 4487              	.LASF37:
 4488 019f 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4488      53657444 
 4488      534D5265 
 4488      66305265 
 4488      6700
 4489              	.LASF38:
 4490 01b1 76616C75 		.ascii	"value\000"
 4490      6500
 4491              	.LASF59:
 4492 01b7 7265744D 		.ascii	"retMode\000"
 4492      6F646500 
 4493              	.LASF95:
 4494 01bf 4144435F 		.ascii	"ADC_theACLK_SetDividerRegister\000"
 4494      74686541 
 4494      434C4B5F 
 4494      53657444 
 4494      69766964 
 4495              	.LASF9:
 4496 01de 756E7369 		.ascii	"unsigned int\000"
 4496      676E6564 
 4496      20696E74 
 4496      00
 4497              	.LASF74:
 4498 01eb 75566F6C 		.ascii	"uVolts\000"
 4498      747300
 4499              	.LASF6:
 4500 01f2 6C6F6E67 		.ascii	"long unsigned int\000"
 4500      20756E73 
 4500      69676E65 
 4500      6420696E 
 4500      7400
 4501              	.LASF101:
 4502 0204 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4502      74657243 
 4502      72697469 
 4502      63616C53 
 4502      65637469 
 4503              	.LASF26:
 4504 021b 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4504      47434F52 
 4504      5F535452 
 4504      55435400 
 4505              	.LASF81:
 4506 022b 4144435F 		.ascii	"ADC_Read32\000"
 4506      52656164 
 4506      333200
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 118


 4507              	.LASF4:
 4508 0236 73686F72 		.ascii	"short unsigned int\000"
 4508      7420756E 
 4508      7369676E 
 4508      65642069 
 4508      6E7400
 4509              	.LASF13:
 4510 0249 696E7438 		.ascii	"int8\000"
 4510      00
 4511              	.LASF57:
 4512 024e 4144435F 		.ascii	"ADC_StopConvert\000"
 4512      53746F70 
 4512      436F6E76 
 4512      65727400 
 4513              	.LASF34:
 4514 025e 67636F72 		.ascii	"gcorValue\000"
 4514      56616C75 
 4514      6500
 4515              	.LASF36:
 4516 0268 4144435F 		.ascii	"ADC_GainCompensation\000"
 4516      4761696E 
 4516      436F6D70 
 4516      656E7361 
 4516      74696F6E 
 4517              	.LASF32:
 4518 027d 666C6173 		.ascii	"flash\000"
 4518      6800
 4519              	.LASF21:
 4520 0283 72656733 		.ascii	"reg32\000"
 4520      3200
 4521              	.LASF16:
 4522 0289 666C6F61 		.ascii	"float32\000"
 4522      74333200 
 4523              	.LASF23:
 4524 0291 73697A65 		.ascii	"sizetype\000"
 4524      74797065 
 4524      00
 4525              	.LASF53:
 4526 029a 4144435F 		.ascii	"ADC_SetGCOR\000"
 4526      53657447 
 4526      434F5200 
 4527              	.LASF58:
 4528 02a6 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4528      4973456E 
 4528      64436F6E 
 4528      76657273 
 4528      696F6E00 
 4529              	.LASF82:
 4530 02ba 4144435F 		.ascii	"ADC_gcor\000"
 4530      67636F72 
 4530      00
 4531              	.LASF40:
 4532 02c3 4144435F 		.ascii	"ADC_InitConfig\000"
 4532      496E6974 
 4532      436F6E66 
 4532      696700
 4533              	.LASF60:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 119


 4534 02d2 4144435F 		.ascii	"ADC_GetResult8\000"
 4534      47657452 
 4534      6573756C 
 4534      743800
 4535              	.LASF97:
 4536 02e1 4144435F 		.ascii	"ADC_theACLK_SetModeRegister\000"
 4536      74686541 
 4536      434C4B5F 
 4536      5365744D 
 4536      6F646552 
 4537              	.LASF49:
 4538 02fd 636F6865 		.ascii	"coherency\000"
 4538      72656E63 
 4538      7900
 4539              	.LASF103:
 4540 0307 4379496E 		.ascii	"CyIntSetPriority\000"
 4540      74536574 
 4540      5072696F 
 4540      72697479 
 4540      00
 4541              	.LASF46:
 4542 0318 6761696E 		.ascii	"gain\000"
 4542      00
 4543              	.LASF66:
 4544 031d 4144435F 		.ascii	"ADC_SetGain\000"
 4544      53657447 
 4544      61696E00 
 4545              	.LASF0:
 4546 0329 666C6F61 		.ascii	"float\000"
 4546      7400
 4547              	.LASF68:
 4548 032f 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4548      436F756E 
 4548      7473546F 
 4548      5F6D566F 
 4548      6C747300 
 4549              	.LASF19:
 4550 0343 72656738 		.ascii	"reg8\000"
 4550      00
 4551              	.LASF28:
 4552 0348 69646561 		.ascii	"idealDecGain\000"
 4552      6C446563 
 4552      4761696E 
 4552      00
 4553              	.LASF33:
 4554 0355 6E6F726D 		.ascii	"normalised\000"
 4554      616C6973 
 4554      656400
 4555              	.LASF90:
 4556 0360 43794861 		.ascii	"CyHalt\000"
 4556      6C7400
 4557              	.LASF2:
 4558 0367 756E7369 		.ascii	"unsigned char\000"
 4558      676E6564 
 4558      20636861 
 4558      7200
 4559              	.LASF77:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 120


 4560 0375 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4560      53656C65 
 4560      6374436F 
 4560      6E666967 
 4560      75726174 
 4561              	.LASF3:
 4562 038d 73686F72 		.ascii	"short int\000"
 4562      7420696E 
 4562      7400
 4563              	.LASF44:
 4564 0397 4144435F 		.ascii	"ADC_Stop\000"
 4564      53746F70 
 4564      00
 4565              	.LASF35:
 4566 03a0 67636F72 		.ascii	"gcorTmp\000"
 4566      546D7000 
 4567              	.LASF96:
 4568 03a8 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetModeRegister\000"
 4568      4578745F 
 4568      43505F43 
 4568      6C6B5F53 
 4568      65744D6F 
 4569              	.LASF70:
 4570 03c7 6D566F6C 		.ascii	"mVolts\000"
 4570      747300
 4571              	.LASF93:
 4572 03ce 4144435F 		.ascii	"ADC_AMux_Select\000"
 4572      414D7578 
 4572      5F53656C 
 4572      65637400 
 4573              	.LASF30:
 4574 03de 7265736F 		.ascii	"resolution\000"
 4574      6C757469 
 4574      6F6E00
 4575              	.LASF88:
 4576 03e9 4144435F 		.ascii	"ADC_Offset\000"
 4576      4F666673 
 4576      657400
 4577              	.LASF75:
 4578 03f4 636F6566 		.ascii	"coefA\000"
 4578      4100
 4579              	.LASF76:
 4580 03fa 636F6566 		.ascii	"coefB\000"
 4580      4200
 4581              	.LASF94:
 4582 0400 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetDividerRegister\000"
 4582      4578745F 
 4582      43505F43 
 4582      6C6B5F53 
 4582      65744469 
 4583              	.LASF18:
 4584 0422 63686172 		.ascii	"char\000"
 4584      00
 4585              	.LASF55:
 4586 0427 6756616C 		.ascii	"gValue\000"
 4586      756500
 4587              	.LASF22:
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 121


 4588 042e 63796973 		.ascii	"cyisraddress\000"
 4588      72616464 
 4588      72657373 
 4588      00
 4589              	.LASF31:
 4590 043b 636F6E66 		.ascii	"config\000"
 4590      696700
 4591              	.LASF25:
 4592 0442 6776616C 		.ascii	"gval\000"
 4592      00
 4593              	.LASF78:
 4594 0447 72657374 		.ascii	"restart\000"
 4594      61727400 
 4595              	.LASF52:
 4596 044f 746D7056 		.ascii	"tmpValue\000"
 4596      616C7565 
 4596      00
 4597              	.LASF65:
 4598 0458 6F666673 		.ascii	"offset\000"
 4598      657400
 4599              	.LASF48:
 4600 045f 4144435F 		.ascii	"ADC_SetCoherency\000"
 4600      53657443 
 4600      6F686572 
 4600      656E6379 
 4600      00
 4601              	.LASF79:
 4602 0470 4144435F 		.ascii	"ADC_Read8\000"
 4602      52656164 
 4602      3800
 4603              	.LASF69:
 4604 047a 61646343 		.ascii	"adcCounts\000"
 4604      6F756E74 
 4604      7300
 4605              	.LASF100:
 4606 0484 433A5C55 		.ascii	"C:\\Users\\Ian\\Documents\\Junior\\Chip-Design\\pro"
 4606      73657273 
 4606      5C49616E 
 4606      5C446F63 
 4606      756D656E 
 4607 04b1 6A5F6173 		.ascii	"j_asic\\psoc\\Wave Generator\\Wave Generator.cydsn\000"
 4607      69635C70 
 4607      736F635C 
 4607      57617665 
 4607      2047656E 
 4608              	.LASF39:
 4609 04e1 656E6162 		.ascii	"enableInterrupts\000"
 4609      6C65496E 
 4609      74657272 
 4609      75707473 
 4609      00
 4610              	.LASF42:
 4611 04f2 4144435F 		.ascii	"ADC_Enable\000"
 4611      456E6162 
 4611      6C6500
 4612              	.LASF98:
 4613 04fd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\Ian\AppData\Local\Temp\ccqz0Tnw.s 			page 122


 4613      4320342E 
 4613      392E3320 
 4613      32303135 
 4613      30333033 
 4614 0530 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4614      20726576 
 4614      6973696F 
 4614      6E203232 
 4614      31323230 
 4615 0563 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4615      66756E63 
 4615      74696F6E 
 4615      2D736563 
 4615      74696F6E 
 4616              	.LASF54:
 4617 058b 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4617      52656164 
 4617      47434F52 
 4617      00
 4618              	.LASF50:
 4619 0598 6761696E 		.ascii	"gainAdjust\000"
 4619      41646A75 
 4619      737400
 4620              	.LASF14:
 4621 05a3 696E7431 		.ascii	"int16\000"
 4621      3600
 4622              	.LASF64:
 4623 05a9 4144435F 		.ascii	"ADC_SetOffset\000"
 4623      5365744F 
 4623      66667365 
 4623      7400
 4624              	.LASF89:
 4625 05b7 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4625      436F756E 
 4625      74735065 
 4625      72566F6C 
 4625      7400
 4626              	.LASF47:
 4627 05c9 746D7052 		.ascii	"tmpReg\000"
 4627      656700
 4628              	.LASF61:
 4629 05d0 72657375 		.ascii	"result\000"
 4629      6C7400
 4630              	.LASF62:
 4631 05d7 4144435F 		.ascii	"ADC_GetResult16\000"
 4631      47657452 
 4631      6573756C 
 4631      74313600 
 4632              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
